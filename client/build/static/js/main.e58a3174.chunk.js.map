{"version":3,"sources":["components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/Form/Input.js","components/Form/Button.js","components/Form/TextArea.js","utils/API.js","pages/landing-page/landing-page.js","components/BugCommentContainer/BugCommentContainer.js","components/BugCommentContainer/BugCommentPanel.js","pages/bug-view/bug-view.js","pages/create-bug/create-bug.js","pages/profile/profile.js","App.js","index.js"],"names":["Col","props","className","size","split","map","join","children","Container","id","fluid","Row","Input","formgroupclass","htmlFor","label","isvalid","fielderror","Button","TextArea","rows","console","log","axios","get","userObj","post","userData","bugData","organizationMongoID","bugCommentData","_id","bugAndCommentData","mongoID","organizationData","LandingPage","formatInput","event","attribute","target","getAttribute","setState","value","trim","handleFormSubmit","preventDefault","state","emailAddress","loginButtonClicked","_login","password","forgotPasswordButtonClicked","sendForgotPasswordEmail","saveUser","handleLoginButtonClick","loginOrCreateAccountButtonClicked","handleCreateAccountButtonClick","handleForgotPasswordButtonClick","createAccount","firstName","lastName","phoneNumber","guestCount","formErrors","redirectTo","firstNameValid","lastNameValid","passwordValid","emailAddressValid","phoneNumberValid","guestCountValid","e","this","fieldValidationErrors","match","length","setCookieAndChangePage","error","obj","numbers","replace","substring","char","0","3","6","i","email","API","then","response","data","errorResponse","userId","username","user_email","user_address","address","user_city","city","user_state","user_zip","zip","cookies","Cookies","charAt","toUpperCase","slice","set","path","history","push","to","pathname","onBlur","bind","toString","errorClass","onChange","handleChange","name","onClick","Component","withRouter","BugCommentContainer","BugCommentPanel","text","BugViewPage","delta","count","validateFields","saveNewBugInDB","bugObj","bugTitle","bugTitleInModal","bugDescription","bugDescriptionInModal","userAssigned","bugUserAssignedInModal","status","bugStatusInModal","bugDoc","newMongoID","currentBugIndex","isCompleted","showModal","forceUpdate","updateBugInDB","selectedBug","index","completedBugData","currentCompletedBugIndex","indexOf","splice","updateOrCreateBug","bugTitleValid","isNewBug","closeModal","currentBugCommentInModal","currentIndex","createNewBugButton","currentModalTitle","swapRenderCompletedBugs","showCompletedBugs","swapRenderActiveBugs","showActiveBugs","isLogin","showModal2","filteredCompletedBugData","filteredBugData","bugCommentsInModal","users","userFilter","statusFilter","organizationNameInTitle","isCurrentBugCompleted","bugArrayFromDB","bugs","completedBugs","putAllBugsIntoFilteredArray","organizationDoc","catch","err","bugClickedOn","bugMongoID","deletedBugDoc","deletedCount","adjustBugDataOrder","currentBug","res","renderBugComments","bugComments","bugComment","deleteBugInDB","location","organizationName","getBugsFromDB","bug","j","assigneeFilterIsActive","statusFilterIsActive","href","type","scope","key","checked","completedCheck","variant","editBugButton","deleteBugButton","Modal","show","animation","Header","Title","Body","boundBugCommentClick","deleteBugComment","placeholder","addBugComment","Footer","sampleBugViewTableData","BugTitle","BugDescription","Profile","handleChangePasswordButtonClick","setPasswordFieldsActiveInModal","updatePasswordInDB","oldPassword","newPassword","newPassword1","organizationIDValid","organizationNameValid","newPassword1and2Valid","newPassword1and2","organizationID","handleCreateOrganizationButtonClick","setCreateOrganizationFieldsActiveInModal","setJoinOrganizationFieldsActiveInModal","organizationIDInModal","organizationNameInModal","handleJoinOrganizationButtonClick","handleSubmitButtonInModalClick","loggedIn","setEditOrganizationFieldsActiveInModal","newPassword2","organizationMongoIDInModal","oldPasswordValid","organizations","getOrganizationsOfUserInDB","newPassword1Valid","attachUserToOrganizationInDB","saveOrganizationInDB","updateOrganizationInDB","organizationClickedOn","isUserOrganizationOwner","userWhoCreatedOrgMongoID","organizationObj","userMongoID","organization","handleEditOrganizationButtonClick","handleDeleteOrganizationInDB","App","user","loggedInSuccess","exact","render","component","BugView","CreateBug","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e58a3174.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Col = props =>\n  <div className={props.size.split(\" \").map(size => \"col-\" + size).join(\" \")} {...props}>\n    {props.children}\n  </div>;\n","import React from \"react\";\n\nexport const Container = props =>\n  <div id={props.id} className={`container${props.fluid === \"true\"  ? \"-fluid\" : \"\"}`} {...props}>\n    {props.children}\n  </div>;\n","import React from \"react\";\n//({ fluid, children, props })\nexport const Row = props =>\n  <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props}> \n    {props.children}\n  </div>;\n","import React from \"react\";\n\nexport const Input = props =>\n  <div className={props.formgroupclass}>\n\n    <label htmlFor=\"inputField\">{props.label}</label>\n    <input className=\"form-control\" id=\"inputField\" {...props} />\n    {props.isvalid === \"true\" ? \"\" : <span className=\"help-block\">{props.fielderror}</span>}\n  </div>;\n","import React from \"react\";\n\nexport const Button = props =>\n  <button {...props} className=\"btn btn-pill btn-light btn-lg\">\n    {props.children}\n  </button>;\n","import React from \"react\";\r\n\r\nexport const TextArea = props =>\r\n    <div className={props.formgroupclass}>\r\n        <label htmlFor=\"bugDescriptionField\">{props.label}</label>\r\n        <textarea className=\"form-control\" id=\"bugDescriptionField\" rows=\"5\" {...props}></textarea>\r\n        {props.isvalid === \"true\" ? \"\" : <span className=\"help-block\">{props.fielderror}</span>}\r\n    </div>;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n    // USER CALLS  -----\r\n    user: function () {\r\n        console.log(\"i'm in API.js file, calling user\");\r\n        return axios.get(\"/api/user\");\r\n    },\r\n    sendForgotPasswordEmail(userObj) {\r\n        console.log(\"i'm in API.JS on the front end\");\r\n        return axios.post(\"/api/user/sendForgotPasswordEmail\", userObj);\r\n    },\r\n    updateUserInDB(userObj){\r\n        return axios.post(\"/api/user/updateUser\", userObj);\r\n    },\r\n    login: function (userData) {\r\n        console.log(\"LoginAPI\")\r\n        console.log(userData);\r\n        // return axios.get(\"/api/user/login\");\r\n        return axios.post(\"/api/user/login\", userData)\r\n    },\r\n    saveUser: function (userData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/user/saveUser\", userData);\r\n    },\r\n\r\n    //BUG CALL --------\r\n    saveBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/saveBug\", bugData);\r\n    },\r\n    updateBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/updateBug\", bugData);\r\n    },\r\n    deleteBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/deleteBug\", bugData);\r\n    },\r\n    getAllBugs: function (organizationMongoID) {\r\n        console.log(\"I'm in the GETALLBUGS method on API.js, below is organizationMongoID\");\r\n        console.log(organizationMongoID);\r\n        //TODO - Set up organization ID query\r\n        //Query db to get all bugs\r\n        return axios.get(\"/api/bug/getAllBugs/\" + organizationMongoID);\r\n    },\r\n    \r\n\r\n    // BUG COMMENT CALLS -------\r\n    deleteBugComment: function (bugCommentData) {\r\n        console.log(\"I'm in deleteBugComment Api.js\");\r\n        console.log(bugCommentData)\r\n        return axios.post(\"/api/bug/deleteBugComment/\" + bugCommentData._id);\r\n    },\r\n    saveBugComment: function(bugAndCommentData) {\r\n        return axios.post(\"/api/bug/saveBugComment\", bugAndCommentData);\r\n    },\r\n    getBugComments: function(bugData) {\r\n        console.log(\"I'm in getbugcomments front end API.JS\");\r\n        console.log(bugData.mongoID);\r\n        return axios.get(\"/api/bug/getBugComments/\" + bugData.mongoID);\r\n    },\r\n\r\n    // ORGANiZATION CALLS\r\n    saveOrganizationInDB: function(userData) {\r\n        console.log(\"I'm in the saveOrganizationInDB method in API file\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/organization/saveOrganization\", userData);\r\n    },\r\n    getOrganizationsOfUserInDB: function(userData){\r\n        console.log(\"I'm in the getOrganizationsOfUserInDB method in API file\");\r\n        console.log(userData);\r\n        return axios.get(\"/api/organization/getAllOrganizationsOfUser/\" + userData.mongoID);\r\n    },\r\n    attachUserToOrganizationInDB: function (userData) {\r\n        console.log(\"I'm in the attachUserToOrganizationInDB method in API file\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/organization/attachUserToOrganization\", userData);\r\n    },\r\n    deleteOrganizationInDB: function(organizationData){\r\n        console.log(\"I'm in the delete Organization In DB method\");\r\n        console.log(organizationData);\r\n        return axios.post(\"/api/organization/deleteOrganization\", organizationData);\r\n    },\r\n    updateOrganizationInDB: function(userData){\r\n        console.log(\"I'm in the update Organization in DB method\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/organization/updateOrganization\", userData)\r\n    }\r\n\r\n};","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { Input, Button } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { withRouter } from 'react-router';\r\n\r\nimport \"./landing-page.css\";\r\nclass LandingPage extends Component {\r\n    constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        emailAddress: \"\",\r\n        password: \"\",\r\n        phoneNumber: \"\",\r\n        guestCount: \"\",\r\n        formErrors: {firstName: \"\", lastName: \"\", emailAddress:\"\", phoneNumber:\"\", guestCount:\"\", password:\"\"},\r\n          redirectTo: null,\r\n        firstNameValid: false,\r\n        lastNameValid: false,\r\n        passwordValid: false,\r\n        emailAddressValid: false,\r\n        phoneNumberValid: false,\r\n        guestCountValid: false,\r\n        loginOrCreateAccountButtonClicked: false,\r\n        loginButtonClicked: true,\r\n        forgotPasswordButtonClicked: false\r\n    };\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    } \r\n\r\n    validateFields() {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let emailAddressValid = this.state.emailAddressValid;\r\n        let firstNameValid = this.state.firstNameValid;\r\n        let lastNameValid = this.state.lastNameValid;\r\n        let phoneNumberValid = this.state.phoneNumberValid;\r\n        let guestCountValid = this.state.guestCountValid;\r\n        let passwordValid = this.state.passwordValid;\r\n\r\n        //Validating email using Regex\r\n        let matchArray = this.state.emailAddress.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n        if(matchArray !== null) {\r\n            emailAddressValid = true;\r\n        }\r\n        fieldValidationErrors.emailAddress = emailAddressValid ? \"\" : \"Please provide a valid email\";\r\n\r\n        //Validating First Name by checking if there is anything there.\r\n        firstNameValid = this.state.firstName.length >0;\r\n        fieldValidationErrors.firstName = firstNameValid ? \"\": \"Please provide your first name\";\r\n\r\n        //Validating Last Name by checking if there is anything there.\r\n        lastNameValid = this.state.lastName.length > 0;\r\n        fieldValidationErrors.lastName = lastNameValid ? \"\":\"Please provide your last name\";\r\n\r\n        //Validating phone number by checking if there are 16 digits. (counting the special characters besides the digits.)\r\n        phoneNumberValid = this.state.phoneNumber.length===16;\r\n        fieldValidationErrors.phoneNumber = phoneNumberValid ? \"\":\"Please provide a phone number\";\r\n\r\n        //validating password\r\n        passwordValid = this.state.password.length === 2;\r\n        fieldValidationErrors.password = passwordValid ? \"\" : \"Please provide a password\";\r\n\r\n        //Validate guest count by checking if user made a selection.\r\n        guestCountValid = true;\r\n        if(this.state.guestCount === \"\" || this.state.guestCount===\"Select\"){\r\n            guestCountValid = false;\r\n        }\r\n        fieldValidationErrors.guestCount = guestCountValid ? \"\": \"Please provide guest count\";\r\n\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            emailAddressValid: emailAddressValid,\r\n            firstNameValid: firstNameValid,\r\n            lastNameValid: lastNameValid,\r\n            phoneNumberValid: phoneNumberValid,\r\n            guestCountValid: guestCountValid,\r\n            passwordValid: passwordValid\r\n        }, () => {\r\n            this.setCookieAndChangePage();\r\n        });    \r\n    }\r\n\r\n    //Here we check if the field has an error. If it does, it will add the \"has-error\" class to the field.\r\n    //\"has-error\" is a default bootstrap class that will nicely color the outline of the field red to indicate an error for the user. \r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    formatPhone(obj) {\r\n        if(obj == null){\r\n            return;\r\n        }\r\n        var numbers = obj.state.phoneNumber.replace(/\\D/g, \"\").substring(0,10),\r\n            char = { 0: \"(\", 3: \") \", 6: \" - \" };\r\n        obj.state.phoneNumber = \"\";\r\n        for (var i = 0; i < numbers.length; i++) { \r\n            obj.state.phoneNumber += (char[i] || \"\") + numbers[i];    \r\n        }\r\n    }\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();    \r\n        //this.validateFields();\r\n        console.log(\"I'm in handle form submit\");\r\n        console.log(this.state.emailAddress);\r\n\r\n        if(this.state.loginButtonClicked){\r\n            //If the login button is clicked then we want submit LOGIN request, which is different than Create Account request\r\n            this.props._login(this.state.emailAddress, this.state.password)\r\n        } else if(this.state.forgotPasswordButtonClicked){\r\n            this.sendForgotPasswordEmail();\r\n\r\n        }\r\n        else {\r\n            //If Create Account button was clicked, then we want to post the user to the database.\r\n            this.saveUser();\r\n        }\r\n  \r\n    };\r\n\r\n    //LOGIN / CREATE ACCOUNT BUTTONS - Just to set it up so before I actually submit data to DB\r\n    handleLoginButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: true, loginButtonClicked: true, forgotPasswordButtonClicked: false})\r\n\r\n    }\r\n    handleCreateAccountButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: true, loginButtonClicked: false, forgotPasswordButtonClicked: false })\r\n\r\n    }\r\n\r\n    handleForgotPasswordButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: false, loginButtonClicked: false, forgotPasswordButtonClicked: true})\r\n    }\r\n\r\n    createAccount = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginButtonClicked: false});\r\n\r\n    };\r\n\r\n\r\n    sendForgotPasswordEmail() {\r\n        let userObj = {\r\n            email: this.state.emailAddress\r\n        }\r\n\r\n        console.log(\"I'm in SEND FORGOT PASSWROD EMAIL METHOD ON landing-page js\");\r\n\r\n        API.sendForgotPasswordEmail(userObj)\r\n            .then(response => {\r\n\r\n\r\n\r\n                if (!response.data.error) {\r\n                    //userObj.userId = response.data.doc._id;\r\n\r\n                    // this.setState({\r\n                    //     redirectTo: '/profile'\r\n                    // })\r\n                    console.log(\"send forgot password was successful, i'm back at landing-page.js, in API.sendForgotPasswordEmail\");\r\n                    console.log(response);\r\n                } else {\r\n                    console.log(\"error found!!!\");\r\n                    console.log(response);\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n\r\n    saveUser() {\r\n        console.log(\"HELLO?!?!!?!\");\r\n        console.log(this.state.passwordValid + \" passwordvalid?\");\r\n        // if (this.state.passwordValid && this.state.firstNameValid && this.state.lastNameValid) {\r\n\r\n            console.log(\"Called saveUser() from LandingPage  .... BELOW IS THE STATE\");\r\n            console.log(this.state);\r\n            let userObj = {\r\n                userId: null,\r\n                username: this.state.emailAddress,\r\n                password: this.state.password,\r\n                email: this.state.emailAddress,\r\n                user_email: this.state.email,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                user_address: this.state.address,\r\n                user_city: this.state.city,\r\n                user_state: this.state.state,\r\n                user_zip: this.state.zip\r\n            }\r\n            API.saveUser(userObj)\r\n                .then(response => {\r\n\r\n\r\n\r\n                    if (!response.data.error) {\r\n                        //userObj.userId = response.data.doc._id;\r\n\r\n\r\n                        //Now that the user account is created, let's automatically login the user in\r\n                         this.props._login(this.state.emailAddress, this.state.password, userObj);\r\n                        // this.setState({\r\n                        //     redirectTo: '/profile'\r\n                        // })\r\n                        console.log(\"I WAS SUCCESSFUL FROM LANDING PAGE\");\r\n                    } else {\r\n                        this.setState({ errorResponse: response })\r\n                    }\r\n                })\r\n\r\n        // }\r\n    }\r\n    setCookieAndChangePage() {\r\n\r\n        //This function will be called once all fields are validated. If any are not valid, the binary \"valid\" variable will be false.\r\n        if (this.state.firstNameValid && this.state.lastNameValid && this.state.emailAddressValid && this.state.phoneNumberValid && this.state.guestCountValid) {\r\n\r\n            const cookies = new Cookies();\r\n\r\n            var userObj = {\r\n                \"firstName\": this.state.firstName.charAt(0).toUpperCase() + this.state.firstName.slice(1),\r\n                \"lastName\": this.state.lastName.charAt(0).toUpperCase() + this.state.lastName.slice(1),\r\n                \"emailAddress\": this.state.emailAddress,\r\n                \"phoneNumber\": this.state.phoneNumber,\r\n                \"guestCount\": this.state.guestCount\r\n            }\r\n\r\n            cookies.set(\"demo-requested\", userObj, { path: \"/\" });\r\n            this.props.history.push(\"/thank-you\");\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"component has mounted\");\r\n        console.log(this);\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    render() {\r\n\r\n        if (this.props.redirectTo) {\r\n            console.log(\"THIS . PROPS. REDIRECT EXISTS IN LANDING PAGE!!!\");\r\n            console.log(this.props.redirectTo);\r\n            return <Redirect to={{ pathname: this.props.redirectTo }} />\r\n        } else {\r\n        return (\r\n            <Container id=\"container\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n\r\n                    <hr id=\"hline\"></hr>\r\n                    <Col id=\"formCol\" size=\"sm-6\">\r\n                        <h1>BugSlayer</h1>\r\n                        {this.state.loginOrCreateAccountButtonClicked ?\r\n                            <div>\r\n                                {this.state.loginButtonClicked ?\r\n                                    <h1 id=\"formHeader\">Login</h1>\r\n                                    :\r\n                                    <h1 id=\"formHeader\">Create Account</h1>\r\n\r\n                                }\r\n                                <form>\r\n                                    \r\n\r\n                                    {this.state.loginButtonClicked ?\r\n\r\n                                        \"\"\r\n                                        :\r\n\r\n                                        <div>\r\n                                            <p>First Name</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.firstNameValid.toString()} fielderror={this.state.formErrors.firstName} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.firstName)}`} value={this.state.firstName} id=\"firstName\" onChange={this.handleChange.bind(this)} name=\"firstName\"></Input>\r\n\r\n\r\n                                            <p>Last Name</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.lastNameValid.toString()} fielderror={this.state.formErrors.lastName} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.lastName)}`} value={this.state.lastName} id=\"lastName\" onChange={this.handleChange.bind(this)} name=\"lastName\"></Input>\r\n\r\n                                        </div>\r\n\r\n                                    }\r\n\r\n                                    <p>Email Address</p>\r\n                                    <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.emailAddressValid.toString()} fielderror={this.state.formErrors.emailAddress} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.emailAddress)}`} value={this.state.emailAddress} id=\"emailAddress\" onChange={this.handleChange.bind(this)} name=\"emailAddress\"></Input>\r\n\r\n                                    <p>Password</p>\r\n                                    <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.passwordValid.toString()} fielderror={this.state.formErrors.password} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.password)}`} value={this.state.password} id=\"password\" onChange={this.handleChange.bind(this)} name=\"password\"></Input>\r\n\r\n                                    <Button onClick={this.handleFormSubmit.bind(this)}> Submit </Button>\r\n\r\n                                    {this.state.loginButtonClicked ?\r\n                                        <h3 id=\"formFooterLink\" onClick={this.handleCreateAccountButtonClick.bind(this)}>Create Account instead?</h3>\r\n                                        :\r\n                                        <h3 id=\"formFooterLink\" onClick={this.handleLoginButtonClick.bind(this)}>Login instead?</h3>\r\n\r\n                                    }\r\n                                </form>\r\n                            </div>\r\n                            : \r\n\r\n                            <div>\r\n\r\n                                {\r\n                                    this.state.forgotPasswordButtonClicked ?\r\n                                        <div>\r\n\r\n                                            <p><strong>Please enter your email address. If correct, we will send you an email!</strong></p>\r\n                                            <p>Email Address</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.emailAddressValid.toString()} fielderror={this.state.formErrors.emailAddress} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.emailAddress)}`} value={this.state.emailAddress} id=\"emailAddress\" onChange={this.handleChange.bind(this)} name=\"emailAddress\"></Input>\r\n                                            <Button onClick={this.handleFormSubmit.bind(this)}> Submit </Button>\r\n                                            \r\n                                            <h3 id=\"formFooterLink\" onClick={this.handleLoginButtonClick.bind(this)}>Login instead?</h3>\r\n                                            <h3 id=\"formFooterLink\" onClick={this.handleCreateAccountButtonClick.bind(this)}>Create Account instead?</h3>\r\n                                        </div>\r\n                                            :                                                                                \r\n                                             <div>                                \r\n                                            <Button onClick={this.handleLoginButtonClick.bind(this)}> Login </Button>\r\n                                            <Button onClick={this.handleCreateAccountButtonClick.bind(this)}> Create Account </Button>\r\n                                            <Button onClick={this.handleForgotPasswordButtonClick.bind(this)}>Forgot Password?</Button>      \r\n                                            </div>\r\n\r\n\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            </div>\r\n                              \r\n                        }\r\n                        \r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n\r\n                }\r\n    \r\n            }\r\n}\r\n\r\n// export default LandingPage;\r\nexport default withRouter(LandingPage)\r\n","import React from \"react\";\r\n\r\n\r\nexport const BugCommentContainer = ({ children }) => (\r\n    <div id=\"wrapper\">\r\n        <div id=\"bugs\">\r\n            {children}\r\n        </div>\r\n        <div id=\"bugComments\"></div>\r\n    </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const BugCommentPanel = props => (\r\n    <div className='panel panel-default'>\r\n        <div className='panel-body note-panel'>\r\n            <p className=\"comment-text\"> {props.text} </p>\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport {BugCommentContainer, BugCommentPanel } from \"../../components/BugCommentContainer\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./bug-view.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass BugViewPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formErrors: { bugTitle: \"\" },\r\n            bugTitleValid: false,\r\n            isLogin: true,\r\n            isNewBug: false,\r\n            selectedBug: \"\",\r\n            currentModalTitle: \"Edit Bug\",\r\n            currentBugIndex: 0,\r\n            currentCompletedBugIndex: 0,\r\n            showModal: false,\r\n            showModal2: false,\r\n            bugData: [],\r\n            completedBugData: [],\r\n            filteredCompletedBugData: [],\r\n            filteredBugData: [],\r\n            bugTitleInModal: \"\",\r\n            bugCommentsInModal: [],\r\n            users: [{text: 'Tyler', id: '1'}, {text: 'Tawny', id: '2'}, {text: 'Anthony', id: '3'}, {text: 'Arthur', id:'4'}],\r\n            currentBugCommentInModal:\"\",\r\n            bugDescriptionInModal: \"\",\r\n            bugStatusInModal: \"\",\r\n            bugUserAssignedInModal: \"\",\r\n            userFilter: \"\",\r\n            statusFilter: \"\",\r\n            organizationMongoID: \"\",\r\n            organizationNameInTitle: \"\",\r\n            showActiveBugs: true,\r\n            showCompletedBugs: false,\r\n            isCurrentBugCompleted: false\r\n        };\r\n\r\n    }\r\n\r\n    delta = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        });\r\n    }\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    validateFields() {\r\n\r\n        \r\n            let fieldValidationErrors = this.state.formErrors;\r\n            let bugTitleValid = this.state.bugTitleValid;\r\n\r\n\r\n            bugTitleValid = this.state.bugTitleInModal.length > 0;\r\n            fieldValidationErrors.bugTitle = bugTitleValid ? \"\" : \"Please add Bug Title.\";\r\n\r\n\r\n            this.setState({\r\n                formErrors: fieldValidationErrors,\r\n                bugTitleValid: bugTitleValid\r\n            }, () => {\r\n                    this.updateOrCreateBug();\r\n            });\r\n        \r\n\r\n    }\r\n\r\n    //Here we check if the field has an error. If it does, it will add the \"has-error\" class to the field.\r\n    //\"has-error\" is a default bootstrap class that will nicely color the outline of the field red to indicate an error for the user. \r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.validateFields();\r\n    };\r\n\r\n\r\n    //************************** DB METHODS ************** THESE METHODS SAVE, EDIT, GET BUGS FROM DB *******************************************\r\n    saveNewBugInDB = () => {\r\n        console.log(\"Im in saveNewBugIn DB\");\r\n        console.log(bugObj);\r\n\r\n        var bugObj = {\r\n            organizationMongoID: this.state.organizationMongoID,\r\n            bugTitle: this.state.bugTitleInModal,\r\n            bugDescription: this.state.bugDescriptionInModal,\r\n            userAssigned: this.state.bugUserAssignedInModal,\r\n            status: this.state.bugStatusInModal\r\n        }\r\n\r\n        API.saveBug(bugObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"I WAS SUCCESSFUL Saving Bug FROM Bug View PAGE\");\r\n                    console.log(response.data.bugDoc._id);\r\n\r\n\r\n                    bugObj.mongoID = response.data.bugDoc._id;\r\n                    bugObj.newMongoID = response.data.bugDoc._id;\r\n                    bugObj.id = this.state.currentBugIndex;\r\n                    bugObj.isCompleted = response.data.isCompleted;\r\n\r\n                    console.log(bugObj);\r\n\r\n                    this.setState({ showModal: false });\r\n                    this.state.bugData.push(bugObj);\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n\r\n    updateBugInDB = () => {\r\n        console.log(\"I'm in the update bug in DB\");\r\n        console.log(this.state.selectedBug);\r\n        API.updateBug(this.state.selectedBug)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"!!!!!!!!!!!!!!!I WAS SUCCESSFUL UPDATE Bug FROM Bug View PAGE!!!!!!!!!!!!!\");\r\n                    console.log(response.data);\r\n\r\n                    this.setState({ showModal: false });\r\n\r\n\r\n\r\n                    if (this.state.selectedBug.isCompleted){\r\n                        //Once updated we need to update our state's local array\r\n\r\n                        //We add to completed bug\r\n                        this.state.completedBugData[this.state.currentCompletedBugIndex] = this.state.selectedBug;\r\n\r\n                        //we remove from active bug list\r\n                        var index = this.state.bugData.indexOf(this.state.selectedBug);\r\n                        if (index > -1) {\r\n                            this.state.bugData.splice(index, 1);\r\n                        }\r\n                    } else {\r\n                        //Otherwise, if bug is incomplete...\r\n\r\n                        //We add to active bugs\r\n                        this.state.bugData[this.state.currentBugIndex] = this.state.selectedBug;\r\n\r\n                        //We remove from the completed bug list\r\n                        var index = this.state.completedBugData.indexOf(this.state.selectedBug);\r\n                        if (index > -1) {\r\n                            this.state.completedBugData.splice(index, 1);\r\n                        }                   \r\n\r\n                        \r\n                    }\r\n                    \r\n\r\n\r\n\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n    checkBothCompletedAndActiveBugData(bugArrayFromDB){\r\n        var bugs = [];\r\n        var completedBugs = this.state.completedBugData;\r\n        //Loop through bug data received from the server.\r\n        for (var i = 0; i < bugArrayFromDB.length; i++) {\r\n\r\n            //If bug is completed, then we add to separate array for rendering on the UI purposes\r\n            if (bugArrayFromDB[i].isCompleted) {\r\n\r\n                console.log(\"COMPLETED BUG \" + this.state.currentBugIndex);\r\n                console.log(bugArrayFromDB[i]);\r\n                completedBugs.push({\r\n                    mongoID: bugArrayFromDB[i]._id,\r\n                    id: this.state.currentCompletedBugIndex,\r\n                    bugTitle: bugArrayFromDB[i].bugTitle,\r\n                    bugDescription: bugArrayFromDB[i].bugDescription,\r\n                    userAssigned: bugArrayFromDB[i].userAssigned,\r\n                    status: bugArrayFromDB[i].status,\r\n                    isCompleted: bugArrayFromDB[i].isCompleted\r\n                })\r\n\r\n\r\n            } else {\r\n                //If bug is not completed, then we add to separate array\r\n                console.log(\"bug \" + this.state.currentBugIndex);\r\n                console.log(bugArrayFromDB[i]);\r\n                bugs.push({\r\n                    mongoID: bugArrayFromDB[i]._id,\r\n                    id: this.state.currentBugIndex,\r\n                    bugTitle: bugArrayFromDB[i].bugTitle,\r\n                    bugDescription: bugArrayFromDB[i].bugDescription,\r\n                    userAssigned: bugArrayFromDB[i].userAssigned,\r\n                    status: bugArrayFromDB[i].status,\r\n                    isCompleted: bugArrayFromDB[i].isCompleted\r\n                })\r\n\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n            this.setState({ currentBugIndex: this.state.currentBugIndex + 1, currentCompletedBugIndex: this.state.completedBugData + 1 });\r\n\r\n\r\n\r\n\r\n        }\r\n        console.log(\"before I set state, here is completed bugs\");\r\n        console.log(completedBugs);\r\n        this.setState({ bugData: bugs, completedBugData: completedBugs });\r\n        console.log(\"IF IM HEre THEN THE DATA JUST UPDATED!!!!\");\r\n        this.forceUpdate();\r\n        console.log(\"Here is bug data from inside callback of API.getAllBugs in bug-view page!\");\r\n        console.log(bugs);\r\n\r\n        //At default, we want to show all bugs in the table\r\n        this.putAllBugsIntoFilteredArray();\r\n        this.forceUpdate();\r\n    }\r\n\r\n\r\n\r\n    getBugsFromDB() {\r\n        API.getAllBugs(this.state.organizationMongoID)\r\n            .then(response => {\r\n                if (!response.data.error) {\r\n                    console.log(\"SUCCESSFULLY GOT BUGS FROM DB_____________________________________________________\");\r\n                    var bugs = [];\r\n                    var completedBugs = [];\r\n                    console.log(response.data);\r\n                    var bugArrayFromDB = response.data.organizationDoc.bugs;\r\n                    console.log(\"here are all the bugs I got back from DB **************************\");\r\n                    console.log(bugArrayFromDB);\r\n                    //Loop through bug data received from the server.\r\n                    for (var i = 0; i < bugArrayFromDB.length; i++) {\r\n\r\n                        //If bug is completed, then we add to separate array for rendering on the UI purposes\r\n                        if (bugArrayFromDB[i].isCompleted){\r\n\r\n                            console.log(\"COMPLETED BUG \" + this.state.currentBugIndex);\r\n                            console.log(bugArrayFromDB[i]);\r\n                            completedBugs.push({\r\n                                mongoID: bugArrayFromDB[i]._id,\r\n                                id: this.state.currentCompletedBugIndex,\r\n                                bugTitle: bugArrayFromDB[i].bugTitle,\r\n                                bugDescription: bugArrayFromDB[i].bugDescription,\r\n                                userAssigned: bugArrayFromDB[i].userAssigned,\r\n                                status: bugArrayFromDB[i].status,\r\n                                isCompleted: bugArrayFromDB[i].isCompleted\r\n                            })\r\n\r\n\r\n                        }else {                           \r\n                        //If bug is not completed, then we add to separate array\r\n                           console.log(\"bug \" + this.state.currentBugIndex);\r\n                            console.log(bugArrayFromDB[i]);\r\n                            bugs.push({\r\n                                mongoID: bugArrayFromDB[i]._id,\r\n                                id: this.state.currentBugIndex,\r\n                                bugTitle: bugArrayFromDB[i].bugTitle,\r\n                                bugDescription: bugArrayFromDB[i].bugDescription,\r\n                                userAssigned: bugArrayFromDB[i].userAssigned,\r\n                                status: bugArrayFromDB[i].status,\r\n                                isCompleted: bugArrayFromDB[i].isCompleted\r\n                            })\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n\r\n\r\n\r\n                        this.setState({ currentBugIndex: this.state.currentBugIndex + 1, currentCompletedBugIndex: this.state.currentCompletedBugIndex + 1});\r\n\r\n\r\n\r\n\r\n                   }\r\n                   console.log(\"before I set state, here is completed bugs\");\r\n                   console.log(completedBugs);\r\n                    this.setState({ bugData: bugs, completedBugData: completedBugs });\r\n                    console.log(\"IF IM HEre THEN THE DATA JUST UPDATED!!!!\");\r\n                    this.forceUpdate();\r\n                    console.log(\"Here is bug data from inside callback of API.getAllBugs in bug-view page!\");\r\n                    console.log(bugs);\r\n\r\n                    //At default, we want to show all bugs in the table\r\n                    this.putAllBugsIntoFilteredArray();\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            }).catch(err => console.log(err));\r\n\r\n            console.log(\"I am here\");\r\n    }\r\n\r\n    deleteBugInDB(bugClickedOn) {\r\n        console.log(\"I'm in delete bug in DB method. Here is the bug that was clicked on\");\r\n        console.log(bugClickedOn);\r\n        bugClickedOn.bugMongoID = bugClickedOn.mongoID;\r\n        bugClickedOn.organizationMongoID = this.state.organizationMongoID;\r\n        API.deleteBug(bugClickedOn)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"I WAS SUCCESSFUL DELETING THE Bug FROM Bug View PAGE. Here is the response.\");\r\n                    console.log(response);\r\n\r\n                    if (response.data.deletedBugDoc.deletedCount > 0){\r\n                         //Removing the bug from the UI\r\n                         const index = this.state.bugData.indexOf(bugClickedOn);\r\n                         if (index > -1) {\r\n                             this.state.bugData.splice(index, 1);\r\n                         }\r\n                         this.adjustBugDataOrder();\r\n                     } else {\r\n                         console.log(\"Deleting the bug failed for some reason!\");\r\n                     }\r\n\r\n                     this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    // Below methods are related to bug comments\r\n    addBugComment() {\r\n        let currentBug = this.state.bugData[this.state.currentBugIndex];\r\n        if(currentBug){\r\n            currentBug.text = this.state.currentBugCommentInModal;\r\n       \r\n\r\n        console.log(\"Im in the addBugComment Method on bugview page. Below is currentBug\");\r\n        console.log(currentBug);\r\n        if (this.state.currentBugCommentInModal) {\r\n            API.saveBugComment(currentBug)\r\n                .then(res => this.renderBugComments(currentBug))\r\n                .catch(err => console.log(err));\r\n        }\r\n\r\n         }\r\n\r\n    };\r\n    renderBugComments(bugData) {\r\n\r\n        console.log(\"im in the render bug data on the front end\");\r\n        console.log(bugData);\r\n        API.getBugComments(bugData)\r\n            .then(res => {\r\n                console.log(\"I got my res from render bug comments\");\r\n                console.log(res);\r\n                //var bugCommentsArr = [];\r\n                // if(res.data.bugComment == null){\r\n                //     bugCommentsArr = [];\r\n                // }\r\n                if(res.data !== null){\r\n                    this.setState({\r\n                        bugCommentsInModal: res.data.bugComments\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    deleteBugComment(bugComment) {\r\n        API.deleteBugComment(bugComment)\r\n            .then(res => {\r\n                this.renderBugComments(this.state.bugData[this.state.currentBugIndex]);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n    // ****************** END OF DB METHODS*******************************************\r\n\r\n\r\n    //************************THESE METHODS ARE CALLED FROM BUTTONS WITHIN THE MODAL*********************\r\n    updateOrCreateBug = () => {\r\n        if(!this.state.bugTitleValid){\r\n            return;\r\n        }\r\n        if (this.state.isNewBug){\r\n            this.saveNewBugInDB();\r\n        } else {\r\n            console.log(\"I'm in the UPDATE OR CREATE BUG METHOD, below is the bug data\");\r\n            console.log(this.state.bugData);\r\n            console.log(\"here is the currentBugIndex: \" + this.state.currentBugIndex);\r\n            //UPDATE THE BUG DATA LOCALLY BEFORE PUSHING TO DB\r\n            this.state.bugData[this.state.currentBugIndex].bugTitle = this.state.bugTitleInModal;\r\n            this.state.bugData[this.state.currentBugIndex].bugDescription = this.state.bugDescriptionInModal;\r\n            this.state.bugData[this.state.currentBugIndex].userAssigned = this.state.bugUserAssignedInModal;\r\n            this.state.bugData[this.state.currentBugIndex].status = this.state.bugStatusInModal;\r\n\r\n            this.setState({selectedBug: this.state.bugData[this.state.currentBugIndex]});\r\n            this.updateBugInDB();\r\n        }\r\n    }\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, bugTitleInModal: \"\", bugDescriptionInModal: \"\", currentBugCommentInModal: \"\" });\r\n        console.log(\"I'm in closemodal!! Below is the bug object\");\r\n        console.log(this.state.bugData[this.state.currentIndex]);\r\n        console.log(this.state.bugUserAssignedInModal);\r\n        console.log(this.state.bugStatusInModal);\r\n    }\r\n    //*********************** END OF MODAL BUTTON CLICK METHODS ****************************\r\n\r\n\r\n    // ******************** THESE METHODS ARE CALLED WHEN CREATE/EDIT BUTTONS ARE FIRST CLICKED ******************\r\n    editBugButton(bugClickedOn) {\r\n        console.log(\"Edit bug clicked on !!!\");\r\n        console.log(bugClickedOn);\r\n        this.adjustBugDataOrder()\r\n        this.setState({ showModal: true, \r\n            currentModalTitle: \"Edit Bug\",\r\n            currentBugIndex: bugClickedOn.id,\r\n            bugTitleInModal: bugClickedOn.bugTitle, \r\n            bugDescriptionInModal: bugClickedOn.bugDescription, \r\n            bugStatusInModal: bugClickedOn.status,\r\n            bugUserAssignedInModal: bugClickedOn.userAssigned,\r\n            isNewBug: false, \r\n            selectedBug: bugClickedOn });\r\n        this.renderBugComments(bugClickedOn);\r\n    }\r\n    deleteBugButton(bugClickedOn){ \r\n        console.log(\"Delete Bug Clicked on!!! \");\r\n        this.deleteBugInDB(bugClickedOn);\r\n    }\r\n\r\n    createNewBugButton = () => {\r\n        this.setState({ showModal: true, currentModalTitle: \"Create Bug\", isNewBug: true, bugTitleInModal: \"\", bugDescriptionInModal: \"\" });\r\n    }\r\n    // ******************** END OF INITIAL BUTTON CLICK METHODS ******************\r\n\r\n\r\n\r\n    //CALLS THIS WHEN THE COMPONENT MOUNTS, basically \"on page load\"\r\n    componentDidMount() {\r\n        console.log(\"Component Did Mount has been called\");\r\n        console.log(\"BELOW IS THE PASSED PROPS STATE\");\r\n        console.log(this.props.location.state);\r\n        this.setState({ organizationMongoID: this.props.location.state.organizationMongoID, organizationNameInTitle: this.props.location.state.organizationName }, () => {\r\n            this.getBugsFromDB();\r\n        });\r\n\r\n        \r\n    } \r\n\r\n    putAllBugsIntoFilteredArray() {\r\n        this.setState({filteredBugData: []});\r\n        this.state.bugData.map(bug => {\r\n            return this.state.filteredBugData.push(bug);\r\n        });\r\n    }\r\n    adjustBugDataOrder() {\r\n        //Update the current page's id of the bug for UI purposes\r\n        for (var i = 0; i < this.state.bugData.length; i++) {\r\n            this.state.bugData[i].id = i;\r\n        }\r\n        for(var j=0; j<this.state.completedBugData.length; j++){\r\n            this.state.completedBugData[j].id = j;\r\n        }\r\n    }\r\n\r\n    //If you click \"Show Completed Bugs\" or \"Hide Completed Bugs\", this will show or hide.\r\n    swapRenderCompletedBugs = () => {\r\n        if(this.state.showCompletedBugs){\r\n            this.setState({showCompletedBugs: false})\r\n        }else {\r\n            this.setState({ showCompletedBugs: true })\r\n        }\r\n        \r\n    }\r\n    //If you click \"Show Active Bugs\" or \"Hide Active Bugs\", this will show or hide.\r\n    swapRenderActiveBugs = () => {\r\n        if (this.state.showActiveBugs) {\r\n            this.setState({ showActiveBugs: false })\r\n        } else {\r\n            this.setState({ showActiveBugs: true })\r\n        }\r\n    }\r\n\r\n    completedCheck(bug){\r\n        console.log(\"YOU JUST CLICKED COMPLETED CHECK\");\r\n        console.log(bug);\r\n\r\n       if(bug.isCompleted){\r\n           bug.isCompleted = false;\r\n       }else {\r\n           bug.isCompleted = true;\r\n       }\r\n\r\n        this.setState({ selectedBug: bug }, () => {\r\n            //this.adjustBugDataOrder();\r\n            this.updateBugInDB();\r\n            //this.checkBothCompletedAndActiveBugData(this.state.bugData)\r\n            this.forceUpdate();\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        if (this.state.userFilter !== \"\" || this.state.statusFilter !== \"\"){\r\n            this.state.filteredBugData  = [];\r\n            this.state.bugData.map(bug => {\r\n                \r\n               var assigneeFilterIsActive = false;\r\n                var statusFilterIsActive = false;\r\n                //APPLY THE FILTERS\r\n            if (this.state.statusFilter === bug.status && this.state.statusFilter !== \"\")  {\r\n\r\n                statusFilterIsActive = true;\r\n            }          \r\n            if(this.state.userFilter === bug.userAssigned && this.state.userFilter !== \"\") {\r\n                assigneeFilterIsActive = true;\r\n            }\r\n            if (statusFilterIsActive && assigneeFilterIsActive){\r\n            return this.state.filteredBugData.push(bug);\r\n            } else if (statusFilterIsActive && this.state.userFilter === \"\"){\r\n                \r\n                return this.state.filteredBugData.push(bug);\r\n            }\r\n            else if (assigneeFilterIsActive && this.state.statusFilter === \"\") {\r\n                return this.state.filteredBugData.push(bug);\r\n            }\r\n        });\r\n          } else {\r\n            this.state.filteredBugData = [];\r\n            this.state.bugData.map(bug => {\r\n                    return this.state.filteredBugData.push(bug);\r\n\r\n            });\r\n\r\n          }\r\n\r\n\r\n\r\n\r\n          // NOW WE WILL DO THE SAME LOGIC FOR COMPLETED BUGS\r\n        if (this.state.userFilter !== \"\" || this.state.statusFilter !== \"\") {\r\n            this.state.filteredCompletedBugData = [];\r\n            this.state.completedBugData.map(bug => {\r\n\r\n                var assigneeFilterIsActive = false;\r\n                var statusFilterIsActive = false;\r\n                //APPLY THE FILTERS\r\n                if (this.state.statusFilter === bug.status && this.state.statusFilter !== \"\") {\r\n\r\n                    statusFilterIsActive = true;\r\n                }\r\n                if (this.state.userFilter === bug.userAssigned && this.state.userFilter !== \"\") {\r\n                    assigneeFilterIsActive = true;\r\n                }\r\n                if (statusFilterIsActive && assigneeFilterIsActive) {\r\n                    return this.state.filteredCompletedBugData.push(bug);\r\n                } else if (statusFilterIsActive && this.state.userFilter === \"\") {\r\n\r\n                    return this.state.filteredCompletedBugData.push(bug);\r\n                }\r\n                else if (assigneeFilterIsActive && this.state.statusFilter === \"\") {\r\n                    return this.state.filteredCompletedBugData.push(bug);\r\n                }\r\n            });\r\n        } else {\r\n            this.state.filteredCompletedBugData = [];\r\n            this.state.completedBugData.map(bug => {\r\n                return this.state.filteredCompletedBugData.push(bug);\r\n\r\n            });\r\n\r\n        }\r\n        return (\r\n             <Container id=\"containerViewBugs\" fluid=\"true\">\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugtrackerTitle\" id=\"organizationNameInBugTitle\">{this.state.organizationNameInTitle}</h1>\r\n                                <h2 className=\"display-4 BugTrackerTitle\">View Bugs</h2>\r\n                            </Container>\r\n                        </div>\r\n                        <br />\r\n                        <br />\r\n                        <Row>\r\n                            <Col size=\"sm-1\">\r\n                                <p><strong>Assignee </strong> </p>\r\n                                <select value={this.state.userFilter} onChange={this.handleChange.bind(this)} id=\"userFilter\" name=\"userFilter\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tyler\">Tyler</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tawny\">Tawny</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Anthony\">Anthony</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Arthur\">Arthur</option>\r\n                                </select>\r\n                            </Col>\r\n                            <Col size=\"sm-1\">\r\n                                <p><strong>Status</strong></p>\r\n                                <select value={this.state.statusFilter} onChange={this.handleChange.bind(this)} id=\"statusFilter\" name=\"statusFilter\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Open\">Open</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"In Development\">In Development</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Needs Testing\">Needs Testing</option>\r\n                                </select>\r\n                            </Col>\r\n                            <Col size=\"sm-2\">\r\n                                <Link to=\"/profile\" className=\"log\" ><Button>View Profile</Button></Link>\r\n                            </Col>\r\n                            <Col size=\"sm-2\">\r\n                                <Button type=\"button\" className=\"btn btn-primary\" onClick={this.createNewBugButton}>Create New Bug</Button>\r\n                            </Col>\r\n                            <Col size=\"sm-2\">\r\n                                {this.state.showActiveBugs ?\r\n                                    <Button type=\"button\" className=\"btn btn-primary\" onClick={this.swapRenderActiveBugs.bind(this)}>Hide Active Bugs</Button>\r\n                                    :\r\n                                    <Button type=\"button\" className=\"btn btn-primary\" onClick={this.swapRenderActiveBugs.bind(this)}>Show Active Bugs</Button>\r\n                                }\r\n                                \r\n                            </Col>\r\n                            <Col size=\"sm-2\">\r\n                                \r\n                                {this.state.showCompletedBugs ?\r\n                                    <Button type=\"button\" className=\"btn btn-primary\" onClick={this.swapRenderCompletedBugs.bind(this)}>Hide Completed Bugs</Button>\r\n                                    :\r\n                                    <Button type=\"button\" className=\"btn btn-primary\" onClick={this.swapRenderCompletedBugs.bind(this)}>Show Completed Bugs</Button>\r\n                                }\r\n                            </Col>\r\n                                       \r\n                        </Row>\r\n                            <br />\r\n                                <br />\r\n\r\n                        {this.state.showActiveBugs ?                   \r\n                       <div>\r\n                                <h1 className=\"activeBugsTitle\">Active Bugs</h1>\r\n                                {this.state.bugData.length ? (\r\n                                    <table id=\"bugViewTable_Table\" className=\"table table-hover bugViewTable_Table\">\r\n                                        <thead id=\"bugViewTable_head\" className=\"thead-dark\">\r\n                                            <tr>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Complete</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Title</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">User Assigned</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Status</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\"></th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\"></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.state.filteredBugData.map(bug => {\r\n                                                return (\r\n                                                    <tr className=\"bugViewTable_tr\" key={bug.mongoID}>\r\n                                                        <td id=\"isCompletedColumn\" className=\"bugViewTable_td\">\r\n\r\n                                                            <label className=\"isCompletedContainer\">\r\n                                                                <input type=\"checkbox\" checked={bug.isCompleted} onClick={() => this.completedCheck(bug)}\r\n                                                                value={bug.isCompleted} onChange={this.handleChange.bind(this)} name=\"bugIsCompleted\"                                                                \r\n                                                                />\r\n                                                                <span className=\"checkmark\"></span>\r\n                                                            </label>\r\n                                                     </td>\r\n                                                        <td className=\"bugViewTable_td\">{bug.bugTitle}</td>\r\n                                                        <td id=\"userAssignedColumn\" className=\"bugViewTable_td\">{bug.userAssigned}</td>\r\n                                                        <td id=\"statusColumn\" className=\"bugViewTable_td\">{bug.status}</td>\r\n                                                        <td id=\"editColumn\" className=\"bugViewTable_td\">\r\n                                                            <Button variant=\"primary\" onClick={() => this.editBugButton(bug)}>\r\n                                                                Edit\r\n                                                    </Button>\r\n                                                        </td>\r\n                                                        <td id=\"deleteColumn\" className=\"bugViewTable_td\"> <Button variant=\"primary\" onClick={() => this.deleteBugButton(bug)}>Delete</Button></td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n\r\n                                ) : (<h3 className=\"noResultsMessage\"> No Results to Display </h3>)} \r\n                       </div>\r\n                        \r\n                        \r\n                        \r\n                        : \r\n                        \r\n                        \r\n                        \"\"\r\n                    } \r\n                       \r\n\r\n                            {this.state.showCompletedBugs ? \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            <div>\r\n                                <hr />\r\n                                <h1 className=\"completedBugsTitle\">Completed Bugs</h1>\r\n                                {this.state.completedBugData.length ? (\r\n                                    <div>\r\n                                    <table id=\"bugViewTable_Table\" className=\"table table-hover bugViewTable_Table\">\r\n                                        <thead id=\"bugViewTable_head\" className=\"thead-dark\">\r\n                                            <tr>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Complete</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Title</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">User Assigned</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Status</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\"></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.state.completedBugData.map(bug => {\r\n                                                return (\r\n                                                    <tr className=\"bugViewTable_tr\" key={bug.mongoID}>\r\n                                                        <td id=\"isCompletedColumn\" className=\"bugViewTable_td\">\r\n\r\n                                                            <label className=\"isCompletedContainer\">\r\n                                                                <input type=\"checkbox\" checked={bug.isCompleted} onClick={() => this.completedCheck(bug)}\r\n                                                                    value={bug.isCompleted} onChange={this.handleChange.bind(this)} name=\"bugIsCompleted\"\r\n                                                                />\r\n                                                                <span className=\"checkmark\"></span>\r\n                                                            </label>\r\n\r\n\r\n                                                        </td>\r\n                                                        <td className=\"bugViewTable_td\">{bug.bugTitle}</td>\r\n                                                        <td id=\"userAssignedColumn\" className=\"bugViewTable_td\">{bug.userAssigned}</td>\r\n                                                        <td id=\"statusColumn\" className=\"bugViewTable_td\">{bug.status}</td>\r\n                                                        <td id=\"deleteColumn\" className=\"bugViewTable_td\"> </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    </div>\r\n\r\n                                ) : (<h3 className=\"noResultsMessage\"> No Results to Display </h3>)} \r\n\r\n\r\n                            </div>\r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            :\r\n                                                      \r\n                            \r\n                            \"\"}\r\n\r\n                                <br />\r\n                                    <br />\r\n                                \r\n                       \r\n                       \r\n                \r\n                        {/* This modal will pop up for editing bugs! */}\r\n                        <Modal show={this.state.showModal} animation={false}>\r\n                            <Modal.Header>\r\n                                <Button className='btn btn-danger note-delete xButton' id=\"bugModalXButton\" onClick={() => this.closeModal()}>X</Button>\r\n                                <Modal.Title>{this.state.currentModalTitle}</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n\r\n\r\n                                <Input label=\"Title\" onBlur={this.formatInput.bind(this)} isvalid={this.state.bugTitleValid.toString()} \r\n                                fielderror={this.state.formErrors.bugTitle} value={this.state.bugTitleInModal} id=\"bugTitleInModal\" onChange={this.handleChange.bind(this)} name=\"bugTitleInModal\" />\r\n                                <br />\r\n                                <label htmlFor=\"bugUserAssignedInModal\"><strong>Assignee</strong></label> <br />\r\n                                <select label=\"Assignee\" value={this.state.bugUserAssignedInModal} onChange={this.handleChange.bind(this)} id=\"bugUserAssignedInModal\" name=\"bugUserAssignedInModal\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tawny\">Tawny</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Anthony\">Anthony</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tyler\">Tyler</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Arthur\">Arthur</option>\r\n                                </select>\r\n                                <br />\r\n                                <br />\r\n                                <label htmlFor=\"bugStatusInModal\"><strong>Status</strong></label>  <br />\r\n                                <select label=\"Status\" value={this.state.bugStatusInModal} onChange={this.handleChange.bind(this)} id=\"bugStatusInModal\" name=\"bugStatusInModal\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Open\">Open</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"In Development\">In Development</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Needs Testing\">Needs Testing</option>\r\n                                </select>\r\n\r\n                                <br />\r\n\r\n                                <br />\r\n\r\n                                <TextArea label=\"Description\" onBlur={this.formatInput.bind(this)} value={this.state.bugDescriptionInModal} id=\"bugDescriptionInModal\" onChange={this.handleChange.bind(this)} name=\"bugDescriptionInModal\" />\r\n\r\n                                {/* BUG COMMENT SECTION */}\r\n\r\n                                {this.state.isNewBug ? \r\n\r\n                                    \"\": <div>\r\n\r\n                                        <hr />\r\n                                        {this.state.bugCommentsInModal.length ? (\r\n                                            <BugCommentContainer>\r\n                                                <div className=\"bugCommentContainer\">\r\n                                                    {this.state.bugCommentsInModal.map(bugComment => {\r\n                                                        let boundBugCommentClick = this.deleteBugComment.bind(this, bugComment);\r\n                                                        return (\r\n                                                            <BugCommentPanel key={bugComment._id} text={bugComment.text}>\r\n                                                                <div>\r\n                                                                    <button className='btn btn-danger bugComment-delete insideNote' onClick={boundBugCommentClick}> X </button>\r\n                                                                </div>\r\n\r\n                                                            </BugCommentPanel>\r\n                                                        );\r\n                                                    })}\r\n                                                </div>\r\n                                            </BugCommentContainer>\r\n                                        ) : (\r\n                                                <h3> There are no comments! </h3>\r\n                                            )}\r\n\r\n\r\n                                        <Input placeholder='Bug Comment'\r\n                                            id=\"currentBugCommentInModal\"\r\n                                            onBlur={this.formatInput.bind(this)}\r\n                                            value={this.state.currentBugCommentInModal}\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"currentBugCommentInModal\"\r\n                                        />\r\n                                        <Button className='btn btn-success save' onClick={() => this.addBugComment()}>Save Comment</Button>\r\n\r\n                                    </div>\r\n                                }\r\n\r\n                                {/* END OF BUG COMMENT SECTION */}\r\n\r\n\r\n\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                                    Close\r\n                                  </Button>\r\n                                <Button variant=\"primary\" onClick={this.handleFormSubmit}>\r\n                                    Save Changes\r\n                              </Button> \r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n\r\n                                \r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BugViewPage;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./create-bug.css\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass BugViewPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            bugTitle: \"\",\r\n            bugDescription: \"\",\r\n            sampleBugViewTableData: [{ id: \"1\", BugTitle: \"Title A\", BugDescription: \"Test A\" }, { id: \"2\", BugTitle: \"Title B\", BugDescription: \"Test B\" }, { id: \"3\", BugTitle: \"Title C\", BugDescription: \"Test C\" }]\r\n        };\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    //Standard method for constantly updating input, since UI is constantly refreshing\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container id=\"containerViewBugs\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugTrackerTitle\">Create Bug Task</h1>\r\n                            </Container>\r\n                        </div>\r\n                        \r\n                        <p>Bug Title</p>\r\n                        <Input onBlur={this.formatInput.bind(this)} value={this.state.emailAddress} id=\"BugTitle\" onChange={this.handleChange.bind(this)} name=\"BugTitle\" />\r\n\r\n                        \r\n                        <TextArea label=\"Bug Description\" onBlur={this.formatInput.bind(this)} value={this.state.emailAddress} id=\"BugDescription\" onChange={this.handleChange.bind(this)} name=\"BugDescription\"/>\r\n\r\n                        <Button>Save Bug</Button><Button>View Bugs</Button>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BugViewPage;","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./profile.css\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstName:\"\",\r\n            loggedIn: this.props.loggedIn,\r\n            redirectTo: null,\r\n            setPasswordFieldsActiveInModal: false,\r\n            setCreateOrganizationFieldsActiveInModal: false,\r\n            setJoinOrganizationFieldsActiveInModal: false,\r\n            setEditOrganizationFieldsActiveInModal: false,\r\n            formErrors: { oldPassword: \"\", newPassword1and2:\"\", organizationName:\"\", organizationID:\"\" },\r\n            oldPassword: \"\",\r\n            newPassword1: \"\",\r\n            newPassword2: \"\",\r\n            organizationNameInModal: \"\",\r\n            organizationIDInModal: \"\",\r\n            organizationMongoIDInModal: \"\",\r\n            oldPasswordValid: true,\r\n            newPassword1and2Valid: false,\r\n            organizationNameValid: false,\r\n            organizationIDValid: false,\r\n            showModal: false,\r\n            currentModalTitle: \"\",\r\n            userData: [],\r\n            organizations: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n        console.log(\"Component mounted in Profile, below is MongoID\");\r\n        console.log(this.props.mongoID);\r\n        this.getOrganizationsOfUserInDB();\r\n        \r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    //Standard method for constantly updating input, since UI is constantly refreshing\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    validateFields() {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let newPassword1and2Valid = this.state.newPassword1Valid;\r\n        let organizationNameValid =  this.state.organizationNameValid;\r\n        let organizationIDValid = this.state.organizationIDValid;\r\n\r\n\r\n\r\n        console.log(\"newpassword1 is: \" + this.state.newPassword1);\r\n        console.log(\"newPassword2 is: \" + this.state.newPassword2);\r\n\r\n        //Validating between the new password field and \"confirm password\" field that they match and are greather than or equal to 6 characters\r\n        newPassword1and2Valid = this.state.newPassword1 === this.state.newPassword2 && this.state.newPassword1.length >= 6;\r\n        fieldValidationErrors.newPassword1and2 = \"New password doesn't match or your password is less than 6 characters long.\";\r\n\r\n        //Validating that organization is greater than 3 characters\r\n        organizationNameValid = this.state.organizationNameValid.length > 3;\r\n        fieldValidationErrors.organizationName = \"Organization Name must have atleast three characters.\";\r\n\r\n        //Validating that organization ID is greater than 6 characters\r\n        organizationIDValid = this.state.organizationIDInModal.length > 6;\r\n        fieldValidationErrors.organizationID = \"Organization ID must have atleast six characters.\";\r\n\r\n\r\n\r\n        console.log(\"organizationIDValid is: \" + organizationIDValid);\r\n        console.log(\"organizationNameValid: \" + organizationNameValid);\r\n        console.log(\"password1And2Valid: \"+ newPassword1and2Valid);\r\n        //TODO --- HANDLE FORM VALIDATION\r\n\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            newPassword1and2Valid: newPassword1and2Valid,\r\n            organizationIDValid: organizationIDValid,\r\n            organizationNameValid: organizationNameValid\r\n        }, () => {\r\n                if (this.state.setJoinOrganizationFieldsActiveInModal) {\r\n                    //for JOIN organization\r\n                    if (organizationIDValid){\r\n                     this.attachUserToOrganizationInDB();\r\n                    }\r\n                } else if (this.state.setCreateOrganizationFieldsActiveInModal) {\r\n                    //For CREATE organization\r\n                    if(organizationNameValid && organizationIDValid){\r\n                        this.saveOrganizationInDB();\r\n                    }\r\n                } else if (this.state.setEditOrganizationFieldsActiveInModal) {\r\n                    //For UPDATE Organization\r\n                    if(organizationNameValid && organizationIDValid){\r\n\r\n                        this.updateOrganizationInDB();\r\n                    }\r\n                } else if (this.state.setPasswordFieldsActiveInModal) {\r\n                    //For UPDATE password\r\n                    if (newPassword1and2Valid){     \r\n                        this.updatePasswordInDB();\r\n                    }\r\n                }\r\n        });\r\n    }\r\n\r\n    \r\n    handleChangePasswordButtonClick = event => {\r\n        //event.preventDefault();\r\n\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Change Password\",\r\n            setPasswordFieldsActiveInModal: true\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    //************************THESE METHODS ARE CALLED FROM BUTTONS WITHIN THE MODAL*********************\r\n    updatePasswordInDB = () => {\r\n\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID\r\n        }\r\n        API.updateUserInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"UpdatePassword successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n\r\n                } else {\r\n                    console.log(\"Updating USER PASSWORD WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                    this.setState({ showModal: false });\r\n                }\r\n            })\r\n        \r\n    }\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, organizationIDValid: true,\r\n        organizationNameValid: true, newPassword1and2Valid: true, \r\n            formErrors: { oldPassword: \"\", newPassword1and2: \"\", organizationName: \"\", organizationID: \"\" } });\r\n    }\r\n    //*********************** END OF MODAL BUTTON CLICK METHODS ****************************\r\n\r\n    //*************************METHODS BELOW RELATED TO ORGANIZATION BUTTON CLICKS ******************/\r\n    handleEditOrganizationButtonClick(organizationClickedOn) {\r\n        //event.preventDefault();\r\n\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Edit Organization\",\r\n            setCreateOrganizationFieldsActiveInModal: false,\r\n            setEditOrganizationFieldsActiveInModal: true,\r\n            setPasswordFieldsActiveInModal: false,\r\n            organizationMongoIDInModal: organizationClickedOn._id,\r\n            organizationNameInModal: organizationClickedOn.name,\r\n            organizationIDInModal: organizationClickedOn.organizationID\r\n        });\r\n    }\r\n\r\n    handleCreateOrganizationButtonClick = event => {\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Create Organization\",\r\n            setPasswordFieldsActiveInModal: false,\r\n            setCreateOrganizationFieldsActiveInModal: true,\r\n            setJoinOrganizationFieldsActiveInModal: false,\r\n            organizationIDInModal: \"\",\r\n            organizationNameInModal: \"\"\r\n        });\r\n\r\n    }\r\n\r\n    handleJoinOrganizationButtonClick = event => {\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Join Organization\",\r\n            setPasswordFieldsActiveInModal: false,\r\n            setCreateOrganizationFieldsActiveInModal: false,\r\n            setJoinOrganizationFieldsActiveInModal: true\r\n        })\r\n\r\n    }\r\n\r\n    //*** METHODS BELOW RELATED TO DB WITH ORGANIZATIONS */ */\r\n    saveOrganizationInDB() {\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID,\r\n            organizationName: this.state.organizationNameInModal,\r\n            organizationID: this.state.organizationIDInModal\r\n        }\r\n\r\n        API.saveOrganizationInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"SAVE ORGANIZATION successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n                    this.setState({ showModal: false });\r\n                    this.getOrganizationsOfUserInDB();\r\n                    this.forceUpdate();\r\n\r\n                } else {\r\n                    console.log(\"SAVE ORGANIZATION WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    getOrganizationsOfUserInDB() {\r\n\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID\r\n        }\r\n\r\n        API.getOrganizationsOfUserInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    //If we find no error, then we successful got the user's list of organizations. Update state with organizations.\r\n                    console.log(\"getOrganizationsOfUserInDB successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n\r\n                    this.setState({\r\n                        organizations: response.data.organizations\r\n                    })\r\n\r\n                } else {\r\n                    console.log(\"getOrganizationsOfUserInDB WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                    this.setState({ showModal: false });\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    attachUserToOrganizationInDB() {\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID,\r\n            organizationID: this.state.organizationIDInModal\r\n        }\r\n        API.attachUserToOrganizationInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    //If we find no error, then we successful got the user's list of organizations. Update state with organizations.\r\n                    console.log(\"attachUserToOrganizationInDB successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n\r\n                    this.setState({\r\n                        organizations: response.data.organizations,\r\n                        showModal: false\r\n                    })\r\n                    this.getOrganizationsOfUserInDB();\r\n                    this.forceUpdate();\r\n\r\n                } else {\r\n                    console.log(\"attachUserToOrganizationInDB WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleDeleteOrganizationInDB(organizationClickedOn) {\r\n        var isUserOrganizationOwner = false;\r\n        if (this.props.mongoID === organizationClickedOn.userWhoCreatedOrgMongoID){\r\n            isUserOrganizationOwner = true;\r\n        }\r\n        var organizationObj = {\r\n            organizationMongoID: organizationClickedOn._id,\r\n            userMongoID: this.props.mongoID,\r\n            organizationData: organizationClickedOn,\r\n            isUserOrganizationOwner: isUserOrganizationOwner\r\n\r\n        }\r\n        API.deleteOrganizationInDB(organizationObj)\r\n            .then(res => {\r\n\r\n                this.getOrganizationsOfUserInDB();\r\n                this.forceUpdate();\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    updateOrganizationInDB() {\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID,\r\n            organizationMongoID: this.state.organizationMongoIDInModal,\r\n            organizationName: this.state.organizationNameInModal,\r\n            organizationID: this.state.organizationIDInModal\r\n        }\r\n\r\n        API.updateOrganizationInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"SAVE ORGANIZATION successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n                    this.setState({ showModal: false });\r\n                    this.getOrganizationsOfUserInDB();\r\n                    this.forceUpdate();\r\n\r\n                } else {\r\n                    console.log(\"SAVE ORGANIZATION WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleSubmitButtonInModalClick = () => {\r\n        this.validateFields();\r\n    }\r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <Container id=\"containerViewBugs\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugTrackerTitle\">Welcome, {this.props.firstName}!</h1>\r\n                            </Container>\r\n                        </div>\r\n                        <Button onClick={this.handleChangePasswordButtonClick.bind(this)}>Change Password</Button>\r\n                        <Button onClick={this.handleCreateOrganizationButtonClick.bind(this)}>Create Organization</Button>\r\n                        <Button onClick={this.handleJoinOrganizationButtonClick.bind(this)}>Join Organization</Button>\r\n                        <br />\r\n                        <br />\r\n                        {this.state.organizations.length > 0 ? (\r\n                            <table id=\"organizationTable_Table\" className=\"table table-hover bugViewTable_Table\">\r\n                                <thead id=\"organizationTable_head\" className=\"thead-dark\">\r\n                                    <tr>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\">Name</th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\">Organization ID</th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\"></th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\"></th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\"></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.organizations.map(organization => {\r\n                                        return (\r\n                                            <tr className=\"organizationTable_tr\" key={organization._id}>\r\n                                                <td className=\"organizationTable_td\">{organization.name}</td>\r\n                                                <td className=\"organizationTable_td\">{organization.organizationID}</td>\r\n                                                <td className=\"organizationTable_td\">\r\n                                                    \r\n                                                    \r\n                                                    <Link to={{pathname: \"/bug-view\", state: {organizationMongoID: organization._id, organizationName: organization.name}}} className=\"log\" ><Button>View Bugs</Button></Link>\r\n                                                    </td>\r\n                                                <td id=\"editColumn\" className=\"organizationTable_td\">\r\n                                                    {this.props.mongoID === organization.userWhoCreatedOrgMongoID ?\r\n                                                        <Button variant=\"primary\" onClick={() => this.handleEditOrganizationButtonClick(organization)}>\r\n                                                            Edit\r\n                                                        </Button> : \"\"\r\n\r\n                                                    }\r\n                                                </td>\r\n                                                <td id=\"deleteColumn\" className=\"organizationTable_td\">\r\n                                                    {this.props.mongoID === organization.userWhoCreatedOrgMongoID ?\r\n                                                        <Button variant=\"primary\" onClick={() => this.handleDeleteOrganizationInDB(organization)}>Delete</Button> \r\n                                                        : \r\n                                                        <Button variant=\"primary\" onClick={() => this.handleDeleteOrganizationInDB(organization)}>Leave</Button> \r\n                                                    }\r\n                                                     </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n\r\n\r\n                        ) : (<h3> No Results to Display </h3>)}\r\n                        <br />\r\n                        <br />\r\n\r\n                        {/* This modal will pop up for changing password! */}\r\n                        <Modal show={this.state.showModal} animation={false}>\r\n                            <Modal.Header>\r\n                                <Modal.Title>{this.state.currentModalTitle}</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n\r\n                                {this.state.setPasswordFieldsActiveInModal ?\r\n                                    <div>\r\n                                        <p>Old Password</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.oldPasswordValid.toString()}\r\n                                            fielderror={this.state.formErrors.oldPassword}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.oldPassword)}`}\r\n                                            value={this.state.oldPassword}\r\n                                            id=\"oldPassword\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"oldPassword\"></Input>\r\n\r\n                                        <p>New Password</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.newPassword1and2Valid.toString()}\r\n                                            fielderror={this.state.formErrors.newPassword1and2}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.newPassword1and2)}`}\r\n                                            value={this.state.newPassword1and2}\r\n                                            id=\"newPassword1\" onChange={this.handleChange.bind(this)}\r\n                                            name=\"newPassword1\"></Input>\r\n\r\n                                        <p>Confirm New Password</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.newPassword1and2Valid.toString()}\r\n                                            fielderror={this.state.formErrors.newPassword1and2}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.newPassword1and2)}`}\r\n                                            value={this.state.newPassword2}\r\n                                            id=\"newPassword2\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"newPassword2\"></Input>\r\n\r\n                                    </div>\r\n                                    :\r\n                                    <div>\r\n                                        {this.state.setJoinOrganizationFieldsActiveInModal ?\r\n                                        <div>\r\n                                            <p>Please enter the Organization ID of the organization you wish to join:</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)}\r\n                                                isvalid={this.state.organizationIDValid.toString()}\r\n                                                    fielderror={this.state.formErrors.organizationID}\r\n                                                formgroupclass={`form-group ${this.errorClass(this.state.formErrors.organizationID)}`}\r\n                                                value={this.state.organizationIDInModal}\r\n                                                id=\"organizationIDInModal\" onChange={this.handleChange.bind(this)}\r\n                                                name=\"organizationIDInModal\"></Input>\r\n                                            \r\n                                        </div>\r\n                                        :\r\n                                        <div>\r\n                                        <p>Organization Name</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.organizationNameValid.toString()}\r\n                                            fielderror={this.state.formErrors.organizationName}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.organizationName)}`}\r\n                                            value={this.state.organizationNameInModal}\r\n                                            id=\"organizationNameInModal\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"organizationNameInModal\"></Input>\r\n\r\n                                        <p>Organization ID (Use this number to invite people)</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.organizationIDValid.toString()}\r\n                                            fielderror={this.state.formErrors.organizationID}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.organizationID)}`}\r\n                                            value={this.state.organizationIDInModal}\r\n                                            id=\"organizationIDInModal\" onChange={this.handleChange.bind(this)}\r\n                                            name=\"organizationIDInModal\"></Input>\r\n                                        </div>\r\n\r\n                                        }\r\n\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    }\r\n\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                                    Close\r\n                                  </Button>\r\n                                <Button variant=\"primary\" onClick={this.handleSubmitButtonInModalClick.bind(this)}>\r\n                                Save Changes\r\n                                </Button>\r\n\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n\r\n    \r\n}\r\n}\r\n\r\n// export default Profile;\r\nexport default withRouter(Profile);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport LandingPage from \"./pages/landing-page\";\nimport BugView from \"./pages/bug-view\";\nimport CreateBug from \"./pages/create-bug\";\nimport Profile from \"./pages/profile\";\nimport API from \"./utils/API\";\nimport { withRouter } from 'react-router';\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      loggedIn: false,\n      user: null,\n      firstName: null,\n      lastName: null,\n      mongoID: null,\n      password: null,\n      redirectTo: null\n    }\n    this._login = this._login.bind(this)\n  }\n  componentDidMount() {\n    API.user().then(response => {\n      if (!!response.data.user) {\n        console.log(\"Attempt to login on App.js from componentDidMount\");\n        console.log(response.data);\n        this.setState({\n          loggedIn: true,\n          user: response.data.user,\n          userId: response.data.user._id,\n        });\n        console.log(\"login passed!! User is not authenticated. (App.js - componentDidMount)\");\n      } else {\n        console.log(\"Login failed!!! User is not authenticated. (App.js - componentDidMount)\");\n        this.setState({\n          loggedIn: false,\n          // redirectTo: \"/landing-page\",\n          user: null\n        })\n      }\n    })\n  }\n\n  _login(username, password) {\n    console.log(\"I called _login from App.js\");\n    var userData = {\n      username: username,\n      password: password,\n    }\n    API\n      .login(userData)\n      .then(response => {\n        console.log(\"attempt to login from app.js _login\");\n        console.log(response);\n        if (response.status === 200) {\n          console.log(\"ATTEMPTING TO CONSOLE LOG EMAIL IN _LOGIN IN App.js\");\n          console.log(response.data);\n            if(response.data.loggedInSuccess){\n\n            \n          //var data = JSON.parse(response.data);\n         // console.log(response);\n         console.log(\"_login from App.js is SUCCESSFUL, below is the response data\");\n         console.log(response.data);\n          // update the state\n          this.setState({\n            loggedIn: true,\n            username: response.data.username,\n            mongoID: response.data.mongoID,\n            firstName: response.data.firstName,\n            lastName: response.data.lastName,\n            password: response.data.password,\n            redirectTo: \"/profile\"\n          })\n          //this.props.history.push(\"/profile\");\n\n\n        }else {\n            console.log(\"logged in FAILED!!!\");\n            console.log(response);\n              this.setState({\n                loggedIn: false\n              })\n        }\n        }\n      })\n  }\n\n    render() {\n      //IF USER IS AUTHENTICATED RENDER THIS\n      if (this.state.loggedIn) {\n        console.log(\"redirectTO has been called!!!\");\n        console.log(this.state.redirectTo);\n        return(\n\n            <div className=\"App\">\n              <div>\n\n        <Redirect exact to={{ pathname: this.state.redirectTo }} render={() =>\n          <LandingPage\n            _login={this._login}\n\n          />}/> \n\n          \n          <Route exact path=\"/landing-page\"\n            render={() =>\n              <LandingPage\n                _login={this._login}\n\n              />} />\n          <Route exact path=\"/bug-view\" component={BugView} />\n          <Route exact path=\"/create-bug\" component={CreateBug} />\n              <Route exact path=\"/profile\" render={() => <Profile loggedIn={this.state.loggedIn} username={this.state.username} mongoID={this.state.mongoID} firstName={this.state.firstName}/>} />\n\n          <Route exact path=\"/\" render={() => (\n            <Redirect to=\"/landing-page\" />\n          )} />\n\n          </div>\n          </div>\n\n        )\n      }\n\n\n      //IF USER IS NOT AUTHENTICATED, RENDER JUST THE LANDING PAGE\n      return (\n        <div className=\"App\">\n       <div>\n            <Route exact path=\"/landing-page\" \n                  render={() =>\n                    <LandingPage\n                      _login={this._login}\n\n                    />} />\n\n                <Route exact path=\"/\" render={() => (\n                  <Redirect to=\"/landing-page\" />\n                )} />\n\n            <Redirect from=\"*\" to=\"/landing-page\" />\n  \n             </div>\n       </div>\n      )      \n    }\n\n  }\nexport default App;\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from 'react-router-dom'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nReactDOM.render(\n    // <App /> \n   \n <BrowserRouter> \n\n\n    \n    <Switch>\n    <Route component={App} />\n\n                </Switch>\n \n </BrowserRouter>\n\n  , document.getElementById(\"root\"));\n\n"],"sourceRoot":""}