{"version":3,"sources":["components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/Form/Input.js","components/Form/Button.js","components/Form/TextArea.js","utils/API.js","pages/landing-page/landing-page.js","components/BugCommentContainer/BugCommentContainer.js","components/BugCommentContainer/BugCommentPanel.js","pages/bug-view/bug-view.js","pages/create-bug/create-bug.js","pages/profile/profile.js","App.js","index.js"],"names":["Col","props","className","size","split","map","join","children","Container","id","fluid","Row","Input","formgroupclass","htmlFor","label","isvalid","fielderror","Button","TextArea","rows","console","log","axios","get","userObj","post","userData","bugData","organizationMongoID","bugCommentData","_id","bugAndCommentData","mongoID","organizationData","LandingPage","formatInput","event","attribute","target","getAttribute","setState","value","trim","handleFormSubmit","preventDefault","emailAddressValid","firstNameValid","lastNameValid","passwordValid","formErrors","firstName","lastName","emailAddress","password","validateFields","handleLoginButtonClick","loginOrCreateAccountButtonClicked","loginButtonClicked","forgotPasswordButtonClicked","serverErrorMessage","handleCreateAccountButtonClick","handleForgotPasswordButtonClick","state","redirectTo","e","this","nextProps","fieldValidationErrors","RegExp","test","length","_login","saveUser","sendForgotPasswordEmail","error","email","API","then","response","data","userId","username","user_email","to","pathname","onBlur","bind","toString","errorClass","onChange","handleChange","name","type","onClick","Component","withRouter","BugCommentContainer","BugCommentPanel","text","BugViewPage","delta","count","saveNewBugInDB","bugObj","bugTitle","bugTitleInModal","bugDescription","bugDescriptionInModal","userAssigned","bugUserAssignedInModal","status","bugStatusInModal","errorResponse","bugDoc","newMongoID","currentBugIndex","isCompleted","showModal","push","forceUpdate","updateBugInDB","selectedBug","index","completedBugData","currentCompletedBugIndex","indexOf","splice","updateOrCreateBug","bugTitleValid","isNewBug","closeModal","currentBugCommentInModal","currentIndex","createNewBugButton","currentModalTitle","swapRenderCompletedBugs","showCompletedBugs","swapRenderActiveBugs","showActiveBugs","isLogin","showModal2","filteredCompletedBugData","filteredBugData","bugCommentsInModal","users","userFilter","statusFilter","organizationNameInTitle","isCurrentBugCompleted","bugArrayFromDB","bugs","completedBugs","i","putAllBugsIntoFilteredArray","organizationDoc","catch","err","bugClickedOn","bugMongoID","deletedBugDoc","deletedCount","adjustBugDataOrder","currentBug","res","renderBugComments","bugComments","bugComment","deleteBugInDB","location","organizationName","getBugsFromDB","bug","j","assigneeFilterIsActive","statusFilterIsActive","href","scope","key","checked","completedCheck","variant","editBugButton","deleteBugButton","Modal","show","animation","Header","Title","Body","boundBugCommentClick","deleteBugComment","placeholder","addBugComment","Footer","sampleBugViewTableData","BugTitle","BugDescription","Profile","handleChangePasswordButtonClick","setPasswordFieldsActiveInModal","updatePasswordInDB","oldPassword","newPassword","newPassword1","newPassword1and2","organizationID","successMessage","organizationIDValid","organizationNameValid","oldPasswordValid","newPassword1Valid","newPassword2Valid","organizationNameInModal","organizationIDInModal","newPassword2","handleCreateOrganizationButtonClick","setCreateOrganizationFieldsActiveInModal","setJoinOrganizationFieldsActiveInModal","handleJoinOrganizationButtonClick","handleSubmitButtonInModalClick","loggedIn","setEditOrganizationFieldsActiveInModal","organizationMongoIDInModal","newPassword1And2Valid","organizations","getOrganizationsOfUserInDB","attachUserToOrganizationInDB","saveOrganizationInDB","updateOrganizationInDB","organizationClickedOn","isUserOrganizationOwner","userWhoCreatedOrgMongoID","organizationObj","userMongoID","organization","handleEditOrganizationButtonClick","handleDeleteOrganizationInDB","App","user","loggedInSuccess","exact","render","path","component","BugView","CreateBug","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.384fc651.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Col = props =>\n  <div className={props.size.split(\" \").map(size => \"col-\" + size).join(\" \")} {...props}>\n    {props.children}\n  </div>;\n","import React from \"react\";\n\nexport const Container = props =>\n  <div id={props.id} className={`container${props.fluid === \"true\"  ? \"-fluid\" : \"\"}`} {...props}>\n    {props.children}\n  </div>;\n","import React from \"react\";\n//({ fluid, children, props })\nexport const Row = props =>\n  <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props}> \n    {props.children}\n  </div>;\n","import React from \"react\";\n\nexport const Input = props =>\n  <div className={props.formgroupclass}>\n\n    <label htmlFor=\"inputField\">{props.label}</label>\n    <input className=\"form-control\" id=\"inputField\" {...props} />\n    {props.isvalid === \"true\" ? \"\" : <span className=\"help-block\">{props.fielderror}</span>}\n  </div>;\n","import React from \"react\";\n\nexport const Button = props =>\n  <button {...props} className=\"btn btn-pill btn-light btn-lg\">\n    {props.children}\n  </button>;\n","import React from \"react\";\r\n\r\nexport const TextArea = props =>\r\n    <div className={props.formgroupclass}>\r\n        <label htmlFor=\"bugDescriptionField\">{props.label}</label>\r\n        <textarea className=\"form-control\" id=\"bugDescriptionField\" rows=\"5\" {...props}></textarea>\r\n        {props.isvalid === \"true\" ? \"\" : <span className=\"help-block\">{props.fielderror}</span>}\r\n    </div>;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n    // USER CALLS  -----\r\n    user: function () {\r\n        console.log(\"i'm in API.js file, calling user\");\r\n        return axios.get(\"/api/user\");\r\n    },\r\n    sendForgotPasswordEmail(userObj) {\r\n        console.log(\"i'm in API.JS on the front end\");\r\n        return axios.post(\"/api/user/sendForgotPasswordEmail\", userObj);\r\n    },\r\n    updateUserInDB(userObj){\r\n        return axios.post(\"/api/user/updateUser\", userObj);\r\n    },\r\n    login: function (userData) {\r\n        console.log(\"LoginAPI\")\r\n        console.log(userData);\r\n        // return axios.get(\"/api/user/login\");\r\n        return axios.post(\"/api/user/login\", userData)\r\n    },\r\n    saveUser: function (userData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/user/saveUser\", userData);\r\n    },\r\n\r\n    //BUG CALL --------\r\n    saveBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/saveBug\", bugData);\r\n    },\r\n    updateBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/updateBug\", bugData);\r\n    },\r\n    deleteBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/deleteBug\", bugData);\r\n    },\r\n    getAllBugs: function (organizationMongoID) {\r\n        console.log(\"I'm in the GETALLBUGS method on API.js, below is organizationMongoID\");\r\n        console.log(organizationMongoID);\r\n        //TODO - Set up organization ID query\r\n        //Query db to get all bugs\r\n        return axios.get(\"/api/bug/getAllBugs/\" + organizationMongoID);\r\n    },\r\n    \r\n\r\n    // BUG COMMENT CALLS -------\r\n    deleteBugComment: function (bugCommentData) {\r\n        console.log(\"I'm in deleteBugComment Api.js\");\r\n        console.log(bugCommentData)\r\n        return axios.post(\"/api/bug/deleteBugComment/\" + bugCommentData._id);\r\n    },\r\n    saveBugComment: function(bugAndCommentData) {\r\n        return axios.post(\"/api/bug/saveBugComment\", bugAndCommentData);\r\n    },\r\n    getBugComments: function(bugData) {\r\n        console.log(\"I'm in getbugcomments front end API.JS\");\r\n        console.log(bugData.mongoID);\r\n        return axios.get(\"/api/bug/getBugComments/\" + bugData.mongoID);\r\n    },\r\n\r\n    // ORGANiZATION CALLS\r\n    saveOrganizationInDB: function(userData) {\r\n        console.log(\"I'm in the saveOrganizationInDB method in API file\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/organization/saveOrganization\", userData);\r\n    },\r\n    getOrganizationsOfUserInDB: function(userData){\r\n        console.log(\"I'm in the getOrganizationsOfUserInDB method in API file\");\r\n        console.log(userData);\r\n        return axios.get(\"/api/organization/getAllOrganizationsOfUser/\" + userData.mongoID);\r\n    },\r\n    attachUserToOrganizationInDB: function (userData) {\r\n        console.log(\"I'm in the attachUserToOrganizationInDB method in API file\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/organization/attachUserToOrganization\", userData);\r\n    },\r\n    deleteOrganizationInDB: function(organizationData){\r\n        console.log(\"I'm in the delete Organization In DB method\");\r\n        console.log(organizationData);\r\n        return axios.post(\"/api/organization/deleteOrganization\", organizationData);\r\n    },\r\n    updateOrganizationInDB: function(userData){\r\n        console.log(\"I'm in the update Organization in DB method\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/organization/updateOrganization\", userData)\r\n    }\r\n\r\n};","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { Input, Button } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { withRouter } from 'react-router';\r\n\r\nimport \"./landing-page.css\";\r\nclass LandingPage extends Component {\r\n    constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        emailAddress: \"\",\r\n        password: \"\",\r\n        formErrors: {firstName: \"\", lastName: \"\", emailAddress:\"\", password:\"\"},\r\n          redirectTo: null,\r\n        firstNameValid: false,\r\n        lastNameValid: false,\r\n        passwordValid: false,\r\n        emailAddressValid: false,\r\n        loginOrCreateAccountButtonClicked: false,\r\n        loginButtonClicked: true,\r\n        forgotPasswordButtonClicked: false,\r\n        serverErrorMessage: \"\"\r\n    };\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    } \r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ serverErrorMessage: this.props.serverErrorMessage });\r\n    }\r\n    validateFields() {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let emailAddressValid = this.state.emailAddressValid;\r\n        let firstNameValid = this.state.firstNameValid;\r\n        let lastNameValid = this.state.lastNameValid;\r\n        let passwordValid = this.state.passwordValid;\r\n\r\n        //Validating email using Regex\r\n        let regex = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\r\n         emailAddressValid = new RegExp(regex).test(this.state.emailAddress);\r\n        \r\n        fieldValidationErrors.emailAddress = emailAddressValid ? \"\" : \"Please provide a valid email\";\r\n\r\n        //Validating First Name by checking if there is anything there.\r\n        firstNameValid = this.state.firstName.length > 0;\r\n        fieldValidationErrors.firstName = firstNameValid ? \"\": \"Please provide your first name\";\r\n\r\n        //Validating Last Name by checking if there is anything there.\r\n        lastNameValid = this.state.lastName.length > 0;\r\n        fieldValidationErrors.lastName = lastNameValid ? \"\":\"Please provide your last name\";\r\n\r\n\r\n        if (!this.state.loginButtonClicked)\r\n        {\r\n        //validating password\r\n        passwordValid = this.state.password.length >= 6;\r\n        fieldValidationErrors.password = passwordValid ? \"\" : \"Please provide a password of atleast 8 characters\";\r\n        }\r\n\r\n\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            emailAddressValid: emailAddressValid,\r\n            firstNameValid: firstNameValid,\r\n            lastNameValid: lastNameValid,\r\n            passwordValid: passwordValid\r\n        }, () => {\r\n            console.log(\"validate fields\");\r\n            console.log(this.state.emailAddress);\r\n            console.log(this.state.emailAddressValid);\r\n            if(this.state.loginButtonClicked && emailAddressValid){\r\n                //If the login button is clicked then we want submit LOGIN request, which is different than Create Account request\r\n                this.props._login(this.state.emailAddress, this.state.password);\r\n\r\n            }else if(this.state.loginOrCreateAccountButtonClicked && !this.state.loginButtonClicked && emailAddressValid && firstNameValid && lastNameValid && passwordValid){\r\n                //If Create Account button was clicked, then we want to post the user to the database.\r\n                this.saveUser();\r\n            }else if(this.state.forgotPasswordButtonClicked){\r\n                //If forgot password button was clicked.\r\n                this.sendForgotPasswordEmail();\r\n            }\r\n        });    \r\n    }\r\n\r\n    //Here we check if the field has an error. If it does, it will add the \"has-error\" class to the field.\r\n    //\"has-error\" is a default bootstrap class that will nicely color the outline of the field red to indicate an error for the user. \r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    //Below are all the button click methods - Just to set it up so before I actually submit data to DB ----------------------------------\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        console.log(\"i'm in login submit form\");\r\n        this.setState({\r\n            emailAddressValid: true, firstNameValid: true, lastNameValid: true, passwordValid: true,\r\n            formErrors: { firstName: \"\", lastName: \"\", emailAddress: \"\", password: \"\" }\r\n        }, () => {\r\n                this.validateFields();\r\n        });\r\n\r\n    };\r\n\r\n    handleLoginButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: true, loginButtonClicked: true, forgotPasswordButtonClicked: false,\r\n                        emailAddressValid: true, firstNameValid: true, lastNameValid: true, passwordValid: true,\r\n            formErrors: { firstName: \"\", lastName: \"\", emailAddress: \"\", password: \"\", serverErrorMessage: \"\" }\r\n        })\r\n        \r\n    }\r\n    handleCreateAccountButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: true, loginButtonClicked: false, forgotPasswordButtonClicked: false,\r\n                        emailAddressValid: true, firstNameValid: true, lastNameValid: true, passwordValid: true,\r\n            formErrors: { firstName: \"\", lastName: \"\", emailAddress: \"\", password: \"\", serverErrorMessage: \"\" }        \r\n        })\r\n    }\r\n\r\n    handleForgotPasswordButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: false, loginButtonClicked: false, forgotPasswordButtonClicked: true,\r\n                        emailAddressValid: true, firstNameValid: true, lastNameValid: true, passwordValid: true,\r\n                        formErrors: { firstName: \"\", lastName: \"\", emailAddress: \"\", password: \"\", serverErrorMessage:\"\" }       \r\n        })\r\n    }\r\n    // END of BUTTON CLICK METHODS\r\n\r\n    sendForgotPasswordEmail() {\r\n        let userObj = {\r\n            email: this.state.emailAddress\r\n        }\r\n\r\n        console.log(\"I'm in SEND FORGOT PASSWROD EMAIL METHOD ON landing-page js\");\r\n\r\n        API.sendForgotPasswordEmail(userObj)\r\n            .then(response => {\r\n\r\n\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"send forgot password was successful, i'm back at landing-page.js, in API.sendForgotPasswordEmail\");\r\n                    console.log(response);\r\n                } else {\r\n                    console.log(\"error found!!!\");\r\n                    console.log(response);\r\n                    this.setState({ serverErrorMessage: response.data.error })\r\n                }\r\n            })\r\n    }\r\n\r\n    saveUser() {\r\n        console.log(this.state.passwordValid + \" passwordvalid?\");\r\n        // if (this.state.passwordValid && this.state.firstNameValid && this.state.lastNameValid) {\r\n\r\n            console.log(\"Called saveUser() from LandingPage  .... BELOW IS THE STATE\");\r\n            console.log(this.state);\r\n            let userObj = {\r\n                userId: null,\r\n                username: this.state.emailAddress,\r\n                password: this.state.password,\r\n                email: this.state.emailAddress,\r\n                user_email: this.state.email,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName\r\n            }\r\n            API.saveUser(userObj)\r\n                .then(response => {\r\n\r\n\r\n\r\n                    if (!response.data.error) {\r\n                        //userObj.userId = response.data.doc._id;\r\n\r\n\r\n                        //Now that the user account is created, let's automatically login the user in\r\n                         this.props._login(this.state.emailAddress, this.state.password, userObj);\r\n\r\n        \r\n                    } else {\r\n                        //Usually this happens when an email address was already used.\r\n                        this.setState({ serverErrorMessage: response.data.error })\r\n                    }\r\n                })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"component has mounted\");\r\n        console.log(this);\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    render() {\r\n\r\n        if (this.props.redirectTo) {\r\n            console.log(\"THIS . PROPS. REDIRECT EXISTS IN LANDING PAGE!!!\");\r\n            console.log(this.props.redirectTo);\r\n            return <Redirect to={{ pathname: this.props.redirectTo }} />\r\n        } else {\r\n        return (\r\n            <Container id=\"container\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n\r\n                    <hr id=\"hline\"></hr>\r\n                    <Col id=\"formCol\" size=\"sm-6\">\r\n                        <h1 id=\"loginBugSlayerTitle\">BugSlayer</h1>\r\n                        {this.state.loginOrCreateAccountButtonClicked ?\r\n                            <div>\r\n                                {this.state.loginButtonClicked ?\r\n                                    <h3 id=\"formHeader\">Login</h3>\r\n                                    :\r\n                                    <h3 id=\"formHeader\">Create Account</h3>\r\n\r\n                                }\r\n                                <form>\r\n                                    \r\n\r\n                                    {this.state.loginButtonClicked ?\r\n\r\n                                        \"\"\r\n                                        :\r\n\r\n                                        <div>\r\n                                           \r\n                                            <Input label=\"First Name\" onBlur={this.formatInput.bind(this)} isvalid={this.state.firstNameValid.toString()} fielderror={this.state.formErrors.firstName} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.firstName)}`} value={this.state.firstName} id=\"firstName\" onChange={this.handleChange.bind(this)} name=\"firstName\"></Input>\r\n\r\n\r\n                                    \r\n                                            <Input label=\"Last Name\" onBlur={this.formatInput.bind(this)} isvalid={this.state.lastNameValid.toString()} fielderror={this.state.formErrors.lastName} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.lastName)}`} value={this.state.lastName} id=\"lastName\" onChange={this.handleChange.bind(this)} name=\"lastName\"></Input>\r\n\r\n                                        </div>\r\n\r\n                                    }\r\n\r\n                               \r\n                                    <Input label=\"Email Address\" onBlur={this.formatInput.bind(this)} isvalid={this.state.emailAddressValid.toString()} fielderror={this.state.formErrors.emailAddress} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.emailAddress)}`} value={this.state.emailAddress} id=\"emailAddress\" onChange={this.handleChange.bind(this)} name=\"emailAddress\"></Input>\r\n\r\n                              \r\n                                    <Input label=\"Password\" type=\"password\" onBlur={this.formatInput.bind(this)} isvalid={this.state.passwordValid.toString()} fielderror={this.state.formErrors.password} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.password)}`} value={this.state.password} id=\"password\" onChange={this.handleChange.bind(this)} name=\"password\"></Input>\r\n\r\n                                    <Button onClick={this.handleFormSubmit.bind(this)}> Submit </Button>\r\n\r\n                                    {this.state.loginButtonClicked ?\r\n                                        <div>\r\n                                            <h3 id=\"formFooterLink\" className=\"formFooterLink\" \r\n                                            onClick={this.handleCreateAccountButtonClick.bind(this)}>Create Account instead?</h3>\r\n                                            <h3 id=\"formFooterLink\" className=\"formFooterLink\" onClick={this.handleForgotPasswordButtonClick.bind(this)}>Forgot Password?</h3>\r\n                                        </div>\r\n                                        :\r\n                                        <div>\r\n                                        <h3 id=\"formFooterLink\" onClick={this.handleLoginButtonClick.bind(this)}>Login instead?</h3>\r\n                                        <h3 id=\"formFooterLink\" onClick={this.handleForgotPasswordButtonClick.bind(this)}>Forgot Password?</h3>\r\n                                        </div>\r\n\r\n                                    }\r\n                                </form>\r\n                                <span className=\"help-block serverErrorMessage\">{this.state.serverErrorMessage}</span>\r\n                                <br />\r\n                            </div>\r\n                            : \r\n\r\n                            <div>\r\n\r\n                                {\r\n                                    this.state.forgotPasswordButtonClicked ?\r\n                                        <div>\r\n\r\n                                            <p><strong>Please enter your email address. If correct, we will send you an email!</strong></p>\r\n                                            <p>Email Address</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.emailAddressValid.toString()} fielderror={this.state.formErrors.emailAddress} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.emailAddress)}`} value={this.state.emailAddress} id=\"emailAddress\" onChange={this.handleChange.bind(this)} name=\"emailAddress\"></Input>\r\n                                            <Button onClick={this.handleFormSubmit.bind(this)}> Submit </Button>\r\n                                            \r\n                                            <h3 id=\"formFooterLink\" className=\"formFooterLink\" onClick={this.handleLoginButtonClick.bind(this)}>Login instead?</h3>\r\n                                            <h3 id=\"formFooterLink\" className=\"formFooterLink\" onClick={this.handleCreateAccountButtonClick.bind(this)}>Create Account instead?</h3>\r\n                                        </div>\r\n                                            :                                                                                \r\n                                             <div>                                \r\n                                            <Button onClick={this.handleLoginButtonClick.bind(this)}> Login </Button>\r\n                                            <Button onClick={this.handleCreateAccountButtonClick.bind(this)}> Create Account </Button>\r\n                                            <Button onClick={this.handleForgotPasswordButtonClick.bind(this)}>Forgot Password?</Button>      \r\n                                            </div>\r\n\r\n\r\n                                }\r\n                                <span className=\"help-block serverErrorMessage\">{this.state.serverErrorMessage}</span>\r\n\r\n                            </div>\r\n                              \r\n                        }\r\n                        \r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n\r\n                }\r\n    \r\n            }\r\n}\r\n\r\n// export default LandingPage;\r\nexport default withRouter(LandingPage)\r\n","import React from \"react\";\r\n\r\n\r\nexport const BugCommentContainer = ({ children }) => (\r\n    <div id=\"wrapper\">\r\n        <div id=\"bugs\">\r\n            {children}\r\n        </div>\r\n        <div id=\"bugComments\"></div>\r\n    </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const BugCommentPanel = props => (\r\n    <div className='panel panel-default'>\r\n        <div className='panel-body note-panel'>\r\n            <p className=\"comment-text\"> {props.text} </p>\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport {BugCommentContainer, BugCommentPanel } from \"../../components/BugCommentContainer\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./bug-view.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass BugViewPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formErrors: { bugTitle: \"\" },\r\n            bugTitleValid: false,\r\n            isLogin: true,\r\n            isNewBug: false,\r\n            selectedBug: \"\",\r\n            currentModalTitle: \"Edit Bug\",\r\n            currentBugIndex: 0,\r\n            currentCompletedBugIndex: 0,\r\n            showModal: false,\r\n            showModal2: false,\r\n            bugData: [],\r\n            completedBugData: [],\r\n            filteredCompletedBugData: [],\r\n            filteredBugData: [],\r\n            bugTitleInModal: \"\",\r\n            bugCommentsInModal: [],\r\n            users: [{text: 'Tyler', id: '1'}, {text: 'Tawny', id: '2'}, {text: 'Anthony', id: '3'}, {text: 'Arthur', id:'4'}],\r\n            currentBugCommentInModal:\"\",\r\n            bugDescriptionInModal: \"\",\r\n            bugStatusInModal: \"\",\r\n            bugUserAssignedInModal: \"\",\r\n            userFilter: \"\",\r\n            statusFilter: \"\",\r\n            organizationMongoID: \"\",\r\n            organizationNameInTitle: \"\",\r\n            showActiveBugs: true,\r\n            showCompletedBugs: false,\r\n            isCurrentBugCompleted: false\r\n        };\r\n\r\n    }\r\n\r\n    delta = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        });\r\n    }\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    validateFields() {\r\n\r\n        \r\n            let fieldValidationErrors = this.state.formErrors;\r\n            let bugTitleValid = this.state.bugTitleValid;\r\n\r\n\r\n            bugTitleValid = this.state.bugTitleInModal.length > 0;\r\n            fieldValidationErrors.bugTitle = bugTitleValid ? \"\" : \"Please add Bug Title.\";\r\n\r\n\r\n            this.setState({\r\n                formErrors: fieldValidationErrors,\r\n                bugTitleValid: bugTitleValid\r\n            }, () => {\r\n                    this.updateOrCreateBug();\r\n            });\r\n        \r\n\r\n    }\r\n\r\n    //Here we check if the field has an error. If it does, it will add the \"has-error\" class to the field.\r\n    //\"has-error\" is a default bootstrap class that will nicely color the outline of the field red to indicate an error for the user. \r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.validateFields();\r\n    };\r\n\r\n\r\n    //************************** DB METHODS ************** THESE METHODS SAVE, EDIT, GET BUGS FROM DB *******************************************\r\n    saveNewBugInDB = () => {\r\n        console.log(\"Im in saveNewBugIn DB\");\r\n        console.log(bugObj);\r\n\r\n        var bugObj = {\r\n            organizationMongoID: this.state.organizationMongoID,\r\n            bugTitle: this.state.bugTitleInModal,\r\n            bugDescription: this.state.bugDescriptionInModal,\r\n            userAssigned: this.state.bugUserAssignedInModal,\r\n            status: this.state.bugStatusInModal\r\n        }\r\n\r\n        API.saveBug(bugObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"I WAS SUCCESSFUL Saving Bug FROM Bug View PAGE\");\r\n                    console.log(response.data.bugDoc._id);\r\n\r\n\r\n                    bugObj.mongoID = response.data.bugDoc._id;\r\n                    bugObj.newMongoID = response.data.bugDoc._id;\r\n                    bugObj.id = this.state.currentBugIndex;\r\n                    bugObj.isCompleted = response.data.isCompleted;\r\n\r\n                    console.log(bugObj);\r\n\r\n                    this.setState({ showModal: false });\r\n                    this.state.bugData.push(bugObj);\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n\r\n    updateBugInDB = () => {\r\n        console.log(\"I'm in the update bug in DB\");\r\n        console.log(this.state.selectedBug);\r\n        API.updateBug(this.state.selectedBug)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"!!!!!!!!!!!!!!!I WAS SUCCESSFUL UPDATE Bug FROM Bug View PAGE!!!!!!!!!!!!!\");\r\n                    console.log(response.data);\r\n\r\n                    this.setState({ showModal: false });\r\n\r\n\r\n\r\n                    if (this.state.selectedBug.isCompleted){\r\n                        //Once updated we need to update our state's local array\r\n\r\n                        //We add to completed bug\r\n                        this.state.completedBugData[this.state.currentCompletedBugIndex] = this.state.selectedBug;\r\n\r\n                        //we remove from active bug list\r\n                        var index = this.state.bugData.indexOf(this.state.selectedBug);\r\n                        if (index > -1) {\r\n                            this.state.bugData.splice(index, 1);\r\n                        }\r\n                    } else {\r\n                        //Otherwise, if bug is incomplete...\r\n\r\n                        //We add to active bugs\r\n                        this.state.bugData[this.state.currentBugIndex] = this.state.selectedBug;\r\n\r\n                        //We remove from the completed bug list\r\n                        var index = this.state.completedBugData.indexOf(this.state.selectedBug);\r\n                        if (index > -1) {\r\n                            this.state.completedBugData.splice(index, 1);\r\n                        }                   \r\n\r\n                        \r\n                    }\r\n                    \r\n\r\n\r\n\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n    checkBothCompletedAndActiveBugData(bugArrayFromDB){\r\n        var bugs = [];\r\n        var completedBugs = this.state.completedBugData;\r\n        //Loop through bug data received from the server.\r\n        for (var i = 0; i < bugArrayFromDB.length; i++) {\r\n\r\n            //If bug is completed, then we add to separate array for rendering on the UI purposes\r\n            if (bugArrayFromDB[i].isCompleted) {\r\n\r\n                console.log(\"COMPLETED BUG \" + this.state.currentBugIndex);\r\n                console.log(bugArrayFromDB[i]);\r\n                completedBugs.push({\r\n                    mongoID: bugArrayFromDB[i]._id,\r\n                    id: this.state.currentCompletedBugIndex,\r\n                    bugTitle: bugArrayFromDB[i].bugTitle,\r\n                    bugDescription: bugArrayFromDB[i].bugDescription,\r\n                    userAssigned: bugArrayFromDB[i].userAssigned,\r\n                    status: bugArrayFromDB[i].status,\r\n                    isCompleted: bugArrayFromDB[i].isCompleted\r\n                })\r\n\r\n\r\n            } else {\r\n                //If bug is not completed, then we add to separate array\r\n                console.log(\"bug \" + this.state.currentBugIndex);\r\n                console.log(bugArrayFromDB[i]);\r\n                bugs.push({\r\n                    mongoID: bugArrayFromDB[i]._id,\r\n                    id: this.state.currentBugIndex,\r\n                    bugTitle: bugArrayFromDB[i].bugTitle,\r\n                    bugDescription: bugArrayFromDB[i].bugDescription,\r\n                    userAssigned: bugArrayFromDB[i].userAssigned,\r\n                    status: bugArrayFromDB[i].status,\r\n                    isCompleted: bugArrayFromDB[i].isCompleted\r\n                })\r\n\r\n\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n\r\n            this.setState({ currentBugIndex: this.state.currentBugIndex + 1, currentCompletedBugIndex: this.state.completedBugData + 1 });\r\n\r\n\r\n\r\n\r\n        }\r\n        console.log(\"before I set state, here is completed bugs\");\r\n        console.log(completedBugs);\r\n        this.setState({ bugData: bugs, completedBugData: completedBugs });\r\n        console.log(\"IF IM HEre THEN THE DATA JUST UPDATED!!!!\");\r\n        this.forceUpdate();\r\n        console.log(\"Here is bug data from inside callback of API.getAllBugs in bug-view page!\");\r\n        console.log(bugs);\r\n\r\n        //At default, we want to show all bugs in the table\r\n        this.putAllBugsIntoFilteredArray();\r\n        this.forceUpdate();\r\n    }\r\n\r\n\r\n\r\n    getBugsFromDB() {\r\n        API.getAllBugs(this.state.organizationMongoID)\r\n            .then(response => {\r\n                if (!response.data.error) {\r\n                    console.log(\"SUCCESSFULLY GOT BUGS FROM DB_____________________________________________________\");\r\n                    var bugs = [];\r\n                    var completedBugs = [];\r\n                    console.log(response.data);\r\n                    var bugArrayFromDB = response.data.organizationDoc.bugs;\r\n                    console.log(\"here are all the bugs I got back from DB **************************\");\r\n                    console.log(bugArrayFromDB);\r\n                    //Loop through bug data received from the server.\r\n                    for (var i = 0; i < bugArrayFromDB.length; i++) {\r\n\r\n                        //If bug is completed, then we add to separate array for rendering on the UI purposes\r\n                        if (bugArrayFromDB[i].isCompleted){\r\n\r\n                            console.log(\"COMPLETED BUG \" + this.state.currentBugIndex);\r\n                            console.log(bugArrayFromDB[i]);\r\n                            completedBugs.push({\r\n                                mongoID: bugArrayFromDB[i]._id,\r\n                                id: this.state.currentCompletedBugIndex,\r\n                                bugTitle: bugArrayFromDB[i].bugTitle,\r\n                                bugDescription: bugArrayFromDB[i].bugDescription,\r\n                                userAssigned: bugArrayFromDB[i].userAssigned,\r\n                                status: bugArrayFromDB[i].status,\r\n                                isCompleted: bugArrayFromDB[i].isCompleted\r\n                            })\r\n\r\n\r\n                        }else {                           \r\n                        //If bug is not completed, then we add to separate array\r\n                           console.log(\"bug \" + this.state.currentBugIndex);\r\n                            console.log(bugArrayFromDB[i]);\r\n                            bugs.push({\r\n                                mongoID: bugArrayFromDB[i]._id,\r\n                                id: this.state.currentBugIndex,\r\n                                bugTitle: bugArrayFromDB[i].bugTitle,\r\n                                bugDescription: bugArrayFromDB[i].bugDescription,\r\n                                userAssigned: bugArrayFromDB[i].userAssigned,\r\n                                status: bugArrayFromDB[i].status,\r\n                                isCompleted: bugArrayFromDB[i].isCompleted\r\n                            })\r\n\r\n\r\n\r\n\r\n                        }\r\n\r\n\r\n\r\n\r\n                        this.setState({ currentBugIndex: this.state.currentBugIndex + 1, currentCompletedBugIndex: this.state.currentCompletedBugIndex + 1});\r\n\r\n\r\n\r\n\r\n                   }\r\n                   console.log(\"before I set state, here is completed bugs\");\r\n                   console.log(completedBugs);\r\n                    this.setState({ bugData: bugs, completedBugData: completedBugs });\r\n                    console.log(\"IF IM HEre THEN THE DATA JUST UPDATED!!!!\");\r\n                    this.forceUpdate();\r\n                    console.log(\"Here is bug data from inside callback of API.getAllBugs in bug-view page!\");\r\n                    console.log(bugs);\r\n\r\n                    //At default, we want to show all bugs in the table\r\n                    this.putAllBugsIntoFilteredArray();\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            }).catch(err => console.log(err));\r\n\r\n            console.log(\"I am here\");\r\n    }\r\n\r\n    deleteBugInDB(bugClickedOn) {\r\n        console.log(\"I'm in delete bug in DB method. Here is the bug that was clicked on\");\r\n        console.log(bugClickedOn);\r\n        bugClickedOn.bugMongoID = bugClickedOn.mongoID;\r\n        bugClickedOn.organizationMongoID = this.state.organizationMongoID;\r\n        API.deleteBug(bugClickedOn)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"I WAS SUCCESSFUL DELETING THE Bug FROM Bug View PAGE. Here is the response.\");\r\n                    console.log(response);\r\n\r\n                    if (response.data.deletedBugDoc.deletedCount > 0){\r\n                         //Removing the bug from the UI\r\n                         const index = this.state.bugData.indexOf(bugClickedOn);\r\n                         if (index > -1) {\r\n                             this.state.bugData.splice(index, 1);\r\n                         }\r\n                         this.adjustBugDataOrder();\r\n                     } else {\r\n                         console.log(\"Deleting the bug failed for some reason!\");\r\n                     }\r\n\r\n                     this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    // Below methods are related to bug comments\r\n    addBugComment() {\r\n        let currentBug = this.state.bugData[this.state.currentBugIndex];\r\n        if(currentBug){\r\n            currentBug.text = this.state.currentBugCommentInModal;\r\n       \r\n\r\n        console.log(\"Im in the addBugComment Method on bugview page. Below is currentBug\");\r\n        console.log(currentBug);\r\n        if (this.state.currentBugCommentInModal) {\r\n            API.saveBugComment(currentBug)\r\n                .then(res => this.renderBugComments(currentBug))\r\n                .catch(err => console.log(err));\r\n        }\r\n\r\n         }\r\n\r\n    };\r\n    renderBugComments(bugData) {\r\n\r\n        console.log(\"im in the render bug data on the front end\");\r\n        console.log(bugData);\r\n        API.getBugComments(bugData)\r\n            .then(res => {\r\n                console.log(\"I got my res from render bug comments\");\r\n                console.log(res);\r\n                if(res.data !== null){\r\n                    this.setState({\r\n                        bugCommentsInModal: res.data.bugComments\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    deleteBugComment(bugComment) {\r\n        API.deleteBugComment(bugComment)\r\n            .then(res => {\r\n                this.renderBugComments(this.state.bugData[this.state.currentBugIndex]);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n    // ****************** END OF DB METHODS*******************************************\r\n\r\n\r\n    //************************THESE METHODS ARE CALLED FROM BUTTONS WITHIN THE MODAL*********************\r\n    updateOrCreateBug = () => {\r\n        if(!this.state.bugTitleValid){\r\n            return;\r\n        }\r\n        if (this.state.isNewBug){\r\n            this.saveNewBugInDB();\r\n        } else {\r\n            console.log(\"I'm in the UPDATE OR CREATE BUG METHOD, below is the bug data\");\r\n            console.log(this.state.bugData);\r\n            console.log(\"here is the currentBugIndex: \" + this.state.currentBugIndex);\r\n            //UPDATE THE BUG DATA LOCALLY BEFORE PUSHING TO DB\r\n            this.state.bugData[this.state.currentBugIndex].bugTitle = this.state.bugTitleInModal;\r\n            this.state.bugData[this.state.currentBugIndex].bugDescription = this.state.bugDescriptionInModal;\r\n            this.state.bugData[this.state.currentBugIndex].userAssigned = this.state.bugUserAssignedInModal;\r\n            this.state.bugData[this.state.currentBugIndex].status = this.state.bugStatusInModal;\r\n\r\n            this.setState({selectedBug: this.state.bugData[this.state.currentBugIndex]});\r\n            this.updateBugInDB();\r\n        }\r\n    }\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, bugTitleInModal: \"\", bugDescriptionInModal: \"\", currentBugCommentInModal: \"\" });\r\n        console.log(\"I'm in closemodal!! Below is the bug object\");\r\n        console.log(this.state.bugData[this.state.currentIndex]);\r\n        console.log(this.state.bugUserAssignedInModal);\r\n        console.log(this.state.bugStatusInModal);\r\n    }\r\n    //*********************** END OF MODAL BUTTON CLICK METHODS ****************************\r\n\r\n\r\n    // ******************** THESE METHODS ARE CALLED WHEN CREATE/EDIT BUTTONS ARE FIRST CLICKED ******************\r\n    editBugButton(bugClickedOn) {\r\n        console.log(\"Edit bug clicked on !!!\");\r\n        console.log(bugClickedOn);\r\n        this.adjustBugDataOrder()\r\n        this.setState({ showModal: true, \r\n            currentModalTitle: \"Edit Bug\",\r\n            currentBugIndex: bugClickedOn.id,\r\n            bugTitleInModal: bugClickedOn.bugTitle, \r\n            bugDescriptionInModal: bugClickedOn.bugDescription, \r\n            bugStatusInModal: bugClickedOn.status,\r\n            bugUserAssignedInModal: bugClickedOn.userAssigned,\r\n            isNewBug: false, \r\n            selectedBug: bugClickedOn });\r\n        this.renderBugComments(bugClickedOn);\r\n    }\r\n    deleteBugButton(bugClickedOn){ \r\n        console.log(\"Delete Bug Clicked on!!! \");\r\n        this.deleteBugInDB(bugClickedOn);\r\n    }\r\n\r\n    createNewBugButton = () => {\r\n        this.setState({ showModal: true, currentModalTitle: \"Create Bug\", isNewBug: true, bugTitleInModal: \"\", bugDescriptionInModal: \"\" });\r\n    }\r\n    // ******************** END OF INITIAL BUTTON CLICK METHODS ******************\r\n\r\n\r\n\r\n    //CALLS THIS WHEN THE COMPONENT MOUNTS, basically \"on page load\"\r\n    componentDidMount() {\r\n        console.log(\"Component Did Mount has been called\");\r\n        console.log(\"BELOW IS THE PASSED PROPS STATE\");\r\n        console.log(this.props.location.state);\r\n        this.setState({ organizationMongoID: this.props.location.state.organizationMongoID, organizationNameInTitle: this.props.location.state.organizationName }, () => {\r\n            this.getBugsFromDB();\r\n        });\r\n\r\n        \r\n    } \r\n\r\n    putAllBugsIntoFilteredArray() {\r\n        this.setState({filteredBugData: []});\r\n        this.state.bugData.map(bug => {\r\n            return this.state.filteredBugData.push(bug);\r\n        });\r\n    }\r\n    adjustBugDataOrder() {\r\n        //Update the current page's id of the bug for UI purposes\r\n        for (var i = 0; i < this.state.bugData.length; i++) {\r\n            this.state.bugData[i].id = i;\r\n        }\r\n        for(var j=0; j<this.state.completedBugData.length; j++){\r\n            this.state.completedBugData[j].id = j;\r\n        }\r\n    }\r\n\r\n    //If you click \"Show Completed Bugs\" or \"Hide Completed Bugs\", this will show or hide.\r\n    swapRenderCompletedBugs = () => {\r\n        if(this.state.showCompletedBugs){\r\n            this.setState({showCompletedBugs: false})\r\n        }else {\r\n            this.setState({ showCompletedBugs: true })\r\n        }\r\n        \r\n    }\r\n    //If you click \"Show Active Bugs\" or \"Hide Active Bugs\", this will show or hide.\r\n    swapRenderActiveBugs = () => {\r\n        if (this.state.showActiveBugs) {\r\n            this.setState({ showActiveBugs: false })\r\n        } else {\r\n            this.setState({ showActiveBugs: true })\r\n        }\r\n    }\r\n\r\n    completedCheck(bug){\r\n        console.log(\"YOU JUST CLICKED COMPLETED CHECK\");\r\n        console.log(bug);\r\n\r\n       if(bug.isCompleted){\r\n           bug.isCompleted = false;\r\n       }else {\r\n           bug.isCompleted = true;\r\n       }\r\n\r\n        this.setState({ selectedBug: bug }, () => {\r\n            //this.adjustBugDataOrder();\r\n            this.updateBugInDB();\r\n            //this.checkBothCompletedAndActiveBugData(this.state.bugData)\r\n            this.forceUpdate();\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        if (this.state.userFilter !== \"\" || this.state.statusFilter !== \"\"){\r\n            this.state.filteredBugData  = [];\r\n            this.state.bugData.map(bug => {\r\n                \r\n               var assigneeFilterIsActive = false;\r\n                var statusFilterIsActive = false;\r\n                //APPLY THE FILTERS\r\n            if (this.state.statusFilter === bug.status && this.state.statusFilter !== \"\")  {\r\n\r\n                statusFilterIsActive = true;\r\n            }          \r\n            if(this.state.userFilter === bug.userAssigned && this.state.userFilter !== \"\") {\r\n                assigneeFilterIsActive = true;\r\n            }\r\n            if (statusFilterIsActive && assigneeFilterIsActive){\r\n            return this.state.filteredBugData.push(bug);\r\n            } else if (statusFilterIsActive && this.state.userFilter === \"\"){\r\n                \r\n                return this.state.filteredBugData.push(bug);\r\n            }\r\n            else if (assigneeFilterIsActive && this.state.statusFilter === \"\") {\r\n                return this.state.filteredBugData.push(bug);\r\n            }\r\n        });\r\n          } else {\r\n            this.state.filteredBugData = [];\r\n            this.state.bugData.map(bug => {\r\n                    return this.state.filteredBugData.push(bug);\r\n\r\n            });\r\n\r\n          }\r\n\r\n\r\n\r\n\r\n          // NOW WE WILL DO THE SAME LOGIC FOR COMPLETED BUGS\r\n        if (this.state.userFilter !== \"\" || this.state.statusFilter !== \"\") {\r\n            this.state.filteredCompletedBugData = [];\r\n            this.state.completedBugData.map(bug => {\r\n\r\n                var assigneeFilterIsActive = false;\r\n                var statusFilterIsActive = false;\r\n                //APPLY THE FILTERS\r\n                if (this.state.statusFilter === bug.status && this.state.statusFilter !== \"\") {\r\n\r\n                    statusFilterIsActive = true;\r\n                }\r\n                if (this.state.userFilter === bug.userAssigned && this.state.userFilter !== \"\") {\r\n                    assigneeFilterIsActive = true;\r\n                }\r\n                if (statusFilterIsActive && assigneeFilterIsActive) {\r\n                    return this.state.filteredCompletedBugData.push(bug);\r\n                } else if (statusFilterIsActive && this.state.userFilter === \"\") {\r\n\r\n                    return this.state.filteredCompletedBugData.push(bug);\r\n                }\r\n                else if (assigneeFilterIsActive && this.state.statusFilter === \"\") {\r\n                    return this.state.filteredCompletedBugData.push(bug);\r\n                }\r\n            });\r\n        } else {\r\n            this.state.filteredCompletedBugData = [];\r\n            this.state.completedBugData.map(bug => {\r\n                return this.state.filteredCompletedBugData.push(bug);\r\n\r\n            });\r\n\r\n        }\r\n        return (\r\n             <Container id=\"containerViewBugs\" fluid=\"true\">\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugtrackerTitle\" id=\"organizationNameInBugTitle\">{this.state.organizationNameInTitle}</h1>\r\n                                <h2 className=\"display-4 BugTrackerTitle\">View Bugs</h2>\r\n                            </Container>\r\n                        </div>\r\n                        <br />\r\n                        <br />\r\n                        <Row>\r\n                            <Col size=\"sm-1\">\r\n                                <p><strong>Assignee </strong> </p>\r\n                                <select value={this.state.userFilter} onChange={this.handleChange.bind(this)} id=\"userFilter\" name=\"userFilter\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tyler\">Tyler</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tawny\">Tawny</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Anthony\">Anthony</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Arthur\">Arthur</option>\r\n                                </select>\r\n                            </Col>\r\n                            <Col size=\"sm-1\">\r\n                                <p><strong>Status</strong></p>\r\n                                <select value={this.state.statusFilter} onChange={this.handleChange.bind(this)} id=\"statusFilter\" name=\"statusFilter\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Open\">Open</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"In Development\">In Development</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Needs Testing\">Needs Testing</option>\r\n                                </select>\r\n                            </Col>\r\n                            <Col size=\"sm-2\">\r\n                                <Link to=\"/profile\" className=\"log\" ><Button>View Profile</Button></Link>\r\n                            </Col>\r\n                            <Col size=\"sm-2\">\r\n                                <Button type=\"button\" className=\"btn btn-primary\" onClick={this.createNewBugButton}>Create New Bug</Button>\r\n                            </Col>\r\n                            <Col size=\"sm-2\">\r\n                                {this.state.showActiveBugs ?\r\n                                    <Button type=\"button\" className=\"btn btn-primary\" onClick={this.swapRenderActiveBugs.bind(this)}>Hide Active Bugs</Button>\r\n                                    :\r\n                                    <Button type=\"button\" className=\"btn btn-primary\" onClick={this.swapRenderActiveBugs.bind(this)}>Show Active Bugs</Button>\r\n                                }\r\n                                \r\n                            </Col>\r\n                            <Col size=\"sm-2\">\r\n                                \r\n                                {this.state.showCompletedBugs ?\r\n                                    <Button type=\"button\" className=\"btn btn-primary\" onClick={this.swapRenderCompletedBugs.bind(this)}>Hide Completed Bugs</Button>\r\n                                    :\r\n                                    <Button type=\"button\" className=\"btn btn-primary\" onClick={this.swapRenderCompletedBugs.bind(this)}>Show Completed Bugs</Button>\r\n                                }\r\n                            </Col>\r\n                                       \r\n                        </Row>\r\n                            <br />\r\n                                <br />\r\n\r\n                        {this.state.showActiveBugs ?                   \r\n                       <div>\r\n                                <h1 className=\"activeBugsTitle\">Active Bugs</h1>\r\n                                {this.state.bugData.length ? (\r\n                                    <table id=\"bugViewTable_Table\" className=\"table table-hover bugViewTable_Table\">\r\n                                        <thead id=\"bugViewTable_head\" className=\"thead-dark\">\r\n                                            <tr>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Complete</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Title</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">User Assigned</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Status</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\"></th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\"></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.state.filteredBugData.map(bug => {\r\n                                                return (\r\n                                                    <tr className=\"bugViewTable_tr\" key={bug.mongoID}>\r\n                                                        <td id=\"isCompletedColumn\" className=\"bugViewTable_td\">\r\n\r\n                                                            <label className=\"isCompletedContainer\">\r\n                                                                <input type=\"checkbox\" checked={bug.isCompleted} onClick={() => this.completedCheck(bug)}\r\n                                                                value={bug.isCompleted} onChange={this.handleChange.bind(this)} name=\"bugIsCompleted\"                                                                \r\n                                                                />\r\n                                                                <span className=\"checkmark\"></span>\r\n                                                            </label>\r\n                                                     </td>\r\n                                                        <td className=\"bugViewTable_td\">{bug.bugTitle}</td>\r\n                                                        <td id=\"userAssignedColumn\" className=\"bugViewTable_td\">{bug.userAssigned}</td>\r\n                                                        <td id=\"statusColumn\" className=\"bugViewTable_td\">{bug.status}</td>\r\n                                                        <td id=\"editColumn\" className=\"bugViewTable_td\">\r\n                                                            <Button variant=\"primary\" onClick={() => this.editBugButton(bug)}>\r\n                                                                Edit\r\n                                                    </Button>\r\n                                                        </td>\r\n                                                        <td id=\"deleteColumn\" className=\"bugViewTable_td\"> <Button variant=\"primary\" onClick={() => this.deleteBugButton(bug)}>Delete</Button></td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n\r\n                                ) : (<h3 className=\"noResultsMessage\"> No Results to Display </h3>)} \r\n                       </div>\r\n                        \r\n                        \r\n                        \r\n                        : \r\n                        \r\n                        \r\n                        \"\"\r\n                    } \r\n                       \r\n\r\n                            {this.state.showCompletedBugs ? \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            <div>\r\n                                <hr />\r\n                                <h1 className=\"completedBugsTitle\">Completed Bugs</h1>\r\n                                {this.state.completedBugData.length ? (\r\n                                    <div>\r\n                                    <table id=\"bugViewTable_Table\" className=\"table table-hover bugViewTable_Table\">\r\n                                        <thead id=\"bugViewTable_head\" className=\"thead-dark\">\r\n                                            <tr>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Complete</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Title</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">User Assigned</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Status</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\"></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.state.completedBugData.map(bug => {\r\n                                                return (\r\n                                                    <tr className=\"bugViewTable_tr\" key={bug.mongoID}>\r\n                                                        <td id=\"isCompletedColumn\" className=\"bugViewTable_td\">\r\n\r\n                                                            <label className=\"isCompletedContainer\">\r\n                                                                <input type=\"checkbox\" checked={bug.isCompleted} onClick={() => this.completedCheck(bug)}\r\n                                                                    value={bug.isCompleted} onChange={this.handleChange.bind(this)} name=\"bugIsCompleted\"\r\n                                                                />\r\n                                                                <span className=\"checkmark\"></span>\r\n                                                            </label>\r\n\r\n\r\n                                                        </td>\r\n                                                        <td className=\"bugViewTable_td\">{bug.bugTitle}</td>\r\n                                                        <td id=\"userAssignedColumn\" className=\"bugViewTable_td\">{bug.userAssigned}</td>\r\n                                                        <td id=\"statusColumn\" className=\"bugViewTable_td\">{bug.status}</td>\r\n                                                        <td id=\"deleteColumn\" className=\"bugViewTable_td\"> </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    </div>\r\n\r\n                                ) : (<h3 className=\"noResultsMessage\"> No Results to Display </h3>)} \r\n\r\n\r\n                            </div>\r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            :\r\n                                                      \r\n                            \r\n                            \"\"}\r\n\r\n                                <br />\r\n                                    <br />\r\n                                \r\n                       \r\n                       \r\n                \r\n                        {/* This modal will pop up for editing bugs! */}\r\n                        <Modal show={this.state.showModal} animation={false}>\r\n                            <Modal.Header>\r\n                                <Button className='btn btn-danger note-delete xButton' id=\"bugModalXButton\" onClick={() => this.closeModal()}>X</Button>\r\n                                <Modal.Title>{this.state.currentModalTitle}</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n\r\n\r\n                                <Input label=\"Title\" onBlur={this.formatInput.bind(this)} isvalid={this.state.bugTitleValid.toString()} \r\n                                fielderror={this.state.formErrors.bugTitle} value={this.state.bugTitleInModal} id=\"bugTitleInModal\" onChange={this.handleChange.bind(this)} name=\"bugTitleInModal\" />\r\n                                <br />\r\n                                <label htmlFor=\"bugUserAssignedInModal\"><strong>Assignee</strong></label> <br />\r\n                                <select label=\"Assignee\" value={this.state.bugUserAssignedInModal} onChange={this.handleChange.bind(this)} id=\"bugUserAssignedInModal\" name=\"bugUserAssignedInModal\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tawny\">Tawny</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Anthony\">Anthony</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tyler\">Tyler</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Arthur\">Arthur</option>\r\n                                </select>\r\n                                <br />\r\n                                <br />\r\n                                <label htmlFor=\"bugStatusInModal\"><strong>Status</strong></label>  <br />\r\n                                <select label=\"Status\" value={this.state.bugStatusInModal} onChange={this.handleChange.bind(this)} id=\"bugStatusInModal\" name=\"bugStatusInModal\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Open\">Open</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"In Development\">In Development</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Needs Testing\">Needs Testing</option>\r\n                                </select>\r\n\r\n                                <br />\r\n\r\n                                <br />\r\n\r\n                                <TextArea label=\"Description\" onBlur={this.formatInput.bind(this)} value={this.state.bugDescriptionInModal} id=\"bugDescriptionInModal\" onChange={this.handleChange.bind(this)} name=\"bugDescriptionInModal\" />\r\n\r\n                                {/* BUG COMMENT SECTION */}\r\n\r\n                                {this.state.isNewBug ? \r\n\r\n                                    \"\": <div>\r\n\r\n                                        <hr />\r\n                                        {this.state.bugCommentsInModal.length ? (\r\n                                            <BugCommentContainer>\r\n                                                <div className=\"bugCommentContainer\">\r\n                                                    {this.state.bugCommentsInModal.map(bugComment => {\r\n                                                        let boundBugCommentClick = this.deleteBugComment.bind(this, bugComment);\r\n                                                        return (\r\n                                                            <BugCommentPanel key={bugComment._id} text={bugComment.text}>\r\n                                                                <div>\r\n                                                                    <button className='btn btn-danger bugComment-delete insideNote' onClick={boundBugCommentClick}> X </button>\r\n                                                                </div>\r\n\r\n                                                            </BugCommentPanel>\r\n                                                        );\r\n                                                    })}\r\n                                                </div>\r\n                                            </BugCommentContainer>\r\n                                        ) : (\r\n                                                <h3> There are no comments! </h3>\r\n                                            )}\r\n\r\n\r\n                                        <Input placeholder='Bug Comment'\r\n                                            id=\"currentBugCommentInModal\"\r\n                                            onBlur={this.formatInput.bind(this)}\r\n                                            value={this.state.currentBugCommentInModal}\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"currentBugCommentInModal\"\r\n                                        />\r\n                                        <Button className='btn btn-success save' onClick={() => this.addBugComment()}>Save Comment</Button>\r\n\r\n                                    </div>\r\n                                }\r\n\r\n                                {/* END OF BUG COMMENT SECTION */}\r\n\r\n\r\n\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                                    Close\r\n                                  </Button>\r\n                                <Button variant=\"primary\" onClick={this.handleFormSubmit}>\r\n                                    Save Changes\r\n                              </Button> \r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n\r\n                                \r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BugViewPage;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./create-bug.css\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass BugViewPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            bugTitle: \"\",\r\n            bugDescription: \"\",\r\n            sampleBugViewTableData: [{ id: \"1\", BugTitle: \"Title A\", BugDescription: \"Test A\" }, { id: \"2\", BugTitle: \"Title B\", BugDescription: \"Test B\" }, { id: \"3\", BugTitle: \"Title C\", BugDescription: \"Test C\" }]\r\n        };\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    //Standard method for constantly updating input, since UI is constantly refreshing\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container id=\"containerViewBugs\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugTrackerTitle\">Create Bug Task</h1>\r\n                            </Container>\r\n                        </div>\r\n                        \r\n                        <p>Bug Title</p>\r\n                        <Input onBlur={this.formatInput.bind(this)} value={this.state.emailAddress} id=\"BugTitle\" onChange={this.handleChange.bind(this)} name=\"BugTitle\" />\r\n\r\n                        \r\n                        <TextArea label=\"Bug Description\" onBlur={this.formatInput.bind(this)} value={this.state.emailAddress} id=\"BugDescription\" onChange={this.handleChange.bind(this)} name=\"BugDescription\"/>\r\n\r\n                        <Button>Save Bug</Button><Button>View Bugs</Button>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BugViewPage;","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./profile.css\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstName:\"\",\r\n            loggedIn: this.props.loggedIn,\r\n            redirectTo: null,\r\n            setPasswordFieldsActiveInModal: false,\r\n            setCreateOrganizationFieldsActiveInModal: false,\r\n            setJoinOrganizationFieldsActiveInModal: false,\r\n            setEditOrganizationFieldsActiveInModal: false,\r\n            formErrors: { oldPassword: \"\", newPassword1and2:\"\", organizationName:\"\", organizationID:\"\" },\r\n            oldPassword: \"\",\r\n            newPassword1: \"\",\r\n            newPassword2: \"\",\r\n            organizationNameInModal: \"\",\r\n            organizationIDInModal: \"\",\r\n            organizationMongoIDInModal: \"\",\r\n            oldPasswordValid: true,\r\n            newPassword1And2Valid: false,\r\n            organizationNameValid: false,\r\n            organizationIDValid: false,\r\n            showModal: false,\r\n            successMessage: \"\",\r\n            serverErrorMessage:\"\",\r\n            currentModalTitle: \"\",\r\n            userData: [],\r\n            organizations: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n        console.log(\"Component mounted in Profile, below is MongoID\");\r\n        console.log(this.props.mongoID);\r\n        this.getOrganizationsOfUserInDB();\r\n        \r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    //Standard method for constantly updating input, since UI is constantly refreshing\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    validateFields() {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let newPassword1And2Valid = this.state.newPassword1And2Valid;\r\n        let organizationNameValid =  this.state.organizationNameValid;\r\n        let organizationIDValid = this.state.organizationIDValid;\r\n\r\n\r\n\r\n        console.log(\"newpassword1 is: \" + this.state.newPassword1);\r\n        console.log(\"newPassword2 is: \" + this.state.newPassword2);\r\n\r\n        //Validating between the new password field and \"confirm password\" field that they match and are greather than or equal to 6 characters\r\n        newPassword1And2Valid = (this.state.newPassword1 === this.state.newPassword2) && this.state.newPassword1.length >= 6;\r\n        fieldValidationErrors.newPassword1and2 = \"New password doesn't match or your password is less than 8 characters long.\";\r\n\r\n        //Validating that organization is greater than 3 characters\r\n        organizationNameValid = this.state.organizationNameInModal.length >= 3;\r\n        fieldValidationErrors.organizationName = \"Organization Name must have atleast three characters.\";\r\n\r\n        //Validating that organization ID is greater than 6 characters\r\n        organizationIDValid = this.state.organizationIDInModal.length >= 6;\r\n        fieldValidationErrors.organizationID = \"Organization ID must have atleast six characters.\";\r\n\r\n\r\n\r\n        console.log(\"organizationIDValid is: \" + organizationIDValid);\r\n        console.log(\"organizationNameValid: \" + organizationNameValid);\r\n        console.log(\"password1And2Valid: \" + newPassword1And2Valid);\r\n        //TODO --- HANDLE FORM VALIDATION\r\n\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            newPassword1And2Valid: newPassword1And2Valid,\r\n            organizationIDValid: organizationIDValid,\r\n            organizationNameValid: organizationNameValid\r\n        }, () => {\r\n                if (this.state.setJoinOrganizationFieldsActiveInModal) {\r\n                    //for JOIN organization\r\n                    if (organizationIDValid){\r\n                     this.attachUserToOrganizationInDB();\r\n                    }\r\n                } else if (this.state.setCreateOrganizationFieldsActiveInModal) {\r\n                    //For CREATE organization\r\n                    if(organizationNameValid && organizationIDValid){\r\n                        this.saveOrganizationInDB();\r\n                    }\r\n                } else if (this.state.setEditOrganizationFieldsActiveInModal) {\r\n                    //For UPDATE Organization\r\n                    if(organizationNameValid && organizationIDValid){\r\n\r\n                        this.updateOrganizationInDB();\r\n                    }\r\n                } else if (this.state.setPasswordFieldsActiveInModal) {\r\n                    //For UPDATE password\r\n                    if (newPassword1And2Valid){     \r\n                        this.updatePasswordInDB();\r\n                    }\r\n                }\r\n        });\r\n    }\r\n\r\n    \r\n    handleChangePasswordButtonClick = event => {\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Change Password\",\r\n            setPasswordFieldsActiveInModal: true\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    //************************THESE METHODS ARE CALLED FROM BUTTONS WITHIN THE MODAL*********************\r\n    updatePasswordInDB = () => {\r\n\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID\r\n        }\r\n        API.updateUserInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"UpdatePassword successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n                    this.setState({ successMessage: \"Successfully updated password.\"})\r\n                    this.closeModal();\r\n\r\n                } else {\r\n                    console.log(\"Updating USER PASSWORD WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                    this.setState({ serverErrorMessage: response.data.error, formErrors: { oldPassword: \"\", newPassword1and2: \"\", organizationName: \"\", organizationID: \"\", serverErrorMessage: \"\" }})\r\n                }\r\n            })\r\n        \r\n    }\r\n    closeModal = () => {\r\n        //Reset all the fields so they don't show up again when you try to open the modal again.\r\n        this.setState({ showModal: false, organizationIDValid: true,\r\n        organizationNameValid: true, oldPasswordValid: true, newPassword1Valid: true, newPassword2Valid: true,\r\n            organizationNameInModal: \"\", organizationIDInModal: \"\", oldPassword: \"\", newPassword: \"\", newPassword2: \"\", serverErrorMessage:\"\",\r\n            formErrors: { oldPassword: \"\", newPassword1and2: \"\", organizationName: \"\", organizationID: \"\", serverErrorMessage:\"\" } });\r\n    }\r\n    //*********************** END OF MODAL BUTTON CLICK METHODS ****************************\r\n\r\n    //*************************METHODS BELOW RELATED TO ORGANIZATION BUTTON CLICKS ******************/\r\n    handleEditOrganizationButtonClick(organizationClickedOn) {\r\n        //event.preventDefault();\r\n\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Edit Organization\",\r\n            setCreateOrganizationFieldsActiveInModal: false,\r\n            setEditOrganizationFieldsActiveInModal: true,\r\n            setJoinOrganizationFieldsActiveInModal: false,\r\n            setPasswordFieldsActiveInModal: false,\r\n            successMessage: \"\",\r\n            organizationMongoIDInModal: organizationClickedOn._id,\r\n            organizationNameInModal: organizationClickedOn.name,\r\n            organizationIDInModal: organizationClickedOn.organizationID\r\n        });\r\n    }\r\n\r\n    handleCreateOrganizationButtonClick = event => {\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Create Organization\",\r\n            setPasswordFieldsActiveInModal: false,\r\n            setCreateOrganizationFieldsActiveInModal: true,\r\n            setJoinOrganizationFieldsActiveInModal: false,\r\n            successMessage: \"\",\r\n            organizationIDInModal: \"\",\r\n            organizationNameInModal: \"\"\r\n        });\r\n\r\n    }\r\n\r\n    handleJoinOrganizationButtonClick = event => {\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Join Organization\",\r\n            setPasswordFieldsActiveInModal: false,\r\n            setCreateOrganizationFieldsActiveInModal: false,\r\n            successMessage: \"\",\r\n            setJoinOrganizationFieldsActiveInModal: true\r\n        })\r\n\r\n    }\r\n\r\n    //*** METHODS BELOW RELATED TO DB WITH ORGANIZATIONS */ */\r\n    saveOrganizationInDB() {\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID,\r\n            organizationName: this.state.organizationNameInModal,\r\n            organizationID: this.state.organizationIDInModal\r\n        }\r\n\r\n        API.saveOrganizationInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"SAVE ORGANIZATION successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n                    this.closeModal();\r\n                    this.getOrganizationsOfUserInDB();\r\n                    this.forceUpdate();\r\n\r\n                } else {\r\n                    console.log(\"SAVE ORGANIZATION WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                    //Now we set the error message in the modal.\r\n                    this.setState({serverErrorMessage: response.data.error})\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    getOrganizationsOfUserInDB() {\r\n\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID\r\n        }\r\n\r\n        API.getOrganizationsOfUserInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    //If we find no error, then we successful got the user's list of organizations. Update state with organizations.\r\n                    console.log(\"getOrganizationsOfUserInDB successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n\r\n                    this.setState({\r\n                        organizations: response.data.organizations,\r\n                    })\r\n\r\n                } else {\r\n                    console.log(\"getOrganizationsOfUserInDB WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    attachUserToOrganizationInDB() {\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID,\r\n            organizationID: this.state.organizationIDInModal\r\n        }\r\n        API.attachUserToOrganizationInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    //If we find no error, then we successful got the user's list of organizations. Update state with organizations.\r\n                    console.log(\"attachUserToOrganizationInDB successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n\r\n                    this.setState({\r\n                        organizations: response.data.organizations,\r\n                        successMessage: \"You successfully joined the organization!\"\r\n                    })\r\n                    this.closeModal();\r\n                    this.getOrganizationsOfUserInDB();\r\n                    this.forceUpdate();\r\n\r\n                } else {\r\n                    console.log(\"attachUserToOrganizationInDB WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                    //Now we set the error message in the modal.\r\n                    this.setState({ serverErrorMessage: response.data.error });\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleDeleteOrganizationInDB(organizationClickedOn) {\r\n        var isUserOrganizationOwner = false;\r\n        if (this.props.mongoID === organizationClickedOn.userWhoCreatedOrgMongoID){\r\n            isUserOrganizationOwner = true;\r\n        }\r\n        var organizationObj = {\r\n            organizationMongoID: organizationClickedOn._id,\r\n            userMongoID: this.props.mongoID,\r\n            organizationData: organizationClickedOn,\r\n            isUserOrganizationOwner: isUserOrganizationOwner\r\n\r\n        }\r\n        API.deleteOrganizationInDB(organizationObj)\r\n            .then(res => {\r\n\r\n                this.getOrganizationsOfUserInDB();\r\n                this.forceUpdate();\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    updateOrganizationInDB() {\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID,\r\n            organizationMongoID: this.state.organizationMongoIDInModal,\r\n            organizationName: this.state.organizationNameInModal,\r\n            organizationID: this.state.organizationIDInModal\r\n        }\r\n\r\n        API.updateOrganizationInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"SAVE ORGANIZATION successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n                    this.closeModal();\r\n                    this.getOrganizationsOfUserInDB();\r\n                    this.forceUpdate();\r\n\r\n                } else {\r\n                    console.log(\"SAVE ORGANIZATION WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleSubmitButtonInModalClick = () => {\r\n        this.validateFields();\r\n    }\r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <Container id=\"containerViewBugs\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugTrackerTitle\">Welcome, {this.props.firstName}!</h1>\r\n                                <h2 className=\"display-4 BugTrackerTitle\" id=\"successMessage\">{this.state.successMessage}</h2>\r\n                            </Container>\r\n                        </div>\r\n                        <Button onClick={this.handleChangePasswordButtonClick.bind(this)}>Change Password</Button>\r\n                        <Button onClick={this.handleCreateOrganizationButtonClick.bind(this)}>Create Organization</Button>\r\n                        <Button onClick={this.handleJoinOrganizationButtonClick.bind(this)}>Join Organization</Button>\r\n                        <br />\r\n                        <br />\r\n                        {this.state.organizations.length > 0 ? (\r\n                            <table id=\"organizationTable_Table\" className=\"table table-hover bugViewTable_Table\">\r\n                                <thead id=\"organizationTable_head\" className=\"thead-dark\">\r\n                                    <tr>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\">Name</th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\">Organization ID</th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\"></th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\"></th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\"></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.organizations.map(organization => {\r\n                                        return (\r\n                                            <tr className=\"organizationTable_tr\" key={organization._id}>\r\n                                                <td className=\"organizationTable_td\">{organization.name}</td>\r\n                                                <td className=\"organizationTable_td\">{organization.organizationID}</td>\r\n                                                <td className=\"organizationTable_td\">\r\n                                                    \r\n                                                    \r\n                                                    <Link to={{pathname: \"/bug-view\", state: {organizationMongoID: organization._id, organizationName: organization.name}}} className=\"log\" ><Button>View Bugs</Button></Link>\r\n                                                    </td>\r\n                                                <td id=\"editColumn\" className=\"organizationTable_td\">\r\n                                                    {this.props.mongoID === organization.userWhoCreatedOrgMongoID ?\r\n                                                        <Button variant=\"primary\" onClick={() => this.handleEditOrganizationButtonClick(organization)}>\r\n                                                            Edit\r\n                                                        </Button> : \"\"\r\n\r\n                                                    }\r\n                                                </td>\r\n                                                <td id=\"deleteColumn\" className=\"organizationTable_td\">\r\n                                                    {this.props.mongoID === organization.userWhoCreatedOrgMongoID ?\r\n                                                        <Button variant=\"primary\" onClick={() => this.handleDeleteOrganizationInDB(organization)}>Delete</Button> \r\n                                                        : \r\n                                                        <Button variant=\"primary\" onClick={() => this.handleDeleteOrganizationInDB(organization)}>Leave</Button> \r\n                                                    }\r\n                                                     </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n\r\n\r\n                        ) : (<h3 id=\"noResultsHeader\"> No Results to Display </h3>)}\r\n                        <br />\r\n                        <br />\r\n\r\n                        {/* This modal will pop up for changing password! */}\r\n                        <Modal show={this.state.showModal} animation={false}>\r\n                            <Modal.Header>\r\n                                <Modal.Title>{this.state.currentModalTitle}</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n\r\n                                {this.state.setPasswordFieldsActiveInModal ?\r\n                                    <div>\r\n                                        <p>Old Password</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.oldPasswordValid.toString()}\r\n                                            fielderror={this.state.formErrors.oldPassword}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.oldPassword)}`}\r\n                                            value={this.state.oldPassword}\r\n                                            id=\"oldPassword\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"oldPassword\"></Input>\r\n\r\n                                        <p>New Password</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.newPassword1And2Valid.toString()}\r\n                                            fielderror={this.state.formErrors.newPassword1and2}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.newPassword1and2)}`}\r\n                                            value={this.state.newPassword1and2}\r\n                                            id=\"newPassword1\" onChange={this.handleChange.bind(this)}\r\n                                            name=\"newPassword1\"></Input>\r\n\r\n                                        <p>Confirm New Password</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.newPassword1And2Valid.toString()}\r\n                                            fielderror={this.state.formErrors.newPassword1and2}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.newPassword1and2)}`}\r\n                                            value={this.state.newPassword2}\r\n                                            id=\"newPassword2\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"newPassword2\"></Input>\r\n\r\n                                    </div>\r\n                                    :\r\n                                    <div>\r\n                                        {this.state.setJoinOrganizationFieldsActiveInModal ?\r\n                                        <div>\r\n                                            <p>Please enter the Organization ID of the organization you wish to join:</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)}\r\n                                                isvalid={this.state.organizationIDValid.toString()}\r\n                                                    fielderror={this.state.formErrors.organizationID}\r\n                                                formgroupclass={`form-group ${this.errorClass(this.state.formErrors.organizationID)}`}\r\n                                                value={this.state.organizationIDInModal}\r\n                                                id=\"organizationIDInModal\" onChange={this.handleChange.bind(this)}\r\n                                                name=\"organizationIDInModal\"></Input>\r\n                                            \r\n                                        </div>\r\n                                        :\r\n                                        <div>\r\n                                        <p>Organization Name</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.organizationNameValid.toString()}\r\n                                            fielderror={this.state.formErrors.organizationName}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.organizationName)}`}\r\n                                            value={this.state.organizationNameInModal}\r\n                                            id=\"organizationNameInModal\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"organizationNameInModal\"></Input>\r\n\r\n                                        <p>Organization ID (Use this number to invite people)</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.organizationIDValid.toString()}\r\n                                            fielderror={this.state.formErrors.organizationID}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.organizationID)}`}\r\n                                            value={this.state.organizationIDInModal}\r\n                                            id=\"organizationIDInModal\" onChange={this.handleChange.bind(this)}\r\n                                            name=\"organizationIDInModal\"></Input>\r\n                                        </div>\r\n\r\n                                        }\r\n\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    }\r\n                                <span className=\"help-block serverErrorMessage\">{this.state.serverErrorMessage}</span>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                                    Close\r\n                                  </Button>\r\n                                <Button variant=\"primary\" onClick={this.handleSubmitButtonInModalClick.bind(this)}>\r\n                                Save Changes\r\n                                </Button>\r\n\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n\r\n    \r\n}\r\n}\r\n\r\n// export default Profile;\r\nexport default withRouter(Profile);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport LandingPage from \"./pages/landing-page\";\nimport BugView from \"./pages/bug-view\";\nimport CreateBug from \"./pages/create-bug\";\nimport Profile from \"./pages/profile\";\nimport API from \"./utils/API\";\nimport { withRouter } from 'react-router';\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      loggedIn: false,\n      user: null,\n      firstName: null,\n      lastName: null,\n      mongoID: null,\n      password: null,\n      redirectTo: null,\n      serverErrorMessage: \"\"\n    }\n    this._login = this._login.bind(this)\n  }\n  componentDidMount() {\n    API.user().then(response => {\n      if (!!response.data.user) {\n        console.log(\"Attempt to login on App.js from componentDidMount\");\n        console.log(response.data);\n        this.setState({\n          loggedIn: true,\n          user: response.data.user,\n          userId: response.data.user._id,\n        });\n        console.log(\"login passed!! User is not authenticated. (App.js - componentDidMount)\");\n      } else {\n        console.log(\"Login failed!!! User is not authenticated. (App.js - componentDidMount)\");\n        this.setState({\n          loggedIn: false,\n          // redirectTo: \"/landing-page\",\n          user: null\n        })\n      }\n    })\n  }\n\n  _login(username, password) {\n    console.log(\"I called _login from App.js\");\n    var userData = {\n      username: username,\n      password: password,\n    }\n    API\n      .login(userData)\n      .then(response => {\n        console.log(\"attempt to login from app.js _login\");\n        console.log(response);\n        if (response.status === 200) {\n          console.log(\"ATTEMPTING TO CONSOLE LOG EMAIL IN _LOGIN IN App.js\");\n          console.log(response.data);\n            if(response.data.loggedInSuccess){\n\n            \n          //var data = JSON.parse(response.data);\n         // console.log(response);\n         console.log(\"_login from App.js is SUCCESSFUL, below is the response data\");\n         console.log(response.data);\n          // update the state\n          this.setState({\n            loggedIn: true,\n            username: response.data.username,\n            mongoID: response.data.mongoID,\n            firstName: response.data.firstName,\n            lastName: response.data.lastName,\n            password: response.data.password,\n            redirectTo: \"/profile\"\n          })\n          //this.props.history.push(\"/profile\");\n\n\n        }else {\n            console.log(\"logged in FAILED!!!\");\n            console.log(response);\n              this.setState({\n                loggedIn: false,\n                serverErrorMessage: response.data.error\n              }, () => {\n                  this.forceUpdate();\n              })\n\n        }\n        }\n      })\n  }\n\n    render() {\n      //IF USER IS AUTHENTICATED RENDER THIS\n      if (this.state.loggedIn) {\n        console.log(\"redirectTO has been called!!!\");\n        console.log(this.state.redirectTo);\n        return(\n\n            <div className=\"App\">\n              <div>\n\n        <Redirect exact to={{ pathname: this.state.redirectTo }} render={() =>\n          <LandingPage\n            _login={this._login}\n            serverErrorMessage={this.state.serverErrorMessage}\n          />}/> \n\n          \n          <Route exact path=\"/landing-page\"\n            render={() =>\n              <LandingPage\n                _login={this._login}\n                serverErrorMessage={this.state.serverErrorMessage}\n              />} />\n          <Route exact path=\"/bug-view\" component={BugView} />\n          <Route exact path=\"/create-bug\" component={CreateBug} />\n              <Route exact path=\"/profile\" render={() => <Profile loggedIn={this.state.loggedIn} username={this.state.username} mongoID={this.state.mongoID} firstName={this.state.firstName}/>} />\n\n          <Route exact path=\"/\" render={() => (\n            <Redirect to=\"/landing-page\" />\n          )} />\n\n          </div>\n          </div>\n\n        )\n      }\n\n\n      //IF USER IS NOT AUTHENTICATED, RENDER JUST THE LANDING PAGE\n      return (\n        <div className=\"App\">\n       <div>\n            <Route exact path=\"/landing-page\" \n                  render={() =>\n                    <LandingPage\n                      _login={this._login}\n                      serverErrorMessage={this.state.serverErrorMessage}\n                    />} />\n\n                <Route exact path=\"/\" render={() => (\n                  <Redirect to=\"/landing-page\" />\n                )} />\n\n            <Redirect from=\"*\" to=\"/landing-page\" />\n  \n             </div>\n       </div>\n      )      \n    }\n\n  }\nexport default App;\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from 'react-router-dom'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nReactDOM.render(\n    // <App /> \n   \n <BrowserRouter> \n\n\n    \n    <Switch>\n    <Route component={App} />\n\n                </Switch>\n \n </BrowserRouter>\n\n  , document.getElementById(\"root\"));\n\n"],"sourceRoot":""}