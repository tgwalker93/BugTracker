{"version":3,"sources":["components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/Form/Input.js","components/Form/Button.js","components/Form/TextArea.js","utils/API.js","pages/landing-page/landing-page.js","components/BugCommentContainer/BugCommentContainer.js","components/BugCommentContainer/BugCommentPanel.js","pages/bug-view/bug-view.js","pages/create-bug/create-bug.js","pages/profile/profile.js","App.js","index.js"],"names":["Col","props","className","size","split","map","join","children","Container","id","fluid","Row","Input","formgroupclass","isvalid","fielderror","Button","TextArea","htmlFor","label","rows","console","log","axios","get","userObj","post","userData","bugData","bugCommentData","bugAndCommentData","mongoID","LandingPage","formatInput","event","attribute","target","getAttribute","setState","value","trim","handleFormSubmit","preventDefault","state","emailAddress","loginButtonClicked","_login","password","forgotPasswordButtonClicked","sendForgotPasswordEmail","saveUser","handleLoginButtonClick","loginOrCreateAccountButtonClicked","handleCreateAccountButtonClick","handleForgotPasswordButtonClick","createAccount","firstName","lastName","phoneNumber","guestCount","formErrors","redirectTo","firstNameValid","lastNameValid","passwordValid","emailAddressValid","phoneNumberValid","guestCountValid","e","this","fieldValidationErrors","match","length","setCookieAndChangePage","error","obj","numbers","replace","substring","char","0","3","6","i","email","API","then","response","data","errorResponse","userId","username","user_email","user_address","address","user_city","city","user_state","user_zip","zip","cookies","Cookies","charAt","toUpperCase","slice","set","path","history","push","to","pathname","onBlur","bind","toString","errorClass","onChange","handleChange","name","onClick","Component","withRouter","BugCommentContainer","BugCommentPanel","noteText","BugViewPage","delta","count","validateFields","saveNewBugInDB","bugObj","currentBugIndex","bugTitle","bugTitleInModal","bugDescription","bugDescriptionInModal","doc","_id","showModal","forceUpdate","updateBugInDB","selectedBug","updateOrCreateBug","isNewBug","closeModal","createNewBugButton","currentModalTitle","isLogin","showModal2","sampleBugViewTableData","bugCommentsInModal","currentBugCommentInModal","bugs","catch","err","bugClickedOn","deletedCount","index","indexOf","splice","currentBug","text","res","renderBugComments","bugCommentsArr","bugComment","currentArticle","deleteBugInDB","getBugsFromDB","scope","bug","key","variant","editBugButton","deleteBugButton","type","Modal","show","animation","Header","Title","Body","placeholder","cols","addBugComment","boundBugCommentClick","deleteBugComment","Footer","BugTitle","BugDescription","Profile","handleChangePasswordButtonClick","changePasswordFieldsActive","handleUpdatePassword","oldPassword","newPassword","newPassword1","loggedIn","newPassword1and2","newPassword2","oldPasswordValid","newPassword1and2Valid","newPassword1Valid","App","user","status","loggedInSuccess","exact","render","component","BugView","CreateBug","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6db6a0bd.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Col = props =>\n  <div className={props.size.split(\" \").map(size => \"col-\" + size).join(\" \")} {...props}>\n    {props.children}\n  </div>;\n","import React from \"react\";\n\nexport const Container = props =>\n  <div id={props.id} className={`container${props.fluid === \"true\"  ? \"-fluid\" : \"\"}`} {...props}>\n    {props.children}\n  </div>;\n","import React from \"react\";\n//({ fluid, children, props })\nexport const Row = props =>\n  <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props}> \n    {props.children}\n  </div>;\n","import React from \"react\";\n\nexport const Input = props =>\n  <div className={props.formgroupclass}>\n\n    <input className=\"form-control\" {...props} />\n    {props.isvalid === \"true\" ? \"\" : <span className=\"help-block\">{props.fielderror}</span>}\n  </div>;\n","import React from \"react\";\n\nexport const Button = props =>\n  <button {...props} className=\"btn btn-pill btn-light btn-lg\">\n    {props.children}\n  </button>;\n","import React from \"react\";\r\n\r\nexport const TextArea = props =>\r\n    <div className={props.formgroupclass}>\r\n        <label htmlFor=\"bugDescriptionField\">{props.label}</label>\r\n        <textarea className=\"form-control\" id=\"bugDescriptionField\" rows=\"5\" {...props}></textarea>\r\n        {props.isvalid === \"true\" ? \"\" : <span className=\"help-block\">{props.fielderror}</span>}\r\n    </div>;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n    // USER CALLS  -----\r\n    user: function () {\r\n        console.log(\"i'm in API.js file, calling user\");\r\n        return axios.get(\"/api/user\");\r\n    },\r\n    sendForgotPasswordEmail(userObj) {\r\n        console.log(\"i'm in API.JS on the front end\");\r\n        return axios.post(\"/api/user/sendForgotPasswordEmail\", userObj);\r\n    },\r\n    updateUserInDB(userObj){\r\n        return axios.post(\"/api/user/updateUser\", userObj);\r\n    },\r\n    login: function (userData) {\r\n        console.log(\"LoginAPI\")\r\n        console.log(userData);\r\n        // return axios.get(\"/api/user/login\");\r\n        return axios.post(\"/api/user/login\", userData)\r\n    },\r\n    saveUser: function (userData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/user/saveUser\", userData);\r\n    },\r\n\r\n    //BUG CALL --------\r\n    saveBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/saveBug\", bugData);\r\n    },\r\n    updateBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/updateBug\", bugData);\r\n    },\r\n    deleteBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/deleteBug\", bugData);\r\n    },\r\n    getAllBugs: function() {\r\n        //TODO - Set up organization ID query\r\n        //Query db to get all bugs\r\n        return axios.get(\"/api/bug/getAllBugs\")\r\n    },\r\n    \r\n\r\n    // BUG COMMENT CALLS -------\r\n    deleteBugComment: function (bugCommentData) {\r\n        return axios.post(\"/api/bug/deleteBugComment/\" + bugCommentData.id);\r\n    },\r\n    saveBugComment: function(bugAndCommentData) {\r\n        return axios.post(\"/api/bug/saveBugComment\", bugAndCommentData);\r\n    },\r\n    getBugComments: function(bugData) {\r\n        console.log(\"I'm in getbugcomments front end API.JS\");\r\n        console.log(bugData.mongoID);\r\n        return axios.get(\"/api/bug/getBugComments\");\r\n    }\r\n\r\n};","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { Input, Button } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { withRouter } from 'react-router';\r\n\r\nimport \"./landing-page.css\";\r\nclass LandingPage extends Component {\r\n    constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        emailAddress: \"\",\r\n        password: \"\",\r\n        phoneNumber: \"\",\r\n        guestCount: \"\",\r\n        formErrors: {firstName: \"\", lastName: \"\", emailAddress:\"\", phoneNumber:\"\", guestCount:\"\", password:\"\"},\r\n          redirectTo: null,\r\n        firstNameValid: false,\r\n        lastNameValid: false,\r\n        passwordValid: false,\r\n        emailAddressValid: false,\r\n        phoneNumberValid: false,\r\n        guestCountValid: false,\r\n        loginOrCreateAccountButtonClicked: false,\r\n        loginButtonClicked: true,\r\n        forgotPasswordButtonClicked: false\r\n    };\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    } \r\n\r\n    validateFields() {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let emailAddressValid = this.state.emailAddressValid;\r\n        let firstNameValid = this.state.firstNameValid;\r\n        let lastNameValid = this.state.lastNameValid;\r\n        let phoneNumberValid = this.state.phoneNumberValid;\r\n        let guestCountValid = this.state.guestCountValid;\r\n        let passwordValid = this.state.passwordValid;\r\n\r\n        //Validating email using Regex\r\n        let matchArray = this.state.emailAddress.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n        if(matchArray !== null) {\r\n            emailAddressValid = true;\r\n        }\r\n        fieldValidationErrors.emailAddress = emailAddressValid ? \"\" : \"Please provide a valid email\";\r\n\r\n        //Validating First Name by checking if there is anything there.\r\n        firstNameValid = this.state.firstName.length >0;\r\n        fieldValidationErrors.firstName = firstNameValid ? \"\": \"Please provide your first name\";\r\n\r\n        //Validating Last Name by checking if there is anything there.\r\n        lastNameValid = this.state.lastName.length > 0;\r\n        fieldValidationErrors.lastName = lastNameValid ? \"\":\"Please provide your last name\";\r\n\r\n        //Validating phone number by checking if there are 16 digits. (counting the special characters besides the digits.)\r\n        phoneNumberValid = this.state.phoneNumber.length===16;\r\n        fieldValidationErrors.phoneNumber = phoneNumberValid ? \"\":\"Please provide a phone number\";\r\n\r\n        //validating password\r\n        passwordValid = this.state.password.length === 2;\r\n        fieldValidationErrors.password = passwordValid ? \"\" : \"Please provide a password\";\r\n\r\n        //Validate guest count by checking if user made a selection.\r\n        guestCountValid = true;\r\n        if(this.state.guestCount === \"\" || this.state.guestCount===\"Select\"){\r\n            guestCountValid = false;\r\n        }\r\n        fieldValidationErrors.guestCount = guestCountValid ? \"\": \"Please provide guest count\";\r\n\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            emailAddressValid: emailAddressValid,\r\n            firstNameValid: firstNameValid,\r\n            lastNameValid: lastNameValid,\r\n            phoneNumberValid: phoneNumberValid,\r\n            guestCountValid: guestCountValid,\r\n            passwordValid: passwordValid\r\n        }, () => {\r\n            this.setCookieAndChangePage();\r\n        });    \r\n    }\r\n\r\n    //Here we check if the field has an error. If it does, it will add the \"has-error\" class to the field.\r\n    //\"has-error\" is a default bootstrap class that will nicely color the outline of the field red to indicate an error for the user. \r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    formatPhone(obj) {\r\n        if(obj == null){\r\n            return;\r\n        }\r\n        var numbers = obj.state.phoneNumber.replace(/\\D/g, \"\").substring(0,10),\r\n            char = { 0: \"(\", 3: \") \", 6: \" - \" };\r\n        obj.state.phoneNumber = \"\";\r\n        for (var i = 0; i < numbers.length; i++) { \r\n            obj.state.phoneNumber += (char[i] || \"\") + numbers[i];    \r\n        }\r\n    }\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();    \r\n        //this.validateFields();\r\n        console.log(\"I'm in handle form submit\");\r\n        console.log(this.state.emailAddress);\r\n\r\n        if(this.state.loginButtonClicked){\r\n            //If the login button is clicked then we want submit LOGIN request, which is different than Create Account request\r\n            this.props._login(this.state.emailAddress, this.state.password)\r\n        } else if(this.state.forgotPasswordButtonClicked){\r\n            this.sendForgotPasswordEmail();\r\n\r\n        }\r\n        else {\r\n            //If Create Account button was clicked, then we want to post the user to the database.\r\n            this.saveUser();\r\n        }\r\n  \r\n    };\r\n\r\n    //LOGIN / CREATE ACCOUNT BUTTONS - Just to set it up so before I actually submit data to DB\r\n    handleLoginButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: true, loginButtonClicked: true, forgotPasswordButtonClicked: false})\r\n\r\n    }\r\n    handleCreateAccountButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: true, loginButtonClicked: false, forgotPasswordButtonClicked: false })\r\n\r\n    }\r\n\r\n    handleForgotPasswordButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: false, loginButtonClicked: false, forgotPasswordButtonClicked: true})\r\n    }\r\n\r\n    createAccount = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginButtonClicked: false});\r\n\r\n    };\r\n\r\n\r\n    sendForgotPasswordEmail() {\r\n        let userObj = {\r\n            email: this.state.emailAddress\r\n        }\r\n\r\n        console.log(\"I'm in SEND FORGOT PASSWROD EMAIL METHOD ON landing-page js\");\r\n\r\n        API.sendForgotPasswordEmail(userObj)\r\n            .then(response => {\r\n\r\n\r\n\r\n                if (!response.data.error) {\r\n                    //userObj.userId = response.data.doc._id;\r\n\r\n                    // this.setState({\r\n                    //     redirectTo: '/profile'\r\n                    // })\r\n                    console.log(\"send forgot password was successful, i'm back at landing-page.js, in API.sendForgotPasswordEmail\");\r\n                    console.log(response);\r\n                } else {\r\n                    console.log(\"error found!!!\");\r\n                    console.log(response);\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n\r\n    saveUser() {\r\n        console.log(\"HELLO?!?!!?!\");\r\n        console.log(this.state.passwordValid + \" passwordvalid?\");\r\n        // if (this.state.passwordValid && this.state.firstNameValid && this.state.lastNameValid) {\r\n\r\n            console.log(\"Called saveUser() from LandingPage  .... BELOW IS THE STATE\");\r\n            console.log(this.state);\r\n            let userObj = {\r\n                userId: null,\r\n                username: this.state.emailAddress,\r\n                password: this.state.password,\r\n                email: this.state.emailAddress,\r\n                user_email: this.state.email,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                user_address: this.state.address,\r\n                user_city: this.state.city,\r\n                user_state: this.state.state,\r\n                user_zip: this.state.zip\r\n            }\r\n            API.saveUser(userObj)\r\n                .then(response => {\r\n\r\n\r\n\r\n                    if (!response.data.error) {\r\n                        //userObj.userId = response.data.doc._id;\r\n\r\n\r\n                        //Now that the user account is created, let's automatically login the user in\r\n                         this.props._login(this.state.emailAddress, this.state.password, userObj);\r\n                        // this.setState({\r\n                        //     redirectTo: '/profile'\r\n                        // })\r\n                        console.log(\"I WAS SUCCESSFUL FROM LANDING PAGE\");\r\n                    } else {\r\n                        this.setState({ errorResponse: response })\r\n                    }\r\n                })\r\n\r\n        // }\r\n    }\r\n    setCookieAndChangePage() {\r\n\r\n        //This function will be called once all fields are validated. If any are not valid, the binary \"valid\" variable will be false.\r\n        if (this.state.firstNameValid && this.state.lastNameValid && this.state.emailAddressValid && this.state.phoneNumberValid && this.state.guestCountValid) {\r\n\r\n            const cookies = new Cookies();\r\n\r\n            var userObj = {\r\n                \"firstName\": this.state.firstName.charAt(0).toUpperCase() + this.state.firstName.slice(1),\r\n                \"lastName\": this.state.lastName.charAt(0).toUpperCase() + this.state.lastName.slice(1),\r\n                \"emailAddress\": this.state.emailAddress,\r\n                \"phoneNumber\": this.state.phoneNumber,\r\n                \"guestCount\": this.state.guestCount\r\n            }\r\n\r\n            cookies.set(\"demo-requested\", userObj, { path: \"/\" });\r\n            this.props.history.push(\"/thank-you\");\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"component has mounted\");\r\n        console.log(this);\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    render() {\r\n\r\n        if (this.props.redirectTo) {\r\n            console.log(\"THIS . PROPS. REDIRECT EXISTS IN LANDING PAGE!!!\");\r\n            console.log(this.props.redirectTo);\r\n            return <Redirect to={{ pathname: this.props.redirectTo }} />\r\n        } else {\r\n        return (\r\n            <Container id=\"container\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n\r\n                    <hr id=\"hline\"></hr>\r\n                    <Col id=\"formCol\" size=\"sm-6\">\r\n                        <h1>BugSlayer</h1>\r\n                        {this.state.loginOrCreateAccountButtonClicked ?\r\n                            <div>\r\n                                {this.state.loginButtonClicked ?\r\n                                    <h1 id=\"formHeader\">Login</h1>\r\n                                    :\r\n                                    <h1 id=\"formHeader\">Create Account</h1>\r\n\r\n                                }\r\n                                <form>\r\n                                    \r\n\r\n                                    {this.state.loginButtonClicked ?\r\n\r\n                                        \"\"\r\n                                        :\r\n\r\n                                        <div>\r\n                                            <p>First Name</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.firstNameValid.toString()} fielderror={this.state.formErrors.firstName} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.firstName)}`} value={this.state.firstName} id=\"firstName\" onChange={this.handleChange.bind(this)} name=\"firstName\"></Input>\r\n\r\n\r\n                                            <p>Last Name</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.lastNameValid.toString()} fielderror={this.state.formErrors.lastName} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.lastName)}`} value={this.state.lastName} id=\"lastName\" onChange={this.handleChange.bind(this)} name=\"lastName\"></Input>\r\n\r\n                                        </div>\r\n\r\n                                    }\r\n\r\n                                    <p>Email Address</p>\r\n                                    <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.emailAddressValid.toString()} fielderror={this.state.formErrors.emailAddress} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.emailAddress)}`} value={this.state.emailAddress} id=\"emailAddress\" onChange={this.handleChange.bind(this)} name=\"emailAddress\"></Input>\r\n\r\n                                    <p>Password</p>\r\n                                    <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.passwordValid.toString()} fielderror={this.state.formErrors.password} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.password)}`} value={this.state.password} id=\"password\" onChange={this.handleChange.bind(this)} name=\"password\"></Input>\r\n\r\n                                    <Button onClick={this.handleFormSubmit.bind(this)}> Submit </Button>\r\n\r\n                                    {this.state.loginButtonClicked ?\r\n                                        <h3 id=\"formFooterLink\" onClick={this.handleCreateAccountButtonClick.bind(this)}>Create Account instead?</h3>\r\n                                        :\r\n                                        <h3 id=\"formFooterLink\" onClick={this.handleLoginButtonClick.bind(this)}>Login instead?</h3>\r\n\r\n                                    }\r\n                                </form>\r\n                            </div>\r\n                            : \r\n\r\n                            <div>\r\n\r\n                                {\r\n                                    this.state.forgotPasswordButtonClicked ?\r\n                                        <div>\r\n\r\n                                            <p><strong>Please enter your email address. If correct, we will send you an email!</strong></p>\r\n                                            <p>Email Address</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.emailAddressValid.toString()} fielderror={this.state.formErrors.emailAddress} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.emailAddress)}`} value={this.state.emailAddress} id=\"emailAddress\" onChange={this.handleChange.bind(this)} name=\"emailAddress\"></Input>\r\n                                            <Button onClick={this.handleFormSubmit.bind(this)}> Submit </Button>\r\n                                            \r\n                                            <h3 id=\"formFooterLink\" onClick={this.handleLoginButtonClick.bind(this)}>Login instead?</h3>\r\n                                            <h3 id=\"formFooterLink\" onClick={this.handleCreateAccountButtonClick.bind(this)}>Create Account instead?</h3>\r\n                                        </div>\r\n                                            :                                                                                \r\n                                             <div>                                \r\n                                            <Button onClick={this.handleLoginButtonClick.bind(this)}> Login </Button>\r\n                                            <Button onClick={this.handleCreateAccountButtonClick.bind(this)}> Create Account </Button>\r\n                                            <Button onClick={this.handleForgotPasswordButtonClick.bind(this)}>Forgot Password?</Button>      \r\n                                            </div>\r\n\r\n\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            </div>\r\n                              \r\n                        }\r\n                        \r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n\r\n                }\r\n    \r\n            }\r\n}\r\n\r\n// export default LandingPage;\r\nexport default withRouter(LandingPage)\r\n","import React from \"react\";\r\n\r\n\r\nexport const BugCommentContainer = ({ children }) => (\r\n    <div id=\"wrapper\">\r\n        <div id=\"bugs\">\r\n            {children}\r\n        </div>\r\n        <div id=\"bugComments\"></div>\r\n    </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const BugCommentPanel = props => (\r\n    <div className='panel panel-default'>\r\n        <div className='panel-body note-panel'>\r\n            <p className=\"comment-text\"> {props.noteText} </p>\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport {BugCommentContainer, BugCommentPanel } from \"../../components/BugCommentContainer\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./bug-view.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass BugViewPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            emailAddress: \"\",\r\n            password: \"\",\r\n            phoneNumber: \"\",\r\n            guestCount: \"\",\r\n            formErrors: { firstName: \"\", lastName: \"\", emailAddress: \"\", phoneNumber: \"\", guestCount: \"\", password: \"\" },\r\n            firstNameValid: false,\r\n            lastNameValid: false,\r\n            passwordValid: false,\r\n            emailAddressValid: false,\r\n            phoneNumberValid: false,\r\n            guestCountValid: false,\r\n            isLogin: true,\r\n            isNewBug: false,\r\n            selectedBug: \"\",\r\n            currentModalTitle: \"Edit Bug\",\r\n            currentBugIndex: 0,\r\n            showModal: false,\r\n            showModal2: false,\r\n            sampleBugViewTableData: [{ id: \"1\", bugTitle: \"Title A\", bugDescription: \"Test A\" }, { id: \"2\", bugTitle: \"Title B\", bugDescription: \"Test B\" }, { id: \"3\", bugTitle: \"Title C\", bugDescription: \"Test C\"}],\r\n            bugData: [],\r\n            bugTitleInModal: \"\",\r\n            bugCommentsInModal: [],\r\n            currentBugCommentInModal:\"\",\r\n            bugDescriptionInModal: \"\"\r\n        };\r\n\r\n    }\r\n\r\n    delta = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        });\r\n    }\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    validateFields() {\r\n\r\n    }\r\n\r\n    //Here we check if the field has an error. If it does, it will add the \"has-error\" class to the field.\r\n    //\"has-error\" is a default bootstrap class that will nicely color the outline of the field red to indicate an error for the user. \r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.validateFields();\r\n    };\r\n\r\n\r\n    //************************** DB METHODS ************** THESE METHODS SAVE, EDIT, GET BUGS FROM DB *******************************************\r\n    saveNewBugInDB = () => {\r\n\r\n        let bugObj = {\r\n            id: this.state.bugData.length,\r\n            mongoID: this.state.bugData.length,\r\n            currentBugIndex: this.state.bugData.length,\r\n            bugTitle: this.state.bugTitleInModal,\r\n            bugDescription: this.state.bugDescriptionInModal\r\n        }\r\n        API.saveBug(bugObj)\r\n            .then(response => {\r\n\r\n\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"I WAS SUCCESSFUL Saving Bug FROM Bug View PAGE\");\r\n\r\n                    //Grabbing new ID from DB\r\n                    bugObj.mongoID = response.data.doc._id;\r\n\r\n                    console.log(bugObj);\r\n\r\n\r\n                    this.setState({ showModal: false });\r\n                    this.state.bugData.push(bugObj);\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n\r\n    updateBugInDB = () => {\r\n        API.updateBug(this.state.selectedBug)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"I WAS SUCCESSFUL Saving Bug FROM Bug View PAGE\");\r\n\r\n                    this.setState({ showModal: false });\r\n                    this.state.bugData[this.state.currentBugIndex] = this.state.selectedBug;\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n    getBugsFromDB() {\r\n        API.getAllBugs()\r\n            .then(response => {\r\n                if (!response.data.error) {\r\n                    console.log(\"SUCCESSFULLY GOT BUGS FROM DB\");\r\n                    var bugs = [];\r\n                    //Loop through bug data received from the server.\r\n                    for (var i = 0; i < response.data.length; i++) {\r\n                        console.log(\"bug \" + i);\r\n                        bugs.push({\r\n                            mongoID: response.data[this.state.currentBugIndex]._id,\r\n                            id: this.state.currentBugIndex,\r\n                            bugTitle: response.data[this.state.currentBugIndex].bugTitle,\r\n                            bugDescription: response.data[this.state.currentBugIndex].bugDescription\r\n                        })\r\n                        this.setState({ currentBugIndex: this.state.currentBugIndex + 1 });\r\n                        console.log(bugs);\r\n                    }\r\n                    this.setState({ bugData: bugs });\r\n                    console.log(\"IF IM HEre THEN THE DATA JUST UPDATED!!!!\");\r\n                    this.forceUpdate();\r\n                    console.log(\"Here is bug data!\");\r\n                    console.log(bugs);\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            }).catch(err => console.log(err));\r\n\r\n            console.log(\"I am here\");\r\n    }\r\n\r\n    deleteBugInDB(bugClickedOn) {\r\n        console.log(\"I'm in delete bug in DB method. Here is the bug that was clicked on\");\r\n        console.log(bugClickedOn);\r\n        API.deleteBug(bugClickedOn)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"I WAS SUCCESSFUL DELETING THE Bug FROM Bug View PAGE. Here is the response.\");\r\n                    console.log(response);\r\n\r\n                     if(response.data.deletedCount > 0){\r\n                         //Removing the bug from the UI\r\n                         const index = this.state.bugData.indexOf(bugClickedOn);\r\n                         if (index > -1) {\r\n                             this.state.bugData.splice(index, 1);\r\n                         }\r\n                     } else {\r\n                         console.log(\"Deleting the bug failed for some reason!\");\r\n                     }\r\n\r\n                     this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    // Below methods are related to bug comments\r\n    addBugComment() {\r\n        let currentBug = this.state.bugData[this.state.currentBugIndex];\r\n        currentBug.text = this.state.currentBugCommentInModal;\r\n\r\n        console.log(\"Im in the addBugComment Method on bugview page. Below is currentBug\");\r\n        console.log(currentBug);\r\n        if (this.state.currentBugCommentInModal) {\r\n            API.saveBugComment(currentBug)\r\n                .then(res => this.renderBugComments(this.state.bugCommentsInModal))\r\n                .catch(err => console.log(err));\r\n        }\r\n\r\n    };\r\n    renderBugComments(bugData) {\r\n\r\n        console.log(\"im in the render bug data on the front end\");\r\n        console.log(bugData);\r\n        API.getBugComments(bugData)\r\n            .then(res => {\r\n                console.log(\"I got my res from render bug comments\");\r\n                console.log(res);\r\n                var bugCommentsArr = [];\r\n                if(res.data.bugComment == null){\r\n                    bugCommentsArr = [];\r\n                }\r\n                this.setState({\r\n                    bugCommentsInModal: bugCommentsArr\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    deleteNote(bugComment) {\r\n        API.deleteBugComment(bugComment)\r\n            .then(res => {\r\n                this.renderBugComments(this.state.currentArticle);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n    // ****************** END OF DB METHODS*******************************************\r\n\r\n\r\n    //************************THESE METHODS ARE CALLED FROM BUTTONS WITHIN THE MODAL*********************\r\n    updateOrCreateBug = () => {\r\n        if (this.state.isNewBug){\r\n            this.saveNewBugInDB();\r\n        } else {\r\n            //UPDATE THE BUG DATA LOCALLY BEFORE PUSHING TO DB\r\n            this.state.bugData[this.state.currentBugIndex].bugTitle = this.state.bugTitleInModal;\r\n            this.state.bugData[this.state.currentBugIndex].bugDescription = this.state.bugDescriptionInModal;\r\n            this.setState({selectedBug: this.state.bugData[this.state.currentBugIndex]});\r\n            this.updateBugInDB();\r\n        }\r\n    }\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, bugTitleInModal:\"\", bugDescriptionInModal: \"\" });\r\n    }\r\n    //*********************** END OF MODAL BUTTON CLICK METHODS ****************************\r\n\r\n\r\n    // ******************** THESE METHODS ARE CALLED WHEN CREATE/EDIT BUTTONS ARE FIRST CLICKED ******************\r\n    editBugButton(bugClickedOn) {\r\n        console.log(\"Edit bug clicked on !!!\");\r\n        console.log(bugClickedOn);\r\n        this.setState({ showModal: true, \r\n            currentModalTitle: \"Edit Bug\",\r\n            currentBugIndex: bugClickedOn.id,\r\n            bugTitleInModal: bugClickedOn.bugTitle, \r\n            bugDescriptionInModal: bugClickedOn.bugDescription, \r\n            isNewBug: false, \r\n            selectedBug: bugClickedOn });\r\n        this.renderBugComments(bugClickedOn);\r\n    }\r\n    deleteBugButton(bugClickedOn){ \r\n        console.log(\"Delete Bug Clicked on!!! \");\r\n        this.deleteBugInDB(bugClickedOn);\r\n        this.renderBugComments(bugClickedOn);\r\n    }\r\n\r\n    createNewBugButton = () => {\r\n        this.setState({ showModal: true, currentModalTitle: \"Create Bug\", isNewBug: true, bugTitleInModal: \"\", bugDescriptionInModal: \"\" });\r\n    }\r\n    // ******************** END OF INITIAL BUTTON CLICK METHODS ******************\r\n\r\n\r\n\r\n    //CALLS THIS WHEN THE COMPONENT MOUNTS, basically \"on page load\"\r\n    componentDidMount() {\r\n        console.log(\"Component Did Mount has been called\");\r\n        this.getBugsFromDB();\r\n    } \r\n\r\n    render() {\r\n        return (\r\n             <Container id=\"containerViewBugs\" fluid=\"true\">\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugTrackerTitle\">View Bugs</h1>\r\n                            </Container>\r\n                        </div>\r\n                        <Link to=\"/profile\" className=\"log\" ><Button>View Profile</Button></Link>\r\n                        <br />\r\n                        <p><strong>Assignee </strong> </p>\r\n                         <select>\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Tyler\">Tyler</option>\r\n                            <option value=\"Brian\">Tawny</option>\r\n                            <option value=\"Brian\">Anthony</option>\r\n                            <option value=\"Brian\">Arthur</option>\r\n\t                    </select>\r\n                            <br />\r\n                                <br />\r\n                        {this.state.bugData.length ? (\r\n                        <table id=\"bugViewTable_Table\" className=\"table table-hover bugViewTable_Table\">\r\n                            <thead id=\"bugViewTable_head\" className=\"thead-dark\">\r\n                                            <tr>\r\n                                    <th className=\"bugViewTable_th\" scope=\"col\">Bug Title</th>\r\n                                    <th className=\"bugViewTable_th\" scope=\"col\">Bug Description</th>\r\n                                    <th className=\"bugViewTable_th\" scope=\"col\"></th>\r\n                                    <th className=\"bugViewTable_th\" scope=\"col\"></th>\r\n                                            </tr>\r\n                                </thead>\r\n                                        <tbody>\r\n                                    {this.state.bugData.map(bug => {\r\n                                    return(\r\n                                        <tr className=\"bugViewTable_tr\" key={bug.id}>\r\n                                            <td className=\"bugViewTable_td\">{bug.bugTitle}</td>\r\n                                            <td className=\"bugViewTable_td\">{bug.bugDescription}</td>\r\n                                            <td id=\"editColumn\" className=\"bugViewTable_td\">                            \r\n                                                <Button variant=\"primary\" onClick={() => this.editBugButton(bug)}>\r\n                                                    Edit\r\n                                            </Button>\r\n                                            </td>\r\n\r\n                                            <td id=\"deleteColumn\" className=\"bugViewTable_td\"> <Button variant=\"primary\" onClick={() => this.deleteBugButton(bug)}>Delete</Button></td>\r\n                                            </tr>\r\n                                    )\r\n                                })}\r\n                                    </tbody>\r\n                                    </table>\r\n\r\n\r\n                        ) : ( <h3> No Results to Display </h3>  )} \r\n                                <br />\r\n                                    <br />\r\n                        <Button type=\"button\" className=\"btn btn-primary\" onClick={this.createNewBugButton}>Create New Bug</Button>\r\n\r\n                       \r\n                       \r\n                       \r\n                \r\n                        {/* This modal will pop up for editing bugs! */}\r\n                        <Modal show={this.state.showModal} animation={false}>\r\n                            <Modal.Header>\r\n                                <Modal.Title>{this.state.currentModalTitle}</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n\r\n                                <p>Bug Title</p>\r\n                                <Input onBlur={this.formatInput.bind(this)} value={this.state.bugTitleInModal} id=\"bugTitleInModal\" onChange={this.handleChange.bind(this)} name=\"bugTitleInModal\" />\r\n\r\n\r\n                                <TextArea label=\"Bug Description\" onBlur={this.formatInput.bind(this)} value={this.state.bugDescriptionInModal} id=\"bugDescriptionInModal\" onChange={this.handleChange.bind(this)} name=\"bugDescriptionInModal\" />\r\n\r\n\r\n\r\n\r\n\r\n                                    <TextArea placeholder='Bug Comment' rows='4' cols='60'\r\n                                        id=\"currentBugCommentInModal\"\r\n                                        onBlur={this.formatInput.bind(this)}\r\n                                        value={this.state.currentBugCommentInModal}\r\n                                        onChange={this.handleChange.bind(this)}\r\n                                        name=\"currentBugCommentInModal\"\r\n                                         />\r\n                                <Button className='btn btn-success save' onClick={() => this.addBugComment()}>Save Note</Button>\r\n                                <Button className='btn btn-danger note-delete noteModal' onClick={() => this.closeModal()}>X</Button>\r\n\r\n\r\n                                    <hr />\r\n                                {this.state.bugCommentsInModal.length ? (\r\n                                    <BugCommentContainer>\r\n                                        <div className=\"bugCommentContainer\">\r\n                                            {this.state.bugCommentsInModal.map(bugComment => {\r\n                                                let boundBugCommentClick = this.deleteBugComment.bind(this, bugComment);\r\n                                                return (\r\n                                                    <BugCommentPanel key={bugComment._id} noteText={bugComment.noteText}>\r\n                                                        <div>\r\n                                                            <button className='btn btn-danger bugComment-delete insideNote' onClick={boundBugCommentClick}> X </button>\r\n                                                        </div>\r\n\r\n                                                    </BugCommentPanel>\r\n                                                );\r\n                                            })}\r\n                                        </div>\r\n                                    </BugCommentContainer>\r\n                                ) : (\r\n                                        <h3> There are no comments! </h3>\r\n                                    )}\r\n\r\n\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                                    Close\r\n                                  </Button>\r\n                                <Button variant=\"primary\" onClick={this.updateOrCreateBug}>\r\n                                    Save Changes\r\n                              </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n\r\n                                \r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BugViewPage;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./create-bug.css\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass BugViewPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            bugTitle: \"\",\r\n            bugDescription: \"\",\r\n            sampleBugViewTableData: [{ id: \"1\", BugTitle: \"Title A\", BugDescription: \"Test A\" }, { id: \"2\", BugTitle: \"Title B\", BugDescription: \"Test B\" }, { id: \"3\", BugTitle: \"Title C\", BugDescription: \"Test C\" }]\r\n        };\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    //Standard method for constantly updating input, since UI is constantly refreshing\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container id=\"containerViewBugs\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugTrackerTitle\">Create Bug Task</h1>\r\n                            </Container>\r\n                        </div>\r\n                        \r\n                        <p>Bug Title</p>\r\n                        <Input onBlur={this.formatInput.bind(this)} value={this.state.emailAddress} id=\"BugTitle\" onChange={this.handleChange.bind(this)} name=\"BugTitle\" />\r\n\r\n                        \r\n                        <TextArea label=\"Bug Description\" onBlur={this.formatInput.bind(this)} value={this.state.emailAddress} id=\"BugDescription\" onChange={this.handleChange.bind(this)} name=\"BugDescription\"/>\r\n\r\n                        <Button>Save Bug</Button><Button>View Bugs</Button>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BugViewPage;","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./profile.css\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstName:\"\",\r\n            loggedIn: this.props.loggedIn,\r\n            redirectTo: null,\r\n            changePasswordFieldsActive: false,\r\n            formErrors: { oldPassword: \"\", newPassword1and2:\"\" },\r\n            oldPassword: \"\",\r\n            newPassword1: \"\",\r\n            newPassword2: \"\",\r\n            oldPasswordValid: false,\r\n            newPassword1and2Valid: false,\r\n            showModal: false,\r\n            currentModalTitle: \"\",\r\n            userData: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n        console.log(\"Component mounted in Profile, below is MongoID\");\r\n        console.log(this.props.mongoID);\r\n        \r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    //Standard method for constantly updating input, since UI is constantly refreshing\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    validateFields() {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let oldPasswordValid = this.state.oldPassword;\r\n        let newPassword1and2Valid = this.state.newPassword1Valid;\r\n\r\n\r\n        //Validating that old password is greater than 6 characters. We'll check the DB to see if this is accurate. Password is NEVER sent to client. \r\n        oldPasswordValid = this.state.oldPassword >= 6;\r\n        fieldValidationErrors.oldPassword = oldPasswordValid ? \"\" : \"Old password must be atleast 6 characters long.\";\r\n\r\n\r\n        //Validating between the new password field and \"confirm password\" field that they match and are greather than or equal to 6 characters\r\n        newPassword1and2Valid = this.state.newPassword1 === this.state.newPassword2 && this.state.newPassword1.length >= 6;\r\n        fieldValidationErrors.newPassword1and2Valid = \"New password doesn't match or your password is less than 6 characters long.\";\r\n\r\n    \r\n\r\n        //TODO --- HANDLE FORM VALIDATION\r\n\r\n        // this.setState({\r\n        //     formErrors: fieldValidationErrors,\r\n        //     oldPasswordValid: oldPasswordValid,\r\n        //     newPassword1and2Valid: newPassword1and2Valid\r\n        // }, () => {\r\n        //     this.attemptToSavePasswordToDB();\r\n        // });\r\n    }\r\n\r\n\r\n    \r\n    handleChangePasswordButtonClick = event => {\r\n        event.preventDefault();\r\n\r\n\r\n\r\n\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Change Password\",\r\n        });\r\n\r\n\r\n        this.setState({\r\n            changePasswordFieldsActive: true\r\n        })\r\n   \r\n\r\n    }\r\n\r\n\r\n    //************************THESE METHODS ARE CALLED FROM BUTTONS WITHIN THE MODAL*********************\r\n    handleUpdatePassword = () => {\r\n\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID\r\n        }\r\n        API.updateUserInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"UpdatePassword successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n\r\n                } else {\r\n                    console.log(\"Updating USER PASSWORD WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                    this.setState({ showModal: false });\r\n                }\r\n            })\r\n        \r\n    }\r\n    closeModal = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n    //*********************** END OF MODAL BUTTON CLICK METHODS ****************************\r\n    \r\n    render() {\r\n        return (\r\n            <Container id=\"containerViewBugs\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugTrackerTitle\">Welcome, {this.props.firstName}!</h1>\r\n                            </Container>\r\n                        </div>\r\n\r\n                        <Link to=\"/bug-view\" className=\"log\" ><Button>View Bugs</Button></Link>\r\n                        <Button onClick={this.handleChangePasswordButtonClick.bind(this)}>Change Password</Button>\r\n\r\n                        \r\n                        {/* This modal will pop up for changing password! */}\r\n                        <Modal show={this.state.showModal} animation={false}>\r\n                            <Modal.Header>\r\n                                <Modal.Title>{this.state.currentModalTitle}</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n\r\n                                {this.state.changePasswordFieldsActive ?\r\n                                    <div>\r\n                                        <p>Old Password</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.oldPasswordValid.toString()}\r\n                                            fielderror={this.state.formErrors.oldPassword}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.oldPassword)}`}\r\n                                            value={this.state.oldPassword}\r\n                                            id=\"oldPassword\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"oldPassword\"></Input>\r\n\r\n                                        <p>New Password</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.newPassword1and2Valid.toString()}\r\n                                            fielderror={this.state.formErrors.newPassword1}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.newPassword1and2)}`}\r\n                                            value={this.state.newPassword1}\r\n                                            id=\"newPassword1\" onChange={this.handleChange.bind(this)}\r\n                                            name=\"newPassword1\"></Input>\r\n\r\n                                        <p>Confirm New Password</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.newPassword1and2Valid.toString()}\r\n                                            fielderror={this.state.formErrors.newPassword2}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.newPassword1and2)}`}\r\n                                            value={this.state.newPassword2}\r\n                                            id=\"newPassword2\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"newPassword2\"></Input>\r\n\r\n                                    </div>\r\n                                    :\r\n                                    \"\"}\r\n\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                                    Close\r\n                                  </Button>\r\n                                <Button variant=\"primary\" onClick={this.handleUpdatePassword}>\r\n                                    Save Changes\r\n                              </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n\r\n    \r\n}\r\n}\r\n\r\n// export default Profile;\r\nexport default withRouter(Profile);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport LandingPage from \"./pages/landing-page\";\nimport BugView from \"./pages/bug-view\";\nimport CreateBug from \"./pages/create-bug\";\nimport Profile from \"./pages/profile\";\nimport API from \"./utils/API\";\nimport { withRouter } from 'react-router';\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      loggedIn: false,\n      user: null,\n      firstName: null,\n      lastName: null,\n      mongoID: null,\n      password: null,\n      redirectTo: null\n    }\n    this._login = this._login.bind(this)\n  }\n  componentDidMount() {\n    API.user().then(response => {\n      if (!!response.data.user) {\n        console.log(\"Attempt to login on App.js from componentDidMount\");\n        console.log(response.data);\n        this.setState({\n          loggedIn: true,\n          user: response.data.user,\n          userId: response.data.user._id,\n        });\n        console.log(\"login passed!! User is not authenticated. (App.js - componentDidMount)\");\n      } else {\n        console.log(\"Login failed!!! User is not authenticated. (App.js - componentDidMount)\");\n        this.setState({\n          loggedIn: false,\n          // redirectTo: \"/landing-page\",\n          user: null\n        })\n      }\n    })\n  }\n\n  _login(username, password) {\n    console.log(\"I called _login from App.js\");\n    var userData = {\n      username: username,\n      password: password,\n    }\n    API\n      .login(userData)\n      .then(response => {\n        console.log(\"attempt to login from app.js _login\");\n        console.log(response);\n        if (response.status === 200) {\n          console.log(\"ATTEMPTING TO CONSOLE LOG EMAIL IN _LOGIN IN App.js\");\n          console.log(response.data);\n            if(response.data.loggedInSuccess){\n\n            \n          //var data = JSON.parse(response.data);\n         // console.log(response);\n         console.log(\"_login from App.js is SUCCESSFUL, below is the response data\");\n         console.log(response.data);\n          // update the state\n          this.setState({\n            loggedIn: true,\n            username: response.data.username,\n            mongoID: response.data.mongoID,\n            firstName: response.data.firstName,\n            lastName: response.data.lastName,\n            password: response.data.password,\n            redirectTo: \"/profile\"\n          })\n          //this.props.history.push(\"/profile\");\n\n\n        }else {\n            console.log(\"logged in FAILED!!!\");\n            console.log(response);\n              this.setState({\n                loggedIn: false\n              })\n        }\n        }\n      })\n  }\n\n    render() {\n      //IF USER IS AUTHENTICATED RENDER THIS\n      if (this.state.loggedIn) {\n        console.log(\"redirectTO has been called!!!\");\n        console.log(this.state.redirectTo);\n        return(\n\n            <div className=\"App\">\n              <div>\n\n        <Redirect exact to={{ pathname: this.state.redirectTo }} render={() =>\n          <LandingPage\n            _login={this._login}\n\n          />}/> \n\n          \n          <Route exact path=\"/landing-page\"\n            render={() =>\n              <LandingPage\n                _login={this._login}\n\n              />} />\n          <Route exact path=\"/bug-view\" component={BugView} />\n          <Route exact path=\"/create-bug\" component={CreateBug} />\n              <Route exact path=\"/profile\" render={() => <Profile loggedIn={this.state.loggedIn} username={this.state.username} mongoID={this.state.mongoID} firstName={this.state.firstName}/>} />\n\n          <Route exact path=\"/\" render={() => (\n            <Redirect to=\"/landing-page\" />\n          )} />\n\n          </div>\n          </div>\n\n        )\n      }\n\n\n      //IF USER IS NOT AUTHENTICATED, RENDER JUST THE LANDING PAGE\n      return (\n        <div className=\"App\">\n       <div>\n            <Route exact path=\"/landing-page\" \n                  render={() =>\n                    <LandingPage\n                      _login={this._login}\n\n                    />} />\n\n                <Route exact path=\"/\" render={() => (\n                  <Redirect to=\"/landing-page\" />\n                )} />\n\n            <Redirect from=\"*\" to=\"/landing-page\" />\n  \n             </div>\n       </div>\n      )      \n    }\n\n  }\nexport default App;\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from 'react-router-dom'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nReactDOM.render(\n    // <App /> \n   \n <BrowserRouter> \n\n\n    \n    <Switch>\n    <Route component={App} />\n\n                </Switch>\n \n </BrowserRouter>\n\n  , document.getElementById(\"root\"));\n\n"],"sourceRoot":""}