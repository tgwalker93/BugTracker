{"version":3,"sources":["components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/Form/Input.js","components/Form/Button.js","components/Form/TextArea.js","utils/API.js","pages/landing-page/landing-page.js","components/BugCommentContainer/BugCommentContainer.js","components/BugCommentContainer/BugCommentPanel.js","pages/bug-view/bug-view.js","pages/profile/profile.js","App.js","index.js"],"names":["Col","props","className","size","split","map","join","children","Container","id","fluid","Row","Input","formgroupclass","htmlFor","label","isvalid","fielderror","Button","TextArea","rows","console","log","axios","get","userObj","post","userData","bugData","organizationMongoID","bugCommentData","_id","bugAndCommentData","mongoID","organizationData","LandingPage","formatInput","event","attribute","target","getAttribute","setState","value","trim","handleFormSubmit","preventDefault","emailAddressValid","firstNameValid","lastNameValid","passwordValid","formErrors","firstName","lastName","emailAddress","password","validateFields","handleLoginButtonClick","loginOrCreateAccountButtonClicked","loginButtonClicked","forgotPasswordButtonClicked","serverErrorMessage","handleCreateAccountButtonClick","handleForgotPasswordButtonClick","state","redirectTo","e","this","nextProps","fieldValidationErrors","RegExp","test","length","_login","saveUser","sendForgotPasswordEmail","error","email","API","then","response","data","userId","username","user_email","to","pathname","onBlur","bind","toString","errorClass","onChange","handleChange","name","type","onClick","Component","withRouter","BugCommentContainer","BugCommentPanel","text","BugViewPage","delta","count","saveNewBugInDB","bugObj","bugTitle","bugTitleInModal","bugDescription","bugDescriptionInModal","userAssigned","bugUserAssignedInModal","status","bugStatusInModal","errorResponse","bugDoc","newMongoID","currentBugIndex","isCompleted","showModal","push","forceUpdate","updateBugInDB","selectedBug","updateOrCreateBug","bugTitleValid","isNewBug","closeModal","currentBugCommentInModal","currentIndex","createNewBugButton","currentModalTitle","swapRenderCompletedBugs","showCompletedBugs","swapRenderActiveBugs","showActiveBugs","isLogin","currentCompletedBugIndex","showModal2","filteredCompletedBugData","filteredBugData","bugCommentsInModal","users","userFilter","statusFilter","organizationNameInTitle","formSubmitButtonText","isCurrentBugCompleted","bugs","bugArrayFromDB","organizationDoc","i","putAllBugsIntoFilteredArray","catch","err","bugClickedOn","bugMongoID","deletedBugDoc","deletedCount","index","indexOf","splice","adjustBugDataOrder","currentBug","res","renderBugComments","bugComments","bugComment","deleteBugInDB","location","organizationName","getBugsFromDB","bug","assigneeFilterIsActive","statusFilterIsActive","href","scope","key","checked","completedCheck","variant","editBugButton","deleteBugButton","Modal","show","animation","Header","Title","Body","boundBugCommentClick","deleteBugComment","placeholder","addBugComment","Footer","Profile","handleChangePasswordButtonClick","setPasswordFieldsActiveInModal","updatePasswordInDB","oldPassword","newPassword","newPassword1","newPassword1and2","organizationID","successMessage","organizationIDValid","organizationNameValid","oldPasswordValid","newPassword1Valid","newPassword2Valid","organizationNameInModal","organizationIDInModal","newPassword2","handleCreateOrganizationButtonClick","setCreateOrganizationFieldsActiveInModal","setJoinOrganizationFieldsActiveInModal","setConfirmationBoxActiveInModal","handleJoinOrganizationButtonClick","handleSubmitButtonInModalClick","handleDeleteOrganizationInDB","currentOrganization","loggedIn","setEditOrganizationFieldsActiveInModal","organizationMongoIDInModal","newPassword1And2Valid","organizations","getOrganizationsOfUserInDB","attachUserToOrganizationInDB","saveOrganizationInDB","updateOrganizationInDB","organizationClickedOn","organization","isUserOrganizationOwner","userWhoCreatedOrgMongoID","organizationObj","userMongoID","handleEditOrganizationButtonClick","handleDeleteOrLeaveButtonClick","App","user","loggedInSuccess","exact","render","path","component","BugView","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b74fa742.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Col = props =>\n  <div className={props.size.split(\" \").map(size => \"col-\" + size).join(\" \")} {...props}>\n    {props.children}\n  </div>;\n","import React from \"react\";\n\nexport const Container = props =>\n  <div id={props.id} className={`container${props.fluid === \"true\"  ? \"-fluid\" : \"\"}`} {...props}>\n    {props.children}\n  </div>;\n","import React from \"react\";\n//({ fluid, children, props })\nexport const Row = props =>\n  <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props}> \n    {props.children}\n  </div>;\n","import React from \"react\";\n\nexport const Input = props =>\n  <div className={props.formgroupclass}>\n\n    <label htmlFor=\"inputField\">{props.label}</label>\n    <input className=\"form-control\" id=\"inputField\" {...props} />\n    {props.isvalid === \"true\" ? \"\" : <span className=\"help-block\">{props.fielderror}</span>}\n  </div>;\n","import React from \"react\";\n\nexport const Button = props =>\n  <button {...props} className=\"btn btn-pill btn-light btn-lg\">\n    {props.children}\n  </button>;\n","import React from \"react\";\r\n\r\nexport const TextArea = props =>\r\n    <div className={props.formgroupclass}>\r\n        <label htmlFor=\"bugDescriptionField\">{props.label}</label>\r\n        <textarea className=\"form-control\" id=\"bugDescriptionField\" rows=\"5\" {...props}></textarea>\r\n        {props.isvalid === \"true\" ? \"\" : <span className=\"help-block\">{props.fielderror}</span>}\r\n    </div>;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n    // USER CALLS  -----\r\n    user: function () {\r\n        console.log(\"i'm in API.js file, calling user\");\r\n        return axios.get(\"/api/user\");\r\n    },\r\n    sendForgotPasswordEmail(userObj) {\r\n        console.log(\"i'm in API.JS on the front end\");\r\n        return axios.post(\"/api/user/sendForgotPasswordEmail\", userObj);\r\n    },\r\n    updateUserInDB(userObj){\r\n        return axios.post(\"/api/user/updateUser\", userObj);\r\n    },\r\n    login: function (userData) {\r\n        console.log(\"LoginAPI\")\r\n        console.log(userData);\r\n        // return axios.get(\"/api/user/login\");\r\n        return axios.post(\"/api/user/login\", userData)\r\n    },\r\n    saveUser: function (userData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/user/saveUser\", userData);\r\n    },\r\n\r\n    //BUG CALL --------\r\n    saveBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/saveBug\", bugData);\r\n    },\r\n    updateBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/updateBug\", bugData);\r\n    },\r\n    deleteBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/deleteBug\", bugData);\r\n    },\r\n    getAllBugs: function (organizationMongoID) {\r\n        console.log(\"I'm in the GETALLBUGS method on API.js, below is organizationMongoID\");\r\n        console.log(organizationMongoID);\r\n        //TODO - Set up organization ID query\r\n        //Query db to get all bugs\r\n        return axios.get(\"/api/bug/getAllBugs/\" + organizationMongoID);\r\n    },\r\n    \r\n\r\n    // BUG COMMENT CALLS -------\r\n    deleteBugComment: function (bugCommentData) {\r\n        console.log(\"I'm in deleteBugComment Api.js\");\r\n        console.log(bugCommentData)\r\n        return axios.post(\"/api/bug/deleteBugComment/\" + bugCommentData._id);\r\n    },\r\n    saveBugComment: function(bugAndCommentData) {\r\n        return axios.post(\"/api/bug/saveBugComment\", bugAndCommentData);\r\n    },\r\n    getBugComments: function(bugData) {\r\n        console.log(\"I'm in getbugcomments front end API.JS\");\r\n        console.log(bugData.mongoID);\r\n        return axios.get(\"/api/bug/getBugComments/\" + bugData.mongoID);\r\n    },\r\n\r\n    // ORGANiZATION CALLS\r\n    saveOrganizationInDB: function(userData) {\r\n        console.log(\"I'm in the saveOrganizationInDB method in API file\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/organization/saveOrganization\", userData);\r\n    },\r\n    getOrganizationsOfUserInDB: function(userData){\r\n        console.log(\"I'm in the getOrganizationsOfUserInDB method in API file\");\r\n        console.log(userData);\r\n        return axios.get(\"/api/organization/getAllOrganizationsOfUser/\" + userData.mongoID);\r\n    },\r\n    attachUserToOrganizationInDB: function (userData) {\r\n        console.log(\"I'm in the attachUserToOrganizationInDB method in API file\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/organization/attachUserToOrganization\", userData);\r\n    },\r\n    deleteOrganizationInDB: function(organizationData){\r\n        console.log(\"I'm in the delete Organization In DB method\");\r\n        console.log(organizationData);\r\n        return axios.post(\"/api/organization/deleteOrganization\", organizationData);\r\n    },\r\n    updateOrganizationInDB: function(userData){\r\n        console.log(\"I'm in the update Organization in DB method\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/organization/updateOrganization\", userData)\r\n    }\r\n\r\n};","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { Input, Button } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { withRouter } from 'react-router';\r\n\r\nimport \"./landing-page.css\";\r\nclass LandingPage extends Component {\r\n    constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        emailAddress: \"\",\r\n        password: \"\",\r\n        formErrors: {firstName: \"\", lastName: \"\", emailAddress:\"\", password:\"\"},\r\n          redirectTo: null,\r\n        firstNameValid: false,\r\n        lastNameValid: false,\r\n        passwordValid: false,\r\n        emailAddressValid: false,\r\n        loginOrCreateAccountButtonClicked: false,\r\n        loginButtonClicked: true,\r\n        forgotPasswordButtonClicked: false,\r\n        serverErrorMessage: \"\"\r\n    };\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    } \r\n\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ serverErrorMessage: this.props.serverErrorMessage });\r\n    }\r\n    validateFields() {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let emailAddressValid = this.state.emailAddressValid;\r\n        let firstNameValid = this.state.firstNameValid;\r\n        let lastNameValid = this.state.lastNameValid;\r\n        let passwordValid = this.state.passwordValid;\r\n\r\n        //Validating email using Regex\r\n        let regex = /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i;\r\n         emailAddressValid = new RegExp(regex).test(this.state.emailAddress);\r\n        \r\n        fieldValidationErrors.emailAddress = emailAddressValid ? \"\" : \"Please provide a valid email\";\r\n\r\n        //Validating First Name by checking if there is anything there.\r\n        firstNameValid = this.state.firstName.length > 0;\r\n        fieldValidationErrors.firstName = firstNameValid ? \"\": \"Please provide your first name\";\r\n\r\n        //Validating Last Name by checking if there is anything there.\r\n        lastNameValid = this.state.lastName.length > 0;\r\n        fieldValidationErrors.lastName = lastNameValid ? \"\":\"Please provide your last name\";\r\n\r\n\r\n        if (!this.state.loginButtonClicked)\r\n        {\r\n        //validating password\r\n        passwordValid = this.state.password.length >= 6;\r\n        fieldValidationErrors.password = passwordValid ? \"\" : \"Please provide a password of atleast 8 characters\";\r\n        }\r\n\r\n\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            emailAddressValid: emailAddressValid,\r\n            firstNameValid: firstNameValid,\r\n            lastNameValid: lastNameValid,\r\n            passwordValid: passwordValid\r\n        }, () => {\r\n            console.log(\"validate fields\");\r\n            console.log(this.state.emailAddress);\r\n            console.log(this.state.emailAddressValid);\r\n            if(this.state.loginButtonClicked && emailAddressValid){\r\n                //If the login button is clicked then we want submit LOGIN request, which is different than Create Account request\r\n                this.props._login(this.state.emailAddress, this.state.password);\r\n\r\n            }else if(this.state.loginOrCreateAccountButtonClicked && !this.state.loginButtonClicked && emailAddressValid && firstNameValid && lastNameValid && passwordValid){\r\n                //If Create Account button was clicked, then we want to post the user to the database.\r\n                this.saveUser();\r\n            }else if(this.state.forgotPasswordButtonClicked){\r\n                //If forgot password button was clicked.\r\n                this.sendForgotPasswordEmail();\r\n            }\r\n        });    \r\n    }\r\n\r\n    //Here we check if the field has an error. If it does, it will add the \"has-error\" class to the field.\r\n    //\"has-error\" is a default bootstrap class that will nicely color the outline of the field red to indicate an error for the user. \r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    //Below are all the button click methods - Just to set it up so before I actually submit data to DB ----------------------------------\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        console.log(\"i'm in login submit form\");\r\n        this.setState({\r\n            emailAddressValid: true, firstNameValid: true, lastNameValid: true, passwordValid: true,\r\n            formErrors: { firstName: \"\", lastName: \"\", emailAddress: \"\", password: \"\" }\r\n        }, () => {\r\n                this.validateFields();\r\n        });\r\n\r\n    };\r\n\r\n    handleLoginButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: true, loginButtonClicked: true, forgotPasswordButtonClicked: false,\r\n                        emailAddressValid: true, firstNameValid: true, lastNameValid: true, passwordValid: true,\r\n            formErrors: { firstName: \"\", lastName: \"\", emailAddress: \"\", password: \"\", serverErrorMessage: \"\" }\r\n        })\r\n        \r\n    }\r\n    handleCreateAccountButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: true, loginButtonClicked: false, forgotPasswordButtonClicked: false,\r\n                        emailAddressValid: true, firstNameValid: true, lastNameValid: true, passwordValid: true,\r\n            formErrors: { firstName: \"\", lastName: \"\", emailAddress: \"\", password: \"\", serverErrorMessage: \"\" }        \r\n        })\r\n    }\r\n\r\n    handleForgotPasswordButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: false, loginButtonClicked: false, forgotPasswordButtonClicked: true,\r\n                        emailAddressValid: true, firstNameValid: true, lastNameValid: true, passwordValid: true,\r\n                        formErrors: { firstName: \"\", lastName: \"\", emailAddress: \"\", password: \"\", serverErrorMessage:\"\" }       \r\n        })\r\n    }\r\n    // END of BUTTON CLICK METHODS\r\n\r\n    sendForgotPasswordEmail() {\r\n        let userObj = {\r\n            email: this.state.emailAddress\r\n        }\r\n\r\n        console.log(\"I'm in SEND FORGOT PASSWROD EMAIL METHOD ON landing-page js\");\r\n\r\n        API.sendForgotPasswordEmail(userObj)\r\n            .then(response => {\r\n\r\n\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"send forgot password was successful, i'm back at landing-page.js, in API.sendForgotPasswordEmail\");\r\n                    console.log(response);\r\n                } else {\r\n                    console.log(\"error found!!!\");\r\n                    console.log(response);\r\n                    this.setState({ serverErrorMessage: response.data.error })\r\n                }\r\n            })\r\n    }\r\n\r\n    saveUser() {\r\n        console.log(this.state.passwordValid + \" passwordvalid?\");\r\n        // if (this.state.passwordValid && this.state.firstNameValid && this.state.lastNameValid) {\r\n\r\n            console.log(\"Called saveUser() from LandingPage  .... BELOW IS THE STATE\");\r\n            console.log(this.state);\r\n            let userObj = {\r\n                userId: null,\r\n                username: this.state.emailAddress,\r\n                password: this.state.password,\r\n                email: this.state.emailAddress,\r\n                user_email: this.state.email,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName\r\n            }\r\n            API.saveUser(userObj)\r\n                .then(response => {\r\n\r\n\r\n\r\n                    if (!response.data.error) {\r\n                        //userObj.userId = response.data.doc._id;\r\n\r\n\r\n                        //Now that the user account is created, let's automatically login the user in\r\n                         this.props._login(this.state.emailAddress, this.state.password, userObj);\r\n\r\n        \r\n                    } else {\r\n                        //Usually this happens when an email address was already used.\r\n                        this.setState({ serverErrorMessage: response.data.error })\r\n                    }\r\n                })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"component has mounted\");\r\n        console.log(this);\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    render() {\r\n\r\n        if (this.props.redirectTo) {\r\n            console.log(\"THIS . PROPS. REDIRECT EXISTS IN LANDING PAGE!!!\");\r\n            console.log(this.props.redirectTo);\r\n            return <Redirect to={{ pathname: this.props.redirectTo }} />\r\n        } else {\r\n        return (\r\n            <Container id=\"container\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n\r\n                    <hr id=\"hline\"></hr>\r\n                    <Col id=\"formCol\" size=\"sm-6\">\r\n                        <h1 id=\"loginBugSlayerTitle\">BugSlayer</h1>\r\n                        {this.state.loginOrCreateAccountButtonClicked ?\r\n                            <div>\r\n                                {this.state.loginButtonClicked ?\r\n                                    <h3 id=\"formHeader\">Login</h3>\r\n                                    :\r\n                                    <h3 id=\"formHeader\">Create Account</h3>\r\n\r\n                                }\r\n                                <form>\r\n                                    \r\n\r\n                                    {this.state.loginButtonClicked ?\r\n\r\n                                        \"\"\r\n                                        :\r\n\r\n                                        <div>\r\n                                           \r\n                                            <Input label=\"First Name\" onBlur={this.formatInput.bind(this)} isvalid={this.state.firstNameValid.toString()} fielderror={this.state.formErrors.firstName} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.firstName)}`} value={this.state.firstName} id=\"firstName\" onChange={this.handleChange.bind(this)} name=\"firstName\"></Input>\r\n\r\n\r\n                                    \r\n                                            <Input label=\"Last Name\" onBlur={this.formatInput.bind(this)} isvalid={this.state.lastNameValid.toString()} fielderror={this.state.formErrors.lastName} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.lastName)}`} value={this.state.lastName} id=\"lastName\" onChange={this.handleChange.bind(this)} name=\"lastName\"></Input>\r\n\r\n                                        </div>\r\n\r\n                                    }\r\n\r\n                               \r\n                                    <Input label=\"Email Address\" onBlur={this.formatInput.bind(this)} isvalid={this.state.emailAddressValid.toString()} fielderror={this.state.formErrors.emailAddress} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.emailAddress)}`} value={this.state.emailAddress} id=\"emailAddress\" onChange={this.handleChange.bind(this)} name=\"emailAddress\"></Input>\r\n\r\n                              \r\n                                    <Input label=\"Password\" type=\"password\" onBlur={this.formatInput.bind(this)} isvalid={this.state.passwordValid.toString()} fielderror={this.state.formErrors.password} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.password)}`} value={this.state.password} id=\"password\" onChange={this.handleChange.bind(this)} name=\"password\"></Input>\r\n\r\n                                    <Button onClick={this.handleFormSubmit.bind(this)}> Submit </Button>\r\n\r\n                                    {this.state.loginButtonClicked ?\r\n                                        <div>\r\n                                            <h3 id=\"formFooterLink\" className=\"formFooterLink\" \r\n                                            onClick={this.handleCreateAccountButtonClick.bind(this)}>Create Account instead?</h3>\r\n                                            <h3 id=\"formFooterLink\" className=\"formFooterLink\" onClick={this.handleForgotPasswordButtonClick.bind(this)}>Forgot Password?</h3>\r\n                                        </div>\r\n                                        :\r\n                                        <div>\r\n                                        <h3 id=\"formFooterLink\" onClick={this.handleLoginButtonClick.bind(this)}>Login instead?</h3>\r\n                                        <h3 id=\"formFooterLink\" onClick={this.handleForgotPasswordButtonClick.bind(this)}>Forgot Password?</h3>\r\n                                        </div>\r\n\r\n                                    }\r\n                                </form>\r\n                                <span className=\"help-block serverErrorMessage\">{this.state.serverErrorMessage}</span>\r\n                                <br />\r\n                            </div>\r\n                            : \r\n\r\n                            <div>\r\n\r\n                                {\r\n                                    this.state.forgotPasswordButtonClicked ?\r\n                                        <div>\r\n\r\n                                            <p><strong>Please enter your email address. If correct, we will send you an email!</strong></p>\r\n                                            <p>Email Address</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.emailAddressValid.toString()} fielderror={this.state.formErrors.emailAddress} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.emailAddress)}`} value={this.state.emailAddress} id=\"emailAddress\" onChange={this.handleChange.bind(this)} name=\"emailAddress\"></Input>\r\n                                            <Button onClick={this.handleFormSubmit.bind(this)}> Submit </Button>\r\n                                            \r\n                                            <h3 id=\"formFooterLink\" className=\"formFooterLink\" onClick={this.handleLoginButtonClick.bind(this)}>Login instead?</h3>\r\n                                            <h3 id=\"formFooterLink\" className=\"formFooterLink\" onClick={this.handleCreateAccountButtonClick.bind(this)}>Create Account instead?</h3>\r\n                                        </div>\r\n                                            :                                                                                \r\n                                             <div>                                \r\n                                            <Button onClick={this.handleLoginButtonClick.bind(this)}> Login </Button>\r\n                                            <Button onClick={this.handleCreateAccountButtonClick.bind(this)}> Create Account </Button>\r\n                                            <Button onClick={this.handleForgotPasswordButtonClick.bind(this)}>Forgot Password?</Button>      \r\n                                            </div>\r\n\r\n\r\n                                }\r\n                                <span className=\"help-block serverErrorMessage\">{this.state.serverErrorMessage}</span>\r\n\r\n                            </div>\r\n                              \r\n                        }\r\n                        \r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n\r\n                }\r\n    \r\n            }\r\n}\r\n\r\n// export default LandingPage;\r\nexport default withRouter(LandingPage)\r\n","import React from \"react\";\r\n\r\n\r\nexport const BugCommentContainer = ({ children }) => (\r\n    <div id=\"wrapper\">\r\n        <div id=\"bugs\">\r\n            {children}\r\n        </div>\r\n        <div id=\"bugComments\"></div>\r\n    </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const BugCommentPanel = props => (\r\n    <div className='panel panel-default'>\r\n        <div className='panel-body note-panel'>\r\n            <p className=\"comment-text\"> {props.text} </p>\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport {BugCommentContainer, BugCommentPanel } from \"../../components/BugCommentContainer\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./bug-view.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass BugViewPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            formErrors: { bugTitle: \"\" },\r\n            bugTitleValid: false,\r\n            isLogin: true,\r\n            isNewBug: false,\r\n            selectedBug: \"\",\r\n            currentModalTitle: \"Edit Bug\",\r\n            currentBugIndex: 0,\r\n            currentCompletedBugIndex: 0,\r\n            showModal: false,\r\n            showModal2: false,\r\n            bugData: [],\r\n            filteredCompletedBugData: [],\r\n            filteredBugData: [],\r\n            bugTitleInModal: \"\",\r\n            bugCommentsInModal: [],\r\n            users: [{text: 'Tyler', id: '1'}, {text: 'Tawny', id: '2'}, {text: 'Anthony', id: '3'}, {text: 'Arthur', id:'4'}],\r\n            currentBugCommentInModal:\"\",\r\n            bugDescriptionInModal: \"\",\r\n            bugStatusInModal: \"\",\r\n            bugUserAssignedInModal: \"\",\r\n            userFilter: \"\",\r\n            statusFilter: \"\",\r\n            organizationMongoID: \"\",\r\n            organizationNameInTitle: \"\",\r\n            formSubmitButtonText: \"Submit\",\r\n            showActiveBugs: true,\r\n            showCompletedBugs: false,\r\n            isCurrentBugCompleted: false\r\n        };\r\n\r\n    }\r\n\r\n    delta = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        });\r\n    }\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    validateFields() {\r\n\r\n        \r\n            let fieldValidationErrors = this.state.formErrors;\r\n            let bugTitleValid = this.state.bugTitleValid;\r\n\r\n\r\n            bugTitleValid = this.state.bugTitleInModal.length > 0;\r\n            fieldValidationErrors.bugTitle = bugTitleValid ? \"\" : \"Please add Bug Title.\";\r\n\r\n\r\n            this.setState({\r\n                formErrors: fieldValidationErrors,\r\n                bugTitleValid: bugTitleValid\r\n            }, () => {\r\n                    this.updateOrCreateBug();\r\n            });\r\n        \r\n\r\n    }\r\n\r\n    //Here we check if the field has an error. If it does, it will add the \"has-error\" class to the field.\r\n    //\"has-error\" is a default bootstrap class that will nicely color the outline of the field red to indicate an error for the user. \r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.validateFields();\r\n    };\r\n\r\n\r\n    //************************** DB METHODS ************** THESE METHODS SAVE, EDIT, GET BUGS FROM DB *******************************************\r\n    saveNewBugInDB = () => {\r\n        console.log(\"Im in saveNewBugIn DB\");\r\n        console.log(bugObj);\r\n\r\n        var bugObj = {\r\n            organizationMongoID: this.state.organizationMongoID,\r\n            bugTitle: this.state.bugTitleInModal,\r\n            bugDescription: this.state.bugDescriptionInModal,\r\n            userAssigned: this.state.bugUserAssignedInModal,\r\n            status: this.state.bugStatusInModal\r\n        }\r\n\r\n        API.saveBug(bugObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"I WAS SUCCESSFUL Saving Bug FROM Bug View PAGE\");\r\n                    console.log(response.data.bugDoc._id);\r\n\r\n\r\n                    bugObj.mongoID = response.data.bugDoc._id;\r\n                    bugObj.newMongoID = response.data.bugDoc._id;\r\n                    bugObj.id = this.state.currentBugIndex;\r\n                    bugObj.isCompleted = response.data.isCompleted;\r\n\r\n                    console.log(bugObj);\r\n\r\n                    this.setState({ showModal: false });\r\n                    this.state.bugData.push(bugObj);\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n\r\n    updateBugInDB = () => {\r\n        console.log(\"I'm in the update bug in DB\");\r\n        console.log(this.state.selectedBug);\r\n        API.updateBug(this.state.selectedBug)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"!!!!!!!!!!!!!!!I WAS SUCCESSFUL UPDATE Bug FROM Bug View PAGE!!!!!!!!!!!!!\");\r\n                    console.log(response.data);\r\n\r\n                    this.setState({ showModal: false });\r\n\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    getBugsFromDB() {\r\n        API.getAllBugs(this.state.organizationMongoID)\r\n            .then(response => {\r\n                if (!response.data.error) {\r\n                    console.log(\"SUCCESSFULLY GOT BUGS FROM DB_____________________________________________________\");\r\n                    var bugs = [];\r\n                    var completedBugs = [];\r\n                    console.log(response.data);\r\n                    var bugArrayFromDB = response.data.organizationDoc.bugs;\r\n                    console.log(\"here are all the bugs I got back from DB **************************\");\r\n                    console.log(bugArrayFromDB);\r\n                    //Loop through bug data received from the server.\r\n                    for (var i = 0; i < bugArrayFromDB.length; i++) {\r\n\r\n\r\n                           console.log(\"bug \" + this.state.currentBugIndex);\r\n                            console.log(bugArrayFromDB[i]);\r\n                            bugs.push({\r\n                                mongoID: bugArrayFromDB[i]._id,\r\n                                id: this.state.currentBugIndex,\r\n                                bugTitle: bugArrayFromDB[i].bugTitle,\r\n                                bugDescription: bugArrayFromDB[i].bugDescription,\r\n                                userAssigned: bugArrayFromDB[i].userAssigned,\r\n                                status: bugArrayFromDB[i].status,\r\n                                isCompleted: bugArrayFromDB[i].isCompleted\r\n                            })\r\n\r\n\r\n\r\n                        this.setState({ currentBugIndex: this.state.currentBugIndex + 1});\r\n\r\n\r\n\r\n\r\n                   }\r\n\r\n                    this.setState({ bugData: bugs});\r\n                    console.log(\"IF IM HEre THEN THE DATA JUST UPDATED!!!!\");\r\n                    this.forceUpdate();\r\n                    console.log(\"Here is bug data from inside callback of API.getAllBugs in bug-view page!\");\r\n                    console.log(bugs);\r\n\r\n                    //At default, we want to show all bugs in the table\r\n                    this.putAllBugsIntoFilteredArray();\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            }).catch(err => console.log(err));\r\n\r\n            console.log(\"I am here\");\r\n    }\r\n\r\n    deleteBugInDB(bugClickedOn) {\r\n        console.log(\"I'm in delete bug in DB method. Here is the bug that was clicked on\");\r\n        console.log(bugClickedOn);\r\n        bugClickedOn.bugMongoID = bugClickedOn.mongoID;\r\n        bugClickedOn.organizationMongoID = this.state.organizationMongoID;\r\n        API.deleteBug(bugClickedOn)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"I WAS SUCCESSFUL DELETING THE Bug FROM Bug View PAGE. Here is the response.\");\r\n                    console.log(response);\r\n\r\n                    if (response.data.deletedBugDoc.deletedCount > 0){\r\n                         //Removing the bug from the UI\r\n                         const index = this.state.bugData.indexOf(bugClickedOn);\r\n                         if (index > -1) {\r\n                             this.state.bugData.splice(index, 1);\r\n                         }\r\n                         this.adjustBugDataOrder();\r\n                     } else {\r\n                         console.log(\"Deleting the bug failed for some reason!\");\r\n                     }\r\n\r\n                     this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    // Below methods are related to bug comments\r\n    addBugComment() {\r\n        let currentBug = this.state.bugData[this.state.currentBugIndex];\r\n        if(currentBug){\r\n            currentBug.text = this.state.currentBugCommentInModal;\r\n       \r\n\r\n        console.log(\"Im in the addBugComment Method on bugview page. Below is currentBug\");\r\n        console.log(currentBug);\r\n        if (this.state.currentBugCommentInModal) {\r\n            API.saveBugComment(currentBug)\r\n                .then(res => this.renderBugComments(currentBug))\r\n                .catch(err => console.log(err));\r\n        }\r\n\r\n         }\r\n\r\n    };\r\n    renderBugComments(bugData) {\r\n\r\n        console.log(\"im in the render bug data on the front end\");\r\n        console.log(bugData);\r\n        API.getBugComments(bugData)\r\n            .then(res => {\r\n                console.log(\"I got my res from render bug comments\");\r\n                console.log(res);\r\n                if(res.data !== null){\r\n                    this.setState({\r\n                        bugCommentsInModal: res.data.bugComments\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    deleteBugComment(bugComment) {\r\n        API.deleteBugComment(bugComment)\r\n            .then(res => {\r\n                this.renderBugComments(this.state.bugData[this.state.currentBugIndex]);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n    // ****************** END OF DB METHODS*******************************************\r\n\r\n\r\n    //************************THESE METHODS ARE CALLED FROM BUTTONS WITHIN THE MODAL*********************\r\n    updateOrCreateBug = () => {\r\n        if(!this.state.bugTitleValid){\r\n            return;\r\n        }\r\n        if (this.state.isNewBug){\r\n            this.saveNewBugInDB();\r\n        } else {\r\n            console.log(\"I'm in the UPDATE OR CREATE BUG METHOD, below is the bug data\");\r\n            console.log(this.state.bugData);\r\n            console.log(\"here is the currentBugIndex: \" + this.state.currentBugIndex);\r\n            //UPDATE THE BUG DATA LOCALLY BEFORE PUSHING TO DB\r\n            this.state.bugData[this.state.currentBugIndex].bugTitle = this.state.bugTitleInModal;\r\n            this.state.bugData[this.state.currentBugIndex].bugDescription = this.state.bugDescriptionInModal;\r\n            this.state.bugData[this.state.currentBugIndex].userAssigned = this.state.bugUserAssignedInModal;\r\n            this.state.bugData[this.state.currentBugIndex].status = this.state.bugStatusInModal;\r\n\r\n            this.setState({selectedBug: this.state.bugData[this.state.currentBugIndex]});\r\n            this.updateBugInDB();\r\n        }\r\n    }\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, bugTitleInModal: \"\", bugDescriptionInModal: \"\", currentBugCommentInModal: \"\", formErrors: {bugTitle: \"\"} });\r\n        console.log(\"I'm in closemodal!! Below is the bug object\");\r\n        console.log(this.state.bugData[this.state.currentIndex]);\r\n        console.log(this.state.bugUserAssignedInModal);\r\n        console.log(this.state.bugStatusInModal);\r\n    }\r\n    //*********************** END OF MODAL BUTTON CLICK METHODS ****************************\r\n\r\n\r\n    // ******************** THESE METHODS ARE CALLED WHEN CREATE/EDIT BUTTONS ARE FIRST CLICKED ******************\r\n    editBugButton(bugClickedOn) {\r\n        console.log(\"Edit bug clicked on !!!\");\r\n        console.log(bugClickedOn);\r\n        this.adjustBugDataOrder()\r\n        this.setState({ showModal: true, \r\n            currentModalTitle: \"Edit Bug\",\r\n            currentBugIndex: bugClickedOn.id,\r\n            bugTitleInModal: bugClickedOn.bugTitle, \r\n            bugDescriptionInModal: bugClickedOn.bugDescription, \r\n            bugStatusInModal: bugClickedOn.status,\r\n            bugUserAssignedInModal: bugClickedOn.userAssigned,\r\n            isNewBug: false, \r\n            selectedBug: bugClickedOn });\r\n        this.renderBugComments(bugClickedOn);\r\n    }\r\n    deleteBugButton(bugClickedOn){ \r\n        console.log(\"Delete Bug Clicked on!!! \");\r\n        this.deleteBugInDB(bugClickedOn);\r\n    }\r\n\r\n    createNewBugButton = () => {\r\n        this.setState({ showModal: true, currentModalTitle: \"Create Bug\", isNewBug: true, bugTitleInModal: \"\", bugDescriptionInModal: \"\" });\r\n    }\r\n    // ******************** END OF INITIAL BUTTON CLICK METHODS ******************\r\n\r\n\r\n\r\n    //CALLS THIS WHEN THE COMPONENT MOUNTS, basically \"on page load\"\r\n    componentDidMount() {\r\n        console.log(\"Component Did Mount has been called\");\r\n        console.log(\"BELOW IS THE PASSED PROPS STATE\");\r\n        console.log(this.props.location.state);\r\n        this.setState({ organizationMongoID: this.props.location.state.organizationMongoID, organizationNameInTitle: this.props.location.state.organizationName }, () => {\r\n            this.getBugsFromDB();\r\n        });\r\n\r\n        \r\n    } \r\n\r\n    putAllBugsIntoFilteredArray() {\r\n        this.setState({filteredBugData: []});\r\n        this.state.bugData.map(bug => {\r\n            return this.state.filteredBugData.push(bug);\r\n        });\r\n    }\r\n    adjustBugDataOrder() {\r\n        //Update the current page's id of the bug for UI purposes\r\n        for (var i = 0; i < this.state.bugData.length; i++) {\r\n            this.state.bugData[i].id = i;\r\n        }\r\n        // for(var j=0; j<this.state.completedBugData.length; j++){\r\n        //     this.state.completedBugData[j].id = j;\r\n        // }\r\n    }\r\n\r\n    //If you click \"Show Completed Bugs\" or \"Hide Completed Bugs\", this will show or hide.\r\n    swapRenderCompletedBugs = () => {\r\n        if(this.state.showCompletedBugs){\r\n            this.setState({showCompletedBugs: false})\r\n        }else {\r\n            this.setState({ showCompletedBugs: true })\r\n        }\r\n        \r\n    }\r\n    //If you click \"Show Active Bugs\" or \"Hide Active Bugs\", this will show or hide.\r\n    swapRenderActiveBugs = () => {\r\n        if (this.state.showActiveBugs) {\r\n            this.setState({ showActiveBugs: false })\r\n        } else {\r\n            this.setState({ showActiveBugs: true })\r\n        }\r\n    }\r\n\r\n    completedCheck(bug){\r\n        console.log(\"YOU JUST CLICKED COMPLETED CHECK\");\r\n        console.log(bug);\r\n\r\n       if(bug.isCompleted){\r\n           bug.isCompleted = false;\r\n       }else {\r\n           bug.isCompleted = true;\r\n       }\r\n\r\n        this.setState({ selectedBug: bug }, () => {\r\n            //this.adjustBugDataOrder();\r\n            this.updateBugInDB();\r\n            //this.checkBothCompletedAndActiveBugData(this.state.bugData)\r\n            this.forceUpdate();\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        if (this.state.userFilter !== \"\" || this.state.statusFilter !== \"\"){\r\n            this.state.filteredBugData  = [];\r\n            this.state.bugData.map(bug => {\r\n                \r\n               var assigneeFilterIsActive = false;\r\n                var statusFilterIsActive = false;\r\n                //APPLY THE FILTERS\r\n            if (this.state.statusFilter === bug.status && this.state.statusFilter !== \"\")  {\r\n\r\n                statusFilterIsActive = true;\r\n            }          \r\n            if(this.state.userFilter === bug.userAssigned && this.state.userFilter !== \"\") {\r\n                assigneeFilterIsActive = true;\r\n            }\r\n            if (statusFilterIsActive && assigneeFilterIsActive && !bug.isCompleted){\r\n            return this.state.filteredBugData.push(bug);\r\n            } else if (statusFilterIsActive && this.state.userFilter === \"\" && !bug.isCompleted){\r\n                \r\n                return this.state.filteredBugData.push(bug);\r\n            }\r\n            else if (assigneeFilterIsActive && this.state.statusFilter === \"\" && !bug.isCompleted) {\r\n                return this.state.filteredBugData.push(bug);\r\n            }\r\n        });\r\n          } else {\r\n            this.state.filteredBugData = [];\r\n            this.state.bugData.map(bug => {\r\n                    if(!bug.isCompleted){\r\n                    return this.state.filteredBugData.push(bug);\r\n                    }\r\n\r\n            });\r\n\r\n          }\r\n\r\n\r\n\r\n\r\n          // NOW WE WILL DO THE SAME LOGIC FOR COMPLETED BUGS\r\n        if (this.state.userFilter !== \"\" || this.state.statusFilter !== \"\") {\r\n            this.state.filteredCompletedBugData = [];\r\n            this.state.bugData.map(bug => {\r\n\r\n                var assigneeFilterIsActive = false;\r\n                var statusFilterIsActive = false;\r\n                //APPLY THE FILTERS\r\n                if (this.state.statusFilter === bug.status && this.state.statusFilter !== \"\") {\r\n\r\n                    statusFilterIsActive = true;\r\n                }\r\n                if (this.state.userFilter === bug.userAssigned && this.state.userFilter !== \"\") {\r\n                    assigneeFilterIsActive = true;\r\n                }\r\n                if (statusFilterIsActive && assigneeFilterIsActive && bug.isCompleted) {\r\n                    return this.state.filteredCompletedBugData.push(bug);\r\n                } else if (statusFilterIsActive && this.state.userFilter === \"\" && bug.isCompleted) {\r\n\r\n                    return this.state.filteredCompletedBugData.push(bug);\r\n                }\r\n                else if (assigneeFilterIsActive && this.state.statusFilter === \"\" && bug.isCompleted) {\r\n                    return this.state.filteredCompletedBugData.push(bug);\r\n                }\r\n            });\r\n        } else {\r\n            this.state.filteredCompletedBugData = [];\r\n            this.state.bugData.map(bug => {\r\n                if(bug.isCompleted){\r\n                return this.state.filteredCompletedBugData.push(bug);\r\n                }\r\n\r\n            });\r\n\r\n        }\r\n        return (\r\n             <Container id=\"containerViewBugs\" fluid=\"true\">\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugtrackerTitle\" id=\"organizationNameInBugTitle\">{this.state.organizationNameInTitle}</h1>\r\n                                <h2 className=\"display-4 BugTrackerTitle\">View Bugs</h2>\r\n                            </Container>\r\n                        </div>\r\n                        <br />\r\n                        <br />\r\n                        <Row>\r\n                            <Col size=\"sm-1\">\r\n                                <p><strong>Assignee </strong> </p>\r\n                                <select value={this.state.userFilter} onChange={this.handleChange.bind(this)} id=\"userFilter\" name=\"userFilter\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tyler\">Tyler</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tawny\">Tawny</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Anthony\">Anthony</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Arthur\">Arthur</option>\r\n                                </select>\r\n                            </Col>\r\n                            <Col size=\"sm-1\">\r\n                                <p><strong>Status</strong></p>\r\n                                <select value={this.state.statusFilter} onChange={this.handleChange.bind(this)} id=\"statusFilter\" name=\"statusFilter\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Open\">Open</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"In Development\">In Development</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Needs Testing\">Needs Testing</option>\r\n                                </select>\r\n                            </Col>\r\n                            <Col size=\"sm-2\">\r\n                                <Link to=\"/profile\" className=\"log\" ><Button>View Profile</Button></Link>\r\n                            </Col>\r\n                            <Col size=\"sm-2\">\r\n                                <Button type=\"button\" className=\"btn btn-primary\" onClick={this.createNewBugButton}>Create New Bug</Button>\r\n                            </Col>\r\n                            <Col size=\"sm-2\">\r\n                                {this.state.showActiveBugs ?\r\n                                    <Button type=\"button\" className=\"btn btn-primary\" onClick={this.swapRenderActiveBugs.bind(this)}>Hide Active Bugs</Button>\r\n                                    :\r\n                                    <Button type=\"button\" className=\"btn btn-primary\" onClick={this.swapRenderActiveBugs.bind(this)}>Show Active Bugs</Button>\r\n                                }\r\n                                \r\n                            </Col>\r\n                            <Col size=\"sm-2\">\r\n                                \r\n                                {this.state.showCompletedBugs ?\r\n                                    <Button type=\"button\" className=\"btn btn-primary\" onClick={this.swapRenderCompletedBugs.bind(this)}>Hide Completed Bugs</Button>\r\n                                    :\r\n                                    <Button type=\"button\" className=\"btn btn-primary\" onClick={this.swapRenderCompletedBugs.bind(this)}>Show Completed Bugs</Button>\r\n                                }\r\n                            </Col>\r\n                                       \r\n                        </Row>\r\n\r\n                        {this.state.showActiveBugs ?                   \r\n                       <div>\r\n                                <h1 className=\"activeBugsTitle\">Active Bugs</h1>\r\n                                {this.state.bugData.length ? (\r\n                                    <table id=\"bugViewTable_Table\" className=\"table table-hover bugViewTable_Table\">\r\n                                        <thead id=\"bugViewTable_head\" className=\"thead-dark\">\r\n                                            <tr>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Complete</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Title</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">User Assigned</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Status</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\"></th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\"></th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.state.filteredBugData.map(bug => {\r\n                                                return (\r\n                                                        <tr className=\"bugViewTable_tr\" key={bug.mongoID}>\r\n                                                                    <td id=\"isCompletedColumn\" className=\"bugViewTable_td\">\r\n\r\n                                                                        <label className=\"isCompletedContainer\">\r\n                                                                            <input type=\"checkbox\" checked={bug.isCompleted} onClick={() => this.completedCheck(bug)}\r\n                                                                                value={bug.isCompleted} onChange={this.handleChange.bind(this)} name=\"bugIsCompleted\"\r\n                                                                            />\r\n                                                                            <span className=\"checkmark\"></span>\r\n                                                                        </label>\r\n                                                                    </td>\r\n                                                                    <td className=\"bugViewTable_td\">{bug.bugTitle}</td>\r\n                                                                    <td id=\"userAssignedColumn\" className=\"bugViewTable_td\">{bug.userAssigned}</td>\r\n                                                                    <td id=\"statusColumn\" className=\"bugViewTable_td\">{bug.status}</td>\r\n                                                                    <td id=\"editColumn\" className=\"bugViewTable_td\">\r\n                                                                        <Button variant=\"primary\" onClick={() => this.editBugButton(bug)}>\r\n                                                                            Edit\r\n                                                                        </Button>\r\n                                                                    </td>\r\n                                                                    <td id=\"deleteColumn\" className=\"bugViewTable_td\"> <Button variant=\"primary\" onClick={() => this.deleteBugButton(bug)}>Delete</Button></td>\r\n                                                        </tr>\r\n                                                    )\r\n                                     \r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n\r\n\r\n                                ) : (<h3 className=\"noResultsMessage\"> No Results to Display </h3>)} \r\n                       </div>\r\n                        \r\n                        \r\n                        \r\n                        : \r\n                        \r\n                        \r\n                        \"\"\r\n                    } \r\n                       \r\n\r\n                            {this.state.showCompletedBugs ? \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            <div>\r\n                                <hr />\r\n                                <h1 className=\"completedBugsTitle\">Completed Bugs</h1>\r\n                                {this.state.filteredCompletedBugData.length ? (\r\n                                    <div>\r\n                                    <table id=\"bugViewTable_Table\" className=\"table table-hover bugViewTable_Table\">\r\n                                        <thead id=\"bugViewTable_head\" className=\"thead-dark\">\r\n                                            <tr>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Complete</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Title</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">User Assigned</th>\r\n                                                <th className=\"bugViewTable_th\" scope=\"col\">Status</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {this.state.filteredCompletedBugData.map(bug => {\r\n                                                return (\r\n                                                        \r\n                                                        <tr className=\"bugViewTable_tr\" key={bug.mongoID}>\r\n                                                            <td id=\"isCompletedColumn\" className=\"bugViewTable_td\">\r\n\r\n                                                                <label className=\"isCompletedContainer\">\r\n                                                                    <input type=\"checkbox\" checked={bug.isCompleted} onClick={() => this.completedCheck(bug)}\r\n                                                                        value={bug.isCompleted} onChange={this.handleChange.bind(this)} name=\"bugIsCompleted\"\r\n                                                                    />\r\n                                                                    <span className=\"checkmark\"></span>\r\n                                                                </label>\r\n\r\n\r\n                                                            </td>\r\n                                                            <td className=\"bugViewTable_td\">{bug.bugTitle}</td>\r\n                                                            <td id=\"userAssignedColumn\" className=\"bugViewTable_td\">{bug.userAssigned}</td>\r\n                                                            <td id=\"statusColumn\" className=\"bugViewTable_td\">{bug.status}</td>\r\n                                                        </tr>\r\n                                         \r\n                                                )\r\n                                            })}\r\n                                        </tbody>\r\n                                    </table>\r\n                                    </div>\r\n\r\n                                ) : (<h3 className=\"noResultsMessage\"> No Results to Display </h3>)} \r\n\r\n\r\n                            </div>\r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            \r\n                            :\r\n                                                      \r\n                            \r\n                            \"\"}\r\n\r\n                                <br />\r\n                                    <br />\r\n                                \r\n                       \r\n                       \r\n                \r\n                        {/* This modal will pop up for editing bugs! */}\r\n                        <Modal show={this.state.showModal} animation={false}>\r\n                            <Modal.Header>\r\n                                <Button className='btn btn-danger note-delete xButton' id=\"bugModalXButton\" onClick={() => this.closeModal()}>X</Button>\r\n                                <Modal.Title>{this.state.currentModalTitle}</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n\r\n\r\n                                <Input label=\"Title\" onBlur={this.formatInput.bind(this)} isvalid={this.state.bugTitleValid.toString()} \r\n                                fielderror={this.state.formErrors.bugTitle} value={this.state.bugTitleInModal} \r\n                                formgroupclass={`form-group ${this.errorClass(this.state.formErrors.bugTitle)}`}\r\n                                id=\"bugTitleInModal\" onChange={this.handleChange.bind(this)} name=\"bugTitleInModal\" />\r\n                                <br />\r\n                                <label htmlFor=\"bugUserAssignedInModal\"><strong>Assignee</strong></label> <br />\r\n                                <select label=\"Assignee\" value={this.state.bugUserAssignedInModal} onChange={this.handleChange.bind(this)} id=\"bugUserAssignedInModal\" name=\"bugUserAssignedInModal\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tawny\">Tawny</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Anthony\">Anthony</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tyler\">Tyler</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Arthur\">Arthur</option>\r\n                                </select>\r\n                                <br />\r\n                                <br />\r\n                                <label htmlFor=\"bugStatusInModal\"><strong>Status</strong></label>  <br />\r\n                                <select label=\"Status\" value={this.state.bugStatusInModal} onChange={this.handleChange.bind(this)} id=\"bugStatusInModal\" name=\"bugStatusInModal\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Open\">Open</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"In Development\">In Development</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Needs Testing\">Needs Testing</option>\r\n                                </select>\r\n\r\n                                <br />\r\n\r\n                                <br />\r\n\r\n                                <TextArea label=\"Description\" onBlur={this.formatInput.bind(this)} value={this.state.bugDescriptionInModal} id=\"bugDescriptionInModal\" onChange={this.handleChange.bind(this)} name=\"bugDescriptionInModal\" />\r\n\r\n                                {/* BUG COMMENT SECTION */}\r\n\r\n                                {this.state.isNewBug ? \r\n\r\n                                    \"\": <div>\r\n\r\n                                        <hr />\r\n                                        {this.state.bugCommentsInModal.length ? (\r\n                                            <BugCommentContainer>\r\n                                                <div className=\"bugCommentContainer\">\r\n                                                    {this.state.bugCommentsInModal.map(bugComment => {\r\n                                                        let boundBugCommentClick = this.deleteBugComment.bind(this, bugComment);\r\n                                                        return (\r\n                                                            <BugCommentPanel key={bugComment._id} text={bugComment.text}>\r\n                                                                <div>\r\n                                                                    <button className='btn btn-danger bugComment-delete insideNote' onClick={boundBugCommentClick}> X </button>\r\n                                                                </div>\r\n\r\n                                                            </BugCommentPanel>\r\n                                                        );\r\n                                                    })}\r\n                                                </div>\r\n                                            </BugCommentContainer>\r\n                                        ) : (\r\n                                                <h3> There are no comments! </h3>\r\n                                            )}\r\n\r\n\r\n                                        <Input placeholder='Bug Comment'\r\n                                            id=\"currentBugCommentInModal\"\r\n                                            onBlur={this.formatInput.bind(this)}\r\n                                            value={this.state.currentBugCommentInModal}\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"currentBugCommentInModal\"\r\n                                        />\r\n                                        <Button className='btn btn-success save' onClick={() => this.addBugComment()}>Save Comment</Button>\r\n\r\n                                    </div>\r\n                                }\r\n\r\n                                {/* END OF BUG COMMENT SECTION */}\r\n\r\n\r\n\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"primary\" onClick={this.handleFormSubmit}>\r\n                                    Submit\r\n                              </Button> \r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n\r\n                                \r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BugViewPage;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./profile.css\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstName:\"\",\r\n            loggedIn: this.props.loggedIn,\r\n            redirectTo: null,\r\n            setPasswordFieldsActiveInModal: false,\r\n            setCreateOrganizationFieldsActiveInModal: false,\r\n            setJoinOrganizationFieldsActiveInModal: false,\r\n            setEditOrganizationFieldsActiveInModal: false,\r\n            setConfirmationBoxActiveInModal: false,\r\n            formErrors: { oldPassword: \"\", newPassword1and2:\"\", organizationName:\"\", organizationID:\"\" },\r\n            oldPassword: \"\",\r\n            newPassword1: \"\",\r\n            newPassword2: \"\",\r\n            organizationNameInModal: \"\",\r\n            organizationIDInModal: \"\",\r\n            organizationMongoIDInModal: \"\",\r\n            oldPasswordValid: true,\r\n            newPassword1And2Valid: false,\r\n            organizationNameValid: false,\r\n            organizationIDValid: false,\r\n            showModal: false,\r\n            formSubmitButtonText: \"Submit\",\r\n            successMessage: \"\",\r\n            serverErrorMessage:\"\",\r\n            currentModalTitle: \"\",\r\n            userData: [],\r\n            organizations: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n        console.log(\"Component mounted in Profile, below is MongoID\");\r\n        console.log(this.props.mongoID);\r\n        this.getOrganizationsOfUserInDB();\r\n        \r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    //Standard method for constantly updating input, since UI is constantly refreshing\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    validateFields() {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let newPassword1And2Valid = this.state.newPassword1And2Valid;\r\n        let organizationNameValid =  this.state.organizationNameValid;\r\n        let organizationIDValid = this.state.organizationIDValid;\r\n\r\n\r\n\r\n        console.log(\"newpassword1 is: \" + this.state.newPassword1);\r\n        console.log(\"newPassword2 is: \" + this.state.newPassword2);\r\n\r\n        //Validating between the new password field and \"confirm password\" field that they match and are greather than or equal to 6 characters\r\n        newPassword1And2Valid = (this.state.newPassword1 === this.state.newPassword2) && this.state.newPassword1.length >= 6;\r\n        fieldValidationErrors.newPassword1and2 = \"New password doesn't match or your password is less than 8 characters long.\";\r\n\r\n        //Validating that organization is greater than 3 characters\r\n        organizationNameValid = this.state.organizationNameInModal.length >= 3;\r\n        fieldValidationErrors.organizationName = \"Organization Name must have atleast three characters.\";\r\n\r\n        //Validating that organization ID is greater than 6 characters\r\n        organizationIDValid = this.state.organizationIDInModal.length >= 6;\r\n        fieldValidationErrors.organizationID = \"Organization ID must have atleast six characters.\";\r\n\r\n\r\n\r\n        console.log(\"organizationIDValid is: \" + organizationIDValid);\r\n        console.log(\"organizationNameValid: \" + organizationNameValid);\r\n        console.log(\"password1And2Valid: \" + newPassword1And2Valid);\r\n        //TODO --- HANDLE FORM VALIDATION\r\n\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            newPassword1And2Valid: newPassword1And2Valid,\r\n            organizationIDValid: organizationIDValid,\r\n            organizationNameValid: organizationNameValid\r\n        }, () => {\r\n                if (this.state.setJoinOrganizationFieldsActiveInModal) {\r\n                    //for JOIN organization\r\n                    if (organizationIDValid){\r\n                     this.attachUserToOrganizationInDB();\r\n                    }\r\n                } else if (this.state.setCreateOrganizationFieldsActiveInModal) {\r\n                    //For CREATE organization\r\n                    if(organizationNameValid && organizationIDValid){\r\n                        this.saveOrganizationInDB();\r\n                    }\r\n                } else if (this.state.setEditOrganizationFieldsActiveInModal) {\r\n                    //For UPDATE Organization\r\n                    if(organizationNameValid && organizationIDValid){\r\n\r\n                        this.updateOrganizationInDB();\r\n                    }\r\n                } else if (this.state.setPasswordFieldsActiveInModal) {\r\n                    //For UPDATE password\r\n                    if (newPassword1And2Valid){     \r\n                        this.updatePasswordInDB();\r\n                    }\r\n                }\r\n        });\r\n    }\r\n\r\n    \r\n    handleChangePasswordButtonClick = event => {\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Change Password\",\r\n            setPasswordFieldsActiveInModal: true\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    //************************THESE METHODS ARE CALLED FROM BUTTONS WITHIN THE MODAL*********************\r\n    updatePasswordInDB = () => {\r\n\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID\r\n        }\r\n        API.updateUserInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"UpdatePassword successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n                    this.setState({ successMessage: \"Successfully updated password.\"})\r\n                    this.closeModal();\r\n\r\n                } else {\r\n                    console.log(\"Updating USER PASSWORD WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                    this.setState({ serverErrorMessage: response.data.error, formErrors: { oldPassword: \"\", newPassword1and2: \"\", organizationName: \"\", organizationID: \"\", serverErrorMessage: \"\" }})\r\n                }\r\n            })\r\n        \r\n    }\r\n    closeModal = () => {\r\n        //Reset all the fields so they don't show up again when you try to open the modal again.\r\n        this.setState({ showModal: false, organizationIDValid: true,\r\n        organizationNameValid: true, oldPasswordValid: true, newPassword1Valid: true, newPassword2Valid: true,\r\n            organizationNameInModal: \"\", organizationIDInModal: \"\", oldPassword: \"\", newPassword: \"\", newPassword2: \"\", serverErrorMessage:\"\",\r\n            formErrors: { oldPassword: \"\", newPassword1and2: \"\", organizationName: \"\", organizationID: \"\", serverErrorMessage: \"\", formSubmitButtonText: \"Submit\" } });\r\n    }\r\n    //*********************** END OF MODAL BUTTON CLICK METHODS ****************************\r\n\r\n    //*************************METHODS BELOW RELATED TO ORGANIZATION BUTTON CLICKS ******************/\r\n    handleEditOrganizationButtonClick(organizationClickedOn) {\r\n        //event.preventDefault();\r\n\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Edit Organization\",\r\n            setCreateOrganizationFieldsActiveInModal: false,\r\n            setEditOrganizationFieldsActiveInModal: true,\r\n            setJoinOrganizationFieldsActiveInModal: false,\r\n            setPasswordFieldsActiveInModal: false,\r\n            setConfirmationBoxActiveInModal: false,\r\n            successMessage: \"\",\r\n            organizationMongoIDInModal: organizationClickedOn._id,\r\n            organizationNameInModal: organizationClickedOn.name,\r\n            organizationIDInModal: organizationClickedOn.organizationID\r\n        });\r\n    }\r\n\r\n    handleCreateOrganizationButtonClick = event => {\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Create Organization\",\r\n            setPasswordFieldsActiveInModal: false,\r\n            setCreateOrganizationFieldsActiveInModal: true,\r\n            setJoinOrganizationFieldsActiveInModal: false,\r\n            setConfirmationBoxActiveInModal: false,\r\n            successMessage: \"\",\r\n            organizationIDInModal: \"\",\r\n            organizationNameInModal: \"\"\r\n        });\r\n\r\n    }\r\n\r\n    handleJoinOrganizationButtonClick = event => {\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Join Organization\",\r\n            setPasswordFieldsActiveInModal: false,\r\n            setCreateOrganizationFieldsActiveInModal: false,\r\n            setConfirmationBoxActiveInModal: false,\r\n            successMessage: \"\",\r\n            setJoinOrganizationFieldsActiveInModal: true\r\n        })\r\n\r\n    }\r\n    handleDeleteOrLeaveButtonClick(organization) {\r\n        this.setState({ setConfirmationBoxActiveInModal: true, showModal: true, currentOrganization: organization,\r\n            currentModalTitle: \"\",\r\n            setPasswordFieldsActiveInModal: false,\r\n            setCreateOrganizationFieldsActiveInModal: false,\r\n            setJoinOrganizationFieldsActiveInModal: false,\r\n            formSubmitButtonText: \"Confirm\",\r\n            successMessage: \"\",\r\n            organizationIDInModal: \"\",\r\n            organizationNameInModal: \"\"    \r\n        });\r\n    }\r\n\r\n    //*** METHODS BELOW RELATED TO DB WITH ORGANIZATIONS */ */\r\n    saveOrganizationInDB() {\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID,\r\n            organizationName: this.state.organizationNameInModal,\r\n            organizationID: this.state.organizationIDInModal\r\n        }\r\n\r\n        API.saveOrganizationInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"SAVE ORGANIZATION successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n                    this.closeModal();\r\n                    this.getOrganizationsOfUserInDB();\r\n                    this.forceUpdate();\r\n\r\n                } else {\r\n                    console.log(\"SAVE ORGANIZATION WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                    //Now we set the error message in the modal.\r\n                    this.setState({serverErrorMessage: response.data.error})\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    getOrganizationsOfUserInDB() {\r\n\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID\r\n        }\r\n\r\n        API.getOrganizationsOfUserInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    //If we find no error, then we successful got the user's list of organizations. Update state with organizations.\r\n                    console.log(\"getOrganizationsOfUserInDB successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n\r\n                    this.setState({\r\n                        organizations: response.data.organizations,\r\n                    })\r\n\r\n                } else {\r\n                    console.log(\"getOrganizationsOfUserInDB WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    attachUserToOrganizationInDB() {\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID,\r\n            organizationID: this.state.organizationIDInModal\r\n        }\r\n        API.attachUserToOrganizationInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    //If we find no error, then we successful got the user's list of organizations. Update state with organizations.\r\n                    console.log(\"attachUserToOrganizationInDB successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n\r\n                    this.setState({\r\n                        organizations: response.data.organizations,\r\n                        successMessage: \"You successfully joined the organization!\"\r\n                    })\r\n                    this.closeModal();\r\n                    this.getOrganizationsOfUserInDB();\r\n                    this.forceUpdate();\r\n\r\n                } else {\r\n                    console.log(\"attachUserToOrganizationInDB WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                    //Now we set the error message in the modal.\r\n                    this.setState({ serverErrorMessage: response.data.error });\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleDeleteOrganizationInDB(organizationClickedOn) {\r\n        var isUserOrganizationOwner = false;\r\n        if (this.props.mongoID === organizationClickedOn.userWhoCreatedOrgMongoID){\r\n            isUserOrganizationOwner = true;\r\n        }\r\n        var organizationObj = {\r\n            organizationMongoID: organizationClickedOn._id,\r\n            userMongoID: this.props.mongoID,\r\n            organizationData: organizationClickedOn,\r\n            isUserOrganizationOwner: isUserOrganizationOwner\r\n\r\n        }\r\n        API.deleteOrganizationInDB(organizationObj)\r\n            .then(res => {\r\n                this.setState({currentOrganization: \"\"});\r\n                this.getOrganizationsOfUserInDB();\r\n                this.forceUpdate();\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    updateOrganizationInDB() {\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID,\r\n            organizationMongoID: this.state.organizationMongoIDInModal,\r\n            organizationName: this.state.organizationNameInModal,\r\n            organizationID: this.state.organizationIDInModal\r\n        }\r\n\r\n        API.updateOrganizationInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"SAVE ORGANIZATION successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n                    this.closeModal();\r\n                    this.getOrganizationsOfUserInDB();\r\n                    this.forceUpdate();\r\n\r\n                } else {\r\n                    console.log(\"SAVE ORGANIZATION WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleSubmitButtonInModalClick = () => {\r\n        if(this.state.setConfirmationBoxActiveInModal){\r\n            //In this case we are confirming to delete or leave an organization.\r\n            this.setState({setConfirmationBoxActiveInModal: false, showModal: false}, () => {\r\n                    this.handleDeleteOrganizationInDB(this.state.currentOrganization);\r\n            }\r\n            )\r\n        }else {\r\n            this.validateFields();\r\n        }\r\n    }\r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <Container id=\"containerViewBugs\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugTrackerTitle\">Welcome, {this.props.firstName}!</h1>\r\n                                <h2 className=\"display-4 BugTrackerTitle\" id=\"successMessage\">{this.state.successMessage}</h2>\r\n                            </Container>\r\n                        </div>\r\n                        <Button onClick={this.handleChangePasswordButtonClick.bind(this)}>Change Password</Button>\r\n                        <Button onClick={this.handleCreateOrganizationButtonClick.bind(this)}>Create Organization</Button>\r\n                        <Button onClick={this.handleJoinOrganizationButtonClick.bind(this)}>Join Organization</Button>\r\n                        <br />\r\n                        <br />\r\n                        {this.state.organizations.length > 0 ? (\r\n                            <table id=\"organizationTable_Table\" className=\"table table-hover bugViewTable_Table\">\r\n                                <thead id=\"organizationTable_head\" className=\"thead-dark\">\r\n                                    <tr>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\">Name</th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\">Organization ID</th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\"></th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\"></th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\"></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.organizations.map(organization => {\r\n                                        return (\r\n                                            <tr className=\"organizationTable_tr\" key={organization._id}>\r\n                                                <td className=\"organizationTable_td\">{organization.name}</td>\r\n                                                <td className=\"organizationTable_td\">{organization.organizationID}</td>\r\n                                                <td className=\"organizationTable_td\">\r\n                                                    \r\n                                                    \r\n                                                    <Link to={{pathname: \"/bug-view\", state: {organizationMongoID: organization._id, organizationName: organization.name}}} className=\"log\" ><Button>View Bugs</Button></Link>\r\n                                                    </td>\r\n                                                <td id=\"editColumn\" className=\"organizationTable_td\">\r\n                                                    {this.props.mongoID === organization.userWhoCreatedOrgMongoID ?\r\n                                                        <Button variant=\"primary\" onClick={() => this.handleEditOrganizationButtonClick(organization)}>\r\n                                                            Edit\r\n                                                        </Button> : \"\"\r\n\r\n                                                    }\r\n                                                </td>\r\n                                                <td id=\"deleteColumn\" className=\"organizationTable_td\">\r\n                                                    {this.props.mongoID === organization.userWhoCreatedOrgMongoID ?\r\n\r\n                                                        < Button variant=\"primary\" onClick={() => this.handleDeleteOrLeaveButtonClick(organization)}>Delete</Button> \r\n                                                        : \r\n                                                        <Button variant=\"primary\" onClick={() => this.handleDeleteOrLeaveButtonClick(organization)}>Leave</Button> \r\n                                                    }\r\n                                                     </td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n\r\n\r\n                        ) : (<h3 id=\"noResultsHeader\"> No Results to Display </h3>)}\r\n                        <br />\r\n                        <br />\r\n\r\n                        {/* This modal will pop up for changing password! */}\r\n                        <Modal show={this.state.showModal} animation={false}>\r\n                            <Modal.Header>\r\n                                <Modal.Title>{this.state.currentModalTitle}</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n\r\n                                {this.state.setConfirmationBoxActiveInModal ?\r\n                                    <h1 id=\"confirmationHeader\">Are you sure?</h1>   \r\n                                :\r\n                                    <div>\r\n                                        {this.state.setPasswordFieldsActiveInModal ?\r\n                                            <div>\r\n                                                <Input type=\"password\" label=\"Old Password\" onBlur={this.formatInput.bind(this)}\r\n                                                    isvalid={this.state.oldPasswordValid.toString()}\r\n                                                    fielderror={this.state.formErrors.oldPassword}\r\n                                                    formgroupclass={`form-group ${this.errorClass(this.state.formErrors.oldPassword)}`}\r\n                                                    value={this.state.oldPassword}\r\n                                                    id=\"oldPassword\"\r\n                                                    onChange={this.handleChange.bind(this)}\r\n                                                    name=\"oldPassword\"></Input>\r\n\r\n                                                <Input type=\"password\" label=\"New Password\" onBlur={this.formatInput.bind(this)}\r\n                                                    isvalid={this.state.newPassword1And2Valid.toString()}\r\n                                                    fielderror={this.state.formErrors.newPassword1and2}\r\n                                                    formgroupclass={`form-group ${this.errorClass(this.state.formErrors.newPassword1and2)}`}\r\n                                                    value={this.state.newPassword1and2}\r\n                                                    id=\"newPassword1\" onChange={this.handleChange.bind(this)}\r\n                                                    name=\"newPassword1\"></Input>\r\n\r\n                                                <Input type=\"password\" label=\"Confirm New Password\" onBlur={this.formatInput.bind(this)} isvalid={this.state.newPassword1And2Valid.toString()}\r\n                                                    fielderror={this.state.formErrors.newPassword1and2}\r\n                                                    formgroupclass={`form-group ${this.errorClass(this.state.formErrors.newPassword1and2)}`}\r\n                                                    value={this.state.newPassword2}\r\n                                                    id=\"newPassword2\"\r\n                                                    onChange={this.handleChange.bind(this)}\r\n                                                    name=\"newPassword2\"></Input>\r\n\r\n                                            </div>\r\n                                            :\r\n                                            <div>\r\n                                                {this.state.setJoinOrganizationFieldsActiveInModal ?\r\n                                                    <div>\r\n                                                        <Input label=\"Please enter the Organization ID of the organization you wish to join:\" onBlur={this.formatInput.bind(this)}\r\n                                                            isvalid={this.state.organizationIDValid.toString()}\r\n                                                            fielderror={this.state.formErrors.organizationID}\r\n                                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.organizationID)}`}\r\n                                                            value={this.state.organizationIDInModal}\r\n                                                            id=\"organizationIDInModal\" onChange={this.handleChange.bind(this)}\r\n                                                            name=\"organizationIDInModal\"></Input>\r\n\r\n                                                    </div>\r\n                                                    :\r\n                                                    <div>\r\n                                                        <Input label=\"Organization Name\" onBlur={this.formatInput.bind(this)}\r\n                                                            isvalid={this.state.organizationNameValid.toString()}\r\n                                                            fielderror={this.state.formErrors.organizationName}\r\n                                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.organizationName)}`}\r\n                                                            value={this.state.organizationNameInModal}\r\n                                                            id=\"organizationNameInModal\"\r\n                                                            onChange={this.handleChange.bind(this)}\r\n                                                            name=\"organizationNameInModal\"></Input>\r\n\r\n                                                        <Input label=\"Organization ID (Use this number to invite people)\" onBlur={this.formatInput.bind(this)}\r\n                                                            isvalid={this.state.organizationIDValid.toString()}\r\n                                                            fielderror={this.state.formErrors.organizationID}\r\n                                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.organizationID)}`}\r\n                                                            value={this.state.organizationIDInModal}\r\n                                                            id=\"organizationIDInModal\" onChange={this.handleChange.bind(this)}\r\n                                                            name=\"organizationIDInModal\"></Input>\r\n                                                    </div>\r\n\r\n                                                }\r\n\r\n                                            </div>\r\n\r\n                                        }\r\n\r\n                                    </div>\r\n                                }\r\n                        \r\n                                <span className=\"help-block serverErrorMessage\">{this.state.serverErrorMessage}</span>\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                                    Cancel\r\n                                  </Button>\r\n                                <Button variant=\"primary\" onClick={this.handleSubmitButtonInModalClick.bind(this)}>\r\n                                {this.state.formSubmitButtonText}\r\n                                </Button>\r\n\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n\r\n    \r\n}\r\n}\r\n\r\n// export default Profile;\r\nexport default withRouter(Profile);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport LandingPage from \"./pages/landing-page\";\nimport BugView from \"./pages/bug-view\";\nimport Profile from \"./pages/profile\";\nimport API from \"./utils/API\";\nimport { withRouter } from 'react-router';\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      loggedIn: false,\n      user: null,\n      firstName: null,\n      lastName: null,\n      mongoID: null,\n      password: null,\n      redirectTo: null,\n      serverErrorMessage: \"\"\n    }\n    this._login = this._login.bind(this)\n  }\n  componentDidMount() {\n    API.user().then(response => {\n      if (!!response.data.user) {\n        console.log(\"Attempt to login on App.js from componentDidMount\");\n        console.log(response.data);\n        this.setState({\n          loggedIn: true,\n          user: response.data.user,\n          userId: response.data.user._id,\n        });\n        console.log(\"login passed!! User is not authenticated. (App.js - componentDidMount)\");\n      } else {\n        console.log(\"Login failed!!! User is not authenticated. (App.js - componentDidMount)\");\n        this.setState({\n          loggedIn: false,\n          // redirectTo: \"/landing-page\",\n          user: null\n        })\n      }\n    })\n  }\n\n  _login(username, password) {\n    console.log(\"I called _login from App.js\");\n    var userData = {\n      username: username,\n      password: password,\n    }\n    API\n      .login(userData)\n      .then(response => {\n        console.log(\"attempt to login from app.js _login\");\n        console.log(response);\n        if (response.status === 200) {\n          console.log(\"ATTEMPTING TO CONSOLE LOG EMAIL IN _LOGIN IN App.js\");\n          console.log(response.data);\n            if(response.data.loggedInSuccess){\n\n            \n          //var data = JSON.parse(response.data);\n         // console.log(response);\n         console.log(\"_login from App.js is SUCCESSFUL, below is the response data\");\n         console.log(response.data);\n          // update the state\n          this.setState({\n            loggedIn: true,\n            username: response.data.username,\n            mongoID: response.data.mongoID,\n            firstName: response.data.firstName,\n            lastName: response.data.lastName,\n            password: response.data.password,\n            redirectTo: \"/profile\"\n          })\n          //this.props.history.push(\"/profile\");\n\n\n        }else {\n            console.log(\"logged in FAILED!!!\");\n            console.log(response);\n              this.setState({\n                loggedIn: false,\n                serverErrorMessage: response.data.error\n              }, () => {\n                  this.forceUpdate();\n              })\n\n        }\n        }\n      })\n  }\n\n    render() {\n      //IF USER IS AUTHENTICATED RENDER THIS\n      if (this.state.loggedIn) {\n        console.log(\"redirectTO has been called!!!\");\n        console.log(this.state.redirectTo);\n        return(\n\n            <div className=\"App\">\n              <div>\n\n        <Redirect exact to={{ pathname: this.state.redirectTo }} render={() =>\n          <LandingPage\n            _login={this._login}\n            serverErrorMessage={this.state.serverErrorMessage}\n          />}/> \n\n          \n          <Route exact path=\"/landing-page\"\n            render={() =>\n              <LandingPage\n                _login={this._login}\n                serverErrorMessage={this.state.serverErrorMessage}\n              />} />\n          <Route exact path=\"/bug-view\" component={BugView} />\n              <Route exact path=\"/profile\" render={() => <Profile loggedIn={this.state.loggedIn} username={this.state.username} mongoID={this.state.mongoID} firstName={this.state.firstName}/>} />\n\n          <Route exact path=\"/\" render={() => (\n            <Redirect to=\"/landing-page\" />\n          )} />\n\n          </div>\n          </div>\n\n        )\n      }\n\n\n      //IF USER IS NOT AUTHENTICATED, RENDER JUST THE LANDING PAGE\n      return (\n        <div className=\"App\">\n       <div>\n            <Route exact path=\"/landing-page\" \n                  render={() =>\n                    <LandingPage\n                      _login={this._login}\n                      serverErrorMessage={this.state.serverErrorMessage}\n                    />} />\n\n                <Route exact path=\"/\" render={() => (\n                  <Redirect to=\"/landing-page\" />\n                )} />\n\n            <Redirect from=\"*\" to=\"/landing-page\" />\n  \n             </div>\n       </div>\n      )      \n    }\n\n  }\nexport default App;\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from 'react-router-dom'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nReactDOM.render(\n    // <App /> \n   \n <BrowserRouter> \n\n\n    \n    <Switch>\n    <Route component={App} />\n\n                </Switch>\n \n </BrowserRouter>\n\n  , document.getElementById(\"root\"));\n\n"],"sourceRoot":""}