{"version":3,"sources":["components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/Form/Input.js","components/Form/Button.js","components/Form/TextArea.js","utils/API.js","pages/landing-page/landing-page.js","pages/bug-view/bug-view.js","pages/create-bug/create-bug.js","pages/profile/profile.js","App.js","index.js"],"names":["Col","props","className","size","split","map","join","children","Container","id","fluid","Row","Input","formgroupclass","isvalid","fielderror","Button","TextArea","htmlFor","label","rows","console","log","axios","get","userObj","post","userData","bugData","LandingPage","formatInput","event","attribute","target","getAttribute","setState","value","trim","handleFormSubmit","preventDefault","state","emailAddress","loginButtonClicked","_login","password","saveUser","handleLoginButtonClick","loginOrCreateAccountButtonClicked","handleCreateAccountButtonClick","createAccount","firstName","lastName","phoneNumber","guestCount","formErrors","redirectTo","firstNameValid","lastNameValid","passwordValid","emailAddressValid","phoneNumberValid","guestCountValid","e","this","fieldValidationErrors","match","length","setCookieAndChangePage","error","obj","numbers","replace","substring","char","0","3","6","i","userId","username","email","user_email","user_address","address","user_city","city","user_state","user_zip","zip","API","then","response","data","errorResponse","cookies","Cookies","charAt","toUpperCase","slice","set","path","history","push","to","pathname","onBlur","bind","toString","errorClass","onChange","handleChange","name","onClick","Component","withRouter","BugViewPage","delta","count","validateFields","saveNewBugInDB","bugObj","mongoID","currentBugIndex","bugTitle","bugTitleInModal","bugDescription","bugDescriptionInModal","doc","_id","showModal","forceUpdate","updateBugInDB","selectedBug","updateOrCreateBug","isNewBug","closeModal","createNewBugButton","currentModalTitle","isLogin","showModal2","sampleBugViewTableData","bugs","catch","err","bugClickedOn","deletedCount","index","indexOf","splice","deleteBugInDB","getBugsFromDB","scope","bug","key","variant","editBugButton","deleteBugButton","type","Modal","show","animation","Header","Title","Body","Footer","BugTitle","BugDescription","Profile","handleChangePasswordButtonClick","changePasswordFieldsActive","handleUpdatePassword","oldPassword","newPassword","newPassword1","loggedIn","newPassword1and2","newPassword2","oldPasswordValid","newPassword1and2Valid","newPassword1Valid","App","user","status","loggedInSuccess","exact","render","component","BugView","CreateBug","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.93971cc8.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Col = props =>\n  <div className={props.size.split(\" \").map(size => \"col-\" + size).join(\" \")} {...props}>\n    {props.children}\n  </div>;\n","import React from \"react\";\n\nexport const Container = props =>\n  <div id={props.id} className={`container${props.fluid === \"true\"  ? \"-fluid\" : \"\"}`} {...props}>\n    {props.children}\n  </div>;\n","import React from \"react\";\n//({ fluid, children, props })\nexport const Row = props =>\n  <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props}> \n    {props.children}\n  </div>;\n","import React from \"react\";\n\nexport const Input = props =>\n  <div className={props.formgroupclass}>\n\n    <input className=\"form-control\" {...props} />\n    {props.isvalid === \"true\" ? \"\" : <span className=\"help-block\">{props.fielderror}</span>}\n  </div>;\n","import React from \"react\";\n\nexport const Button = props =>\n  <button {...props} className=\"btn btn-pill btn-light btn-lg\">\n    {props.children}\n  </button>;\n","import React from \"react\";\r\n\r\nexport const TextArea = props =>\r\n    <div className={props.formgroupclass}>\r\n        <label htmlFor=\"bugDescriptionField\">{props.label}</label>\r\n        <textarea className=\"form-control\" id=\"bugDescriptionField\" rows=\"5\" {...props}></textarea>\r\n        {props.isvalid === \"true\" ? \"\" : <span className=\"help-block\">{props.fielderror}</span>}\r\n    </div>;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n    user: function () {\r\n        console.log(\"i'm in API.js file, calling user\");\r\n        return axios.get(\"/api/user\");\r\n    },\r\n    updateUserInDB(userObj){\r\n        return axios.post(\"/api/user/updateUser\", userObj);\r\n    },\r\n    login: function (userData) {\r\n        console.log(\"LoginAPI\")\r\n        console.log(userData);\r\n        // return axios.get(\"/api/user/login\");\r\n        return axios.post(\"/api/user/login\", userData)\r\n    },\r\n    saveUser: function (userData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/user/saveUser\", userData);\r\n    },\r\n    saveBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/saveBug\", bugData);\r\n    },\r\n    updateBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/updateBug\", bugData);\r\n    },\r\n    deleteBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/deleteBug\", bugData);\r\n    },\r\n    getAllBugs: function() {\r\n        //TODO - Set up organization ID query\r\n        //Query db to get all bugs\r\n        return axios.get(\"/api/bug/getAllBugs\")\r\n    }\r\n\r\n};","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { Input, Button } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { withRouter } from 'react-router';\r\n\r\nimport \"./landing-page.css\";\r\nclass LandingPage extends Component {\r\n    constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        emailAddress: \"\",\r\n        password: \"\",\r\n        phoneNumber: \"\",\r\n        guestCount: \"\",\r\n        formErrors: {firstName: \"\", lastName: \"\", emailAddress:\"\", phoneNumber:\"\", guestCount:\"\", password:\"\"},\r\n          redirectTo: null,\r\n        firstNameValid: false,\r\n        lastNameValid: false,\r\n        passwordValid: false,\r\n        emailAddressValid: false,\r\n        phoneNumberValid: false,\r\n        guestCountValid: false,\r\n        loginOrCreateAccountButtonClicked: false,\r\n        loginButtonClicked: true\r\n\r\n    };\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    } \r\n\r\n    validateFields() {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let emailAddressValid = this.state.emailAddressValid;\r\n        let firstNameValid = this.state.firstNameValid;\r\n        let lastNameValid = this.state.lastNameValid;\r\n        let phoneNumberValid = this.state.phoneNumberValid;\r\n        let guestCountValid = this.state.guestCountValid;\r\n        let passwordValid = this.state.passwordValid;\r\n\r\n        //Validating email using Regex\r\n        let matchArray = this.state.emailAddress.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n        if(matchArray !== null) {\r\n            emailAddressValid = true;\r\n        }\r\n        fieldValidationErrors.emailAddress = emailAddressValid ? \"\" : \"Please provide a valid email\";\r\n\r\n        //Validating First Name by checking if there is anything there.\r\n        firstNameValid = this.state.firstName.length >0;\r\n        fieldValidationErrors.firstName = firstNameValid ? \"\": \"Please provide your first name\";\r\n\r\n        //Validating Last Name by checking if there is anything there.\r\n        lastNameValid = this.state.lastName.length > 0;\r\n        fieldValidationErrors.lastName = lastNameValid ? \"\":\"Please provide your last name\";\r\n\r\n        //Validating phone number by checking if there are 16 digits. (counting the special characters besides the digits.)\r\n        phoneNumberValid = this.state.phoneNumber.length===16;\r\n        fieldValidationErrors.phoneNumber = phoneNumberValid ? \"\":\"Please provide a phone number\";\r\n\r\n        //validating password\r\n        passwordValid = this.state.password.length === 2;\r\n        fieldValidationErrors.password = passwordValid ? \"\" : \"Please provide a password\";\r\n\r\n        //Validate guest count by checking if user made a selection.\r\n        guestCountValid = true;\r\n        if(this.state.guestCount === \"\" || this.state.guestCount===\"Select\"){\r\n            guestCountValid = false;\r\n        }\r\n        fieldValidationErrors.guestCount = guestCountValid ? \"\": \"Please provide guest count\";\r\n\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            emailAddressValid: emailAddressValid,\r\n            firstNameValid: firstNameValid,\r\n            lastNameValid: lastNameValid,\r\n            phoneNumberValid: phoneNumberValid,\r\n            guestCountValid: guestCountValid,\r\n            passwordValid: passwordValid\r\n        }, () => {\r\n            this.setCookieAndChangePage();\r\n        });    \r\n    }\r\n\r\n    //Here we check if the field has an error. If it does, it will add the \"has-error\" class to the field.\r\n    //\"has-error\" is a default bootstrap class that will nicely color the outline of the field red to indicate an error for the user. \r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    formatPhone(obj) {\r\n        if(obj == null){\r\n            return;\r\n        }\r\n        var numbers = obj.state.phoneNumber.replace(/\\D/g, \"\").substring(0,10),\r\n            char = { 0: \"(\", 3: \") \", 6: \" - \" };\r\n        obj.state.phoneNumber = \"\";\r\n        for (var i = 0; i < numbers.length; i++) { \r\n            obj.state.phoneNumber += (char[i] || \"\") + numbers[i];    \r\n        }\r\n    }\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();    \r\n        //this.validateFields();\r\n        console.log(\"I'm in handle form submit\");\r\n        console.log(this.state.emailAddress);\r\n\r\n        if(this.state.loginButtonClicked){\r\n            //If the login button is clicked then we want submit LOGIN request, which is different than Create Account request\r\n            this.props._login(this.state.emailAddress, this.state.password)\r\n        } else {\r\n            //If Create Account button was clicked, then we want to post the user to the database.\r\n            this.saveUser();\r\n        }\r\n  \r\n    };\r\n\r\n    //LOGIN / CREATE ACCOUNT BUTTONS - Just to set it up so before I actually submit data to DB\r\n    handleLoginButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: true, loginButtonClicked: true})\r\n\r\n    }\r\n    handleCreateAccountButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: true, loginButtonClicked: false })\r\n\r\n    }\r\n\r\n    createAccount = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginButtonClicked: false});\r\n\r\n    };\r\n\r\n\r\n    saveUser() {\r\n        console.log(\"HELLO?!?!!?!\");\r\n        console.log(this.state.passwordValid + \" passwordvalid?\");\r\n        // if (this.state.passwordValid && this.state.firstNameValid && this.state.lastNameValid) {\r\n\r\n            console.log(\"Called saveUser() from LandingPage  .... BELOW IS THE STATE\");\r\n            console.log(this.state);\r\n            let userObj = {\r\n                userId: null,\r\n                username: this.state.emailAddress,\r\n                password: this.state.password,\r\n                email: this.state.emailAddress,\r\n                user_email: this.state.email,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                user_address: this.state.address,\r\n                user_city: this.state.city,\r\n                user_state: this.state.state,\r\n                user_zip: this.state.zip\r\n            }\r\n            API.saveUser(userObj)\r\n                .then(response => {\r\n\r\n\r\n\r\n                    if (!response.data.error) {\r\n                        //userObj.userId = response.data.doc._id;\r\n\r\n\r\n                        //Now that the user account is created, let's automatically login the user in\r\n                         this.props._login(this.state.emailAddress, this.state.password, userObj);\r\n                        // this.setState({\r\n                        //     redirectTo: '/profile'\r\n                        // })\r\n                        console.log(\"I WAS SUCCESSFUL FROM LANDING PAGE\");\r\n                    } else {\r\n                        this.setState({ errorResponse: response })\r\n                    }\r\n                })\r\n\r\n        // }\r\n    }\r\n    setCookieAndChangePage() {\r\n\r\n        //This function will be called once all fields are validated. If any are not valid, the binary \"valid\" variable will be false.\r\n        if (this.state.firstNameValid && this.state.lastNameValid && this.state.emailAddressValid && this.state.phoneNumberValid && this.state.guestCountValid) {\r\n\r\n            const cookies = new Cookies();\r\n\r\n            var userObj = {\r\n                \"firstName\": this.state.firstName.charAt(0).toUpperCase() + this.state.firstName.slice(1),\r\n                \"lastName\": this.state.lastName.charAt(0).toUpperCase() + this.state.lastName.slice(1),\r\n                \"emailAddress\": this.state.emailAddress,\r\n                \"phoneNumber\": this.state.phoneNumber,\r\n                \"guestCount\": this.state.guestCount\r\n            }\r\n\r\n            cookies.set(\"demo-requested\", userObj, { path: \"/\" });\r\n            this.props.history.push(\"/thank-you\");\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"component has mounted\");\r\n        console.log(this);\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    render() {\r\n\r\n        if (this.props.redirectTo) {\r\n            console.log(\"THIS . PROPS. REDIRECT EXISTS IN LANDING PAGE!!!\");\r\n            console.log(this.props.redirectTo);\r\n            return <Redirect to={{ pathname: this.props.redirectTo }} />\r\n        } else {\r\n        return (\r\n            <Container id=\"container\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n\r\n                    <hr id=\"hline\"></hr>\r\n                    <Col id=\"formCol\" size=\"sm-6\">\r\n                        <h1>BugSlayer</h1>\r\n                        {this.state.loginOrCreateAccountButtonClicked ?\r\n                            <div>\r\n                                {this.state.loginButtonClicked ?\r\n                                    <h1 id=\"formHeader\">Login</h1>\r\n                                    :\r\n                                    <h1 id=\"formHeader\">Create Account</h1>\r\n\r\n                                }\r\n                                <form>\r\n\r\n                                    {this.state.loginButtonClicked ?\r\n\r\n                                        \"\"\r\n                                        :\r\n\r\n                                        <div>\r\n                                            <p>First Name</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.firstNameValid.toString()} fielderror={this.state.formErrors.firstName} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.firstName)}`} value={this.state.firstName} id=\"firstName\" onChange={this.handleChange.bind(this)} name=\"firstName\"></Input>\r\n\r\n\r\n                                            <p>Last Name</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.lastNameValid.toString()} fielderror={this.state.formErrors.lastName} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.lastName)}`} value={this.state.lastName} id=\"lastName\" onChange={this.handleChange.bind(this)} name=\"lastName\"></Input>\r\n\r\n                                        </div>\r\n\r\n                                    }\r\n\r\n                                    <p>Email Address</p>\r\n                                    <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.emailAddressValid.toString()} fielderror={this.state.formErrors.emailAddress} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.emailAddress)}`} value={this.state.emailAddress} id=\"emailAddress\" onChange={this.handleChange.bind(this)} name=\"emailAddress\"></Input>\r\n\r\n                                    <p>Password</p>\r\n                                    <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.passwordValid.toString()} fielderror={this.state.formErrors.password} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.password)}`} value={this.state.password} id=\"password\" onChange={this.handleChange.bind(this)} name=\"password\"></Input>\r\n\r\n                                    <Button onClick={this.handleFormSubmit.bind(this)}> Submit </Button>\r\n\r\n                                    {this.state.loginButtonClicked ?\r\n                                        <h3 id=\"formFooterLink\" onClick={this.handleCreateAccountButtonClick.bind(this)}>Create Account instead?</h3>\r\n                                        :\r\n                                        <h3 id=\"formFooterLink\" onClick={this.handleLoginButtonClick.bind(this)}>Login instead?</h3>\r\n\r\n                                    }\r\n                                </form>\r\n                            </div>\r\n                            : \r\n                            <div>\r\n                                <Button onClick={this.handleLoginButtonClick.bind(this)}> Login </Button>\r\n                                <Button onClick={this.handleCreateAccountButtonClick.bind(this)}> Create Account </Button>\r\n                            </div>\r\n                       \r\n\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n\r\n                }\r\n    \r\n            }\r\n}\r\n\r\n// export default LandingPage;\r\nexport default withRouter(LandingPage)\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./bug-view.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass BugViewPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            emailAddress: \"\",\r\n            password: \"\",\r\n            phoneNumber: \"\",\r\n            guestCount: \"\",\r\n            formErrors: { firstName: \"\", lastName: \"\", emailAddress: \"\", phoneNumber: \"\", guestCount: \"\", password: \"\" },\r\n            firstNameValid: false,\r\n            lastNameValid: false,\r\n            passwordValid: false,\r\n            emailAddressValid: false,\r\n            phoneNumberValid: false,\r\n            guestCountValid: false,\r\n            isLogin: true,\r\n            isNewBug: false,\r\n            selectedBug: \"\",\r\n            currentModalTitle: \"Edit Bug\",\r\n            currentBugIndex: 0,\r\n            showModal: false,\r\n            showModal2: false,\r\n            sampleBugViewTableData: [{ id: \"1\", bugTitle: \"Title A\", bugDescription: \"Test A\" }, { id: \"2\", bugTitle: \"Title B\", bugDescription: \"Test B\" }, { id: \"3\", bugTitle: \"Title C\", bugDescription: \"Test C\"}],\r\n            bugData: [],\r\n            bugTitleInModal: \"\",\r\n            bugDescriptionInModal: \"\",\r\n        };\r\n\r\n    }\r\n\r\n    delta = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        });\r\n    }\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    validateFields() {\r\n\r\n    }\r\n\r\n    //Here we check if the field has an error. If it does, it will add the \"has-error\" class to the field.\r\n    //\"has-error\" is a default bootstrap class that will nicely color the outline of the field red to indicate an error for the user. \r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.validateFields();\r\n    };\r\n\r\n\r\n    //************************** DB METHODS ************** THESE METHODS SAVE, EDIT, GET BUGS FROM DB *******************************************\r\n    saveNewBugInDB = () => {\r\n\r\n        let bugObj = {\r\n            id: this.state.bugData.length,\r\n            mongoID: this.state.bugData.length,\r\n            currentBugIndex: this.state.bugData.length,\r\n            bugTitle: this.state.bugTitleInModal,\r\n            bugDescription: this.state.bugDescriptionInModal\r\n        }\r\n        API.saveBug(bugObj)\r\n            .then(response => {\r\n\r\n\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"I WAS SUCCESSFUL Saving Bug FROM Bug View PAGE\");\r\n\r\n                    //Grabbing new ID from DB\r\n                    bugObj.mongoID = response.data.doc._id;\r\n\r\n                    console.log(bugObj);\r\n\r\n\r\n                    this.setState({ showModal: false });\r\n                    this.state.bugData.push(bugObj);\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n\r\n    updateBugInDB = () => {\r\n        API.updateBug(this.state.selectedBug)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"I WAS SUCCESSFUL Saving Bug FROM Bug View PAGE\");\r\n\r\n                    this.setState({ showModal: false });\r\n                    this.state.bugData[this.state.currentBugIndex] = this.state.selectedBug;\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n    getBugsFromDB() {\r\n        API.getAllBugs()\r\n            .then(response => {\r\n                if (!response.data.error) {\r\n                    console.log(\"SUCCESSFULLY GOT BUGS FROM DB\");\r\n                    var bugs = [];\r\n                    //Loop through bug data received from the server.\r\n                    for (var i = 0; i < response.data.length; i++) {\r\n                        console.log(\"bug \" + i);\r\n                        bugs.push({\r\n                            mongoID: response.data[this.state.currentBugIndex]._id,\r\n                            id: this.state.currentBugIndex,\r\n                            bugTitle: response.data[this.state.currentBugIndex].bugTitle,\r\n                            bugDescription: response.data[this.state.currentBugIndex].bugDescription\r\n                        })\r\n                        this.setState({ currentBugIndex: this.state.currentBugIndex + 1 });\r\n                        console.log(bugs);\r\n                    }\r\n                    this.setState({ bugData: bugs });\r\n                    console.log(\"IF IM HEre THEN THE DATA JUST UPDATED!!!!\");\r\n                    this.forceUpdate();\r\n                    console.log(\"Here is bug data!\");\r\n                    console.log(bugs);\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            }).catch(err => console.log(err));\r\n\r\n            console.log(\"I am here\");\r\n    }\r\n\r\n    deleteBugInDB(bugClickedOn) {\r\n        console.log(\"I'm in delete bug in DB method. Here is the bug that was clicked on\");\r\n        console.log(bugClickedOn);\r\n        API.deleteBug(bugClickedOn)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"I WAS SUCCESSFUL DELETING THE Bug FROM Bug View PAGE. Here is the response.\");\r\n                    console.log(response);\r\n\r\n                     if(response.data.deletedCount > 0){\r\n                         //Removing the bug from the UI\r\n                         const index = this.state.bugData.indexOf(bugClickedOn);\r\n                         if (index > -1) {\r\n                             this.state.bugData.splice(index, 1);\r\n                         }\r\n                     } else {\r\n                         console.log(\"Deleting the bug failed for some reason!\");\r\n                     }\r\n\r\n                     this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n    // ****************** END OF DB METHODS*******************************************\r\n\r\n\r\n    //************************THESE METHODS ARE CALLED FROM BUTTONS WITHIN THE MODAL*********************\r\n    updateOrCreateBug = () => {\r\n        if (this.state.isNewBug){\r\n            this.saveNewBugInDB();\r\n        } else {\r\n            //UPDATE THE BUG DATA LOCALLY BEFORE PUSHING TO DB\r\n            this.state.bugData[this.state.currentBugIndex].bugTitle = this.state.bugTitleInModal;\r\n            this.state.bugData[this.state.currentBugIndex].bugDescription = this.state.bugDescriptionInModal;\r\n            this.setState({selectedBug: this.state.bugData[this.state.currentBugIndex]});\r\n            this.updateBugInDB();\r\n        }\r\n    }\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, bugTitleInModal:\"\", bugDescriptionInModal: \"\" });\r\n    }\r\n    //*********************** END OF MODAL BUTTON CLICK METHODS ****************************\r\n\r\n\r\n    // ******************** THESE METHODS ARE CALLED WHEN CREATE/EDIT BUTTONS ARE FIRST CLICKED ******************\r\n    editBugButton(bugClickedOn) {\r\n        console.log(\"Edit bug clicked on !!!\");\r\n        console.log(bugClickedOn);\r\n        this.setState({ showModal: true, \r\n            currentModalTitle: \"Edit Bug\",\r\n            currentBugIndex: bugClickedOn.id,\r\n            bugTitleInModal: bugClickedOn.bugTitle, \r\n            bugDescriptionInModal: bugClickedOn.bugDescription, \r\n            isNewBug: false, \r\n            selectedBug: bugClickedOn });\r\n    }\r\n    deleteBugButton(bugClickedOn){ \r\n        console.log(\"Delete Bug Clicked on!!! \");\r\n        this.deleteBugInDB(bugClickedOn);\r\n    }\r\n\r\n    createNewBugButton = () => {\r\n        this.setState({ showModal: true, currentModalTitle: \"Create Bug\", isNewBug: true, bugTitleInModal: \"\", bugDescriptionInModal: \"\" });\r\n    }\r\n    // ******************** END OF INITIAL BUTTON CLICK METHODS ******************\r\n\r\n\r\n\r\n    //CALLS THIS WHEN THE COMPONENT MOUNTS, basically \"on page load\"\r\n    componentDidMount() {\r\n        console.log(\"Component Did Mount has been called\");\r\n        this.getBugsFromDB();\r\n    } \r\n\r\n    render() {\r\n        return (\r\n             <Container id=\"containerViewBugs\" fluid=\"true\">\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugTrackerTitle\">View Bugs</h1>\r\n                            </Container>\r\n                        </div>\r\n                        <Link to=\"/profile\" className=\"log\" ><Button>View Profile</Button></Link>\r\n                        <br />\r\n                        <p><strong>Assignee </strong> </p>\r\n                         <select>\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Tyler\">Tyler</option>\r\n                            <option value=\"Brian\">Tawny</option>\r\n                            <option value=\"Brian\">Anthony</option>\r\n                            <option value=\"Brian\">Arthur</option>\r\n\t                    </select>\r\n                            <br />\r\n                                <br />\r\n                        {this.state.bugData.length ? (\r\n                        <table id=\"bugViewTable_Table\" className=\"table table-hover bugViewTable_Table\">\r\n                            <thead id=\"bugViewTable_head\" className=\"thead-dark\">\r\n                                            <tr>\r\n                                    <th className=\"bugViewTable_th\" scope=\"col\">Bug Title</th>\r\n                                    <th className=\"bugViewTable_th\" scope=\"col\">Bug Description</th>\r\n                                    <th className=\"bugViewTable_th\" scope=\"col\"></th>\r\n                                    <th className=\"bugViewTable_th\" scope=\"col\"></th>\r\n                                            </tr>\r\n                                </thead>\r\n                                        <tbody>\r\n                                    {this.state.bugData.map(bug => {\r\n                                    return(\r\n                                        <tr className=\"bugViewTable_tr\" key={bug.id}>\r\n                                            <td className=\"bugViewTable_td\">{bug.bugTitle}</td>\r\n                                            <td className=\"bugViewTable_td\">{bug.bugDescription}</td>\r\n                                            <td id=\"editColumn\" className=\"bugViewTable_td\">                            \r\n                                                <Button variant=\"primary\" onClick={() => this.editBugButton(bug)}>\r\n                                                    Edit\r\n                                            </Button>\r\n                                            </td>\r\n\r\n                                            <td id=\"deleteColumn\" className=\"bugViewTable_td\"> <Button variant=\"primary\" onClick={() => this.deleteBugButton(bug)}>Delete</Button></td>\r\n                                            </tr>\r\n                                    )\r\n                                })}\r\n                                    </tbody>\r\n                                    </table>\r\n\r\n\r\n                        ) : ( <h3> No Results to Display </h3>  )} \r\n                                <br />\r\n                                    <br />\r\n                        <Button type=\"button\" className=\"btn btn-primary\" onClick={this.createNewBugButton}>Create New Bug</Button>\r\n\r\n                       \r\n                       \r\n                       \r\n                \r\n                        {/* This modal will pop up for editing bugs! */}\r\n                        <Modal show={this.state.showModal} animation={false}>\r\n                            <Modal.Header>\r\n                                <Modal.Title>{this.state.currentModalTitle}</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n\r\n                                <p>Bug Title</p>\r\n                                <Input onBlur={this.formatInput.bind(this)} value={this.state.bugTitleInModal} id=\"bugTitleInModal\" onChange={this.handleChange.bind(this)} name=\"bugTitleInModal\" />\r\n\r\n\r\n                                <TextArea label=\"Bug Description\" onBlur={this.formatInput.bind(this)} value={this.state.bugDescriptionInModal} id=\"bugDescriptionInModal\" onChange={this.handleChange.bind(this)} name=\"bugDescriptionInModal\" />\r\n\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                                    Close\r\n                                  </Button>\r\n                                <Button variant=\"primary\" onClick={this.updateOrCreateBug}>\r\n                                    Save Changes\r\n                              </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n\r\n                                \r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BugViewPage;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./create-bug.css\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass BugViewPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            bugTitle: \"\",\r\n            bugDescription: \"\",\r\n            sampleBugViewTableData: [{ id: \"1\", BugTitle: \"Title A\", BugDescription: \"Test A\" }, { id: \"2\", BugTitle: \"Title B\", BugDescription: \"Test B\" }, { id: \"3\", BugTitle: \"Title C\", BugDescription: \"Test C\" }]\r\n        };\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    //Standard method for constantly updating input, since UI is constantly refreshing\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container id=\"containerViewBugs\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugTrackerTitle\">Create Bug Task</h1>\r\n                            </Container>\r\n                        </div>\r\n                        \r\n                        <p>Bug Title</p>\r\n                        <Input onBlur={this.formatInput.bind(this)} value={this.state.emailAddress} id=\"BugTitle\" onChange={this.handleChange.bind(this)} name=\"BugTitle\" />\r\n\r\n                        \r\n                        <TextArea label=\"Bug Description\" onBlur={this.formatInput.bind(this)} value={this.state.emailAddress} id=\"BugDescription\" onChange={this.handleChange.bind(this)} name=\"BugDescription\"/>\r\n\r\n                        <Button>Save Bug</Button><Button>View Bugs</Button>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BugViewPage;","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./profile.css\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstName:\"\",\r\n            loggedIn: this.props.loggedIn,\r\n            redirectTo: null,\r\n            changePasswordFieldsActive: false,\r\n            formErrors: { oldPassword: \"\", newPassword1and2:\"\" },\r\n            oldPassword: \"\",\r\n            newPassword1: \"\",\r\n            newPassword2: \"\",\r\n            oldPasswordValid: false,\r\n            newPassword1and2Valid: false,\r\n            showModal: false,\r\n            currentModalTitle: \"\",\r\n            userData: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n        console.log(\"Component mounted in Profile, below is MongoID\");\r\n        console.log(this.props.mongoID);\r\n        \r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    //Standard method for constantly updating input, since UI is constantly refreshing\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    validateFields() {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let oldPasswordValid = this.state.oldPassword;\r\n        let newPassword1and2Valid = this.state.newPassword1Valid;\r\n\r\n\r\n        //Validating that old password is greater than 6 characters. We'll check the DB to see if this is accurate. Password is NEVER sent to client. \r\n        oldPasswordValid = this.state.oldPassword >= 6;\r\n        fieldValidationErrors.oldPassword = oldPasswordValid ? \"\" : \"Old password must be atleast 6 characters long.\";\r\n\r\n\r\n        //Validating between the new password field and \"confirm password\" field that they match and are greather than or equal to 6 characters\r\n        newPassword1and2Valid = this.state.newPassword1 === this.state.newPassword2 && this.state.newPassword1.length >= 6;\r\n        fieldValidationErrors.newPassword1and2Valid = \"New password doesn't match or your password is less than 6 characters long.\";\r\n\r\n    \r\n\r\n        //TODO --- HANDLE FORM VALIDATION\r\n\r\n        // this.setState({\r\n        //     formErrors: fieldValidationErrors,\r\n        //     oldPasswordValid: oldPasswordValid,\r\n        //     newPassword1and2Valid: newPassword1and2Valid\r\n        // }, () => {\r\n        //     this.attemptToSavePasswordToDB();\r\n        // });\r\n    }\r\n\r\n\r\n    \r\n    handleChangePasswordButtonClick = event => {\r\n        event.preventDefault();\r\n\r\n\r\n\r\n\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Change Password\",\r\n        });\r\n\r\n\r\n        this.setState({\r\n            changePasswordFieldsActive: true\r\n        })\r\n   \r\n\r\n    }\r\n\r\n\r\n    //************************THESE METHODS ARE CALLED FROM BUTTONS WITHIN THE MODAL*********************\r\n    handleUpdatePassword = () => {\r\n\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID\r\n        }\r\n        API.updateUserInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"UpdatePassword successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n\r\n                } else {\r\n                    console.log(\"Updating USER PASSWORD WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                    this.setState({ showModal: false });\r\n                }\r\n            })\r\n        \r\n    }\r\n    closeModal = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n    //*********************** END OF MODAL BUTTON CLICK METHODS ****************************\r\n\r\n    \r\n    render() {\r\n        return (\r\n            <Container id=\"containerViewBugs\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugTrackerTitle\">Welcome, {this.props.firstName}!</h1>\r\n                            </Container>\r\n                        </div>\r\n\r\n                        <Link to=\"/bug-view\" className=\"log\" ><Button>View Bugs</Button></Link>\r\n                        <Button onClick={this.handleChangePasswordButtonClick.bind(this)}>Change Password</Button>\r\n\r\n\r\n                        \r\n\r\n                        {/* This modal will pop up for changing password! */}\r\n                        <Modal show={this.state.showModal} animation={false}>\r\n                            <Modal.Header>\r\n                                <Modal.Title>{this.state.currentModalTitle}</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n\r\n                                {this.state.changePasswordFieldsActive ?\r\n                                    <div>\r\n                                        <p>Old Password</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.oldPasswordValid.toString()}\r\n                                            fielderror={this.state.formErrors.oldPassword}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.oldPassword)}`}\r\n                                            value={this.state.oldPassword}\r\n                                            id=\"oldPassword\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"oldPassword\"></Input>\r\n\r\n                                        <p>New Password</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.newPassword1and2Valid.toString()}\r\n                                            fielderror={this.state.formErrors.newPassword1}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.newPassword1and2)}`}\r\n                                            value={this.state.newPassword1}\r\n                                            id=\"newPassword1\" onChange={this.handleChange.bind(this)}\r\n                                            name=\"newPassword1\"></Input>\r\n\r\n                                        <p>Confirm New Password</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.newPassword1and2Valid.toString()}\r\n                                            fielderror={this.state.formErrors.newPassword2}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.newPassword1and2)}`}\r\n                                            value={this.state.newPassword2}\r\n                                            id=\"newPassword2\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"newPassword2\"></Input>\r\n\r\n                                    </div>\r\n                                    :\r\n                                    \"\"}\r\n\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                                    Close\r\n                                  </Button>\r\n                                <Button variant=\"primary\" onClick={this.handleUpdatePassword}>\r\n                                    Save Changes\r\n                              </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n\r\n    \r\n}\r\n}\r\n\r\n// export default Profile;\r\nexport default withRouter(Profile);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport LandingPage from \"./pages/landing-page\";\nimport BugView from \"./pages/bug-view\";\nimport CreateBug from \"./pages/create-bug\";\nimport Profile from \"./pages/profile\";\nimport API from \"./utils/API\";\nimport { withRouter } from 'react-router';\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      loggedIn: false,\n      user: null,\n      firstName: null,\n      lastName: null,\n      mongoID: null,\n      password: null,\n      redirectTo: null\n    }\n    this._login = this._login.bind(this)\n  }\n  componentDidMount() {\n    API.user().then(response => {\n      if (!!response.data.user) {\n        console.log(\"Attempt to login on App.js from componentDidMount\");\n        console.log(response.data);\n        this.setState({\n          loggedIn: true,\n          user: response.data.user,\n          userId: response.data.user._id,\n        });\n        console.log(\"login passed!! User is not authenticated. (App.js - componentDidMount)\");\n      } else {\n        console.log(\"Login failed!!! User is not authenticated. (App.js - componentDidMount)\");\n        this.setState({\n          loggedIn: false,\n          // redirectTo: \"/landing-page\",\n          user: null\n        })\n      }\n    })\n  }\n\n  _login(username, password) {\n    console.log(\"I called _login from App.js\");\n    var userData = {\n      username: username,\n      password: password,\n    }\n    API\n      .login(userData)\n      .then(response => {\n        console.log(\"attempt to login from app.js _login\");\n        console.log(response);\n        if (response.status === 200) {\n          console.log(\"ATTEMPTING TO CONSOLE LOG EMAIL IN _LOGIN IN App.js\");\n          console.log(response.data);\n            if(response.data.loggedInSuccess){\n\n            \n          //var data = JSON.parse(response.data);\n         // console.log(response);\n         console.log(\"_login from App.js is SUCCESSFUL, below is the response data\");\n         console.log(response.data);\n          // update the state\n          this.setState({\n            loggedIn: true,\n            username: response.data.username,\n            mongoID: response.data.mongoID,\n            firstName: response.data.firstName,\n            lastName: response.data.lastName,\n            password: response.data.password,\n            redirectTo: \"/profile\"\n          })\n          //this.props.history.push(\"/profile\");\n\n\n        }else {\n            console.log(\"logged in FAILED!!!\");\n            console.log(response);\n              this.setState({\n                loggedIn: false\n              })\n        }\n        }\n      })\n  }\n\n    render() {\n      //IF USER IS AUTHENTICATED RENDER THIS\n      if (this.state.loggedIn) {\n        console.log(\"redirectTO has been called!!!\");\n        console.log(this.state.redirectTo);\n        return(\n\n            <div className=\"App\">\n              <div>\n\n        <Redirect exact to={{ pathname: this.state.redirectTo }} render={() =>\n          <LandingPage\n            _login={this._login}\n\n          />}/> \n\n          \n          <Route exact path=\"/landing-page\"\n            render={() =>\n              <LandingPage\n                _login={this._login}\n\n              />} />\n          <Route exact path=\"/bug-view\" component={BugView} />\n          <Route exact path=\"/create-bug\" component={CreateBug} />\n              <Route exact path=\"/profile\" render={() => <Profile loggedIn={this.state.loggedIn} username={this.state.username} mongoID={this.state.mongoID} firstName={this.state.firstName}/>} />\n\n          <Route exact path=\"/\" render={() => (\n            <Redirect to=\"/landing-page\" />\n          )} />\n\n          </div>\n          </div>\n\n        )\n      }\n\n\n      //IF USER IS NOT AUTHENTICATED, RENDER JUST THE LANDING PAGE\n      return (\n        <div className=\"App\">\n       <div>\n            <Route exact path=\"/landing-page\" \n                  render={() =>\n                    <LandingPage\n                      _login={this._login}\n\n                    />} />\n\n                <Route exact path=\"/\" render={() => (\n                  <Redirect to=\"/landing-page\" />\n                )} />\n\n            <Redirect from=\"*\" to=\"/landing-page\" />\n  \n             </div>\n       </div>\n      )      \n    }\n\n  }\nexport default App;\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from 'react-router-dom'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nReactDOM.render(\n    // <App /> \n   \n <BrowserRouter> \n\n\n    \n    <Switch>\n    <Route component={App} />\n\n                </Switch>\n \n </BrowserRouter>\n\n  , document.getElementById(\"root\"));\n\n"],"sourceRoot":""}