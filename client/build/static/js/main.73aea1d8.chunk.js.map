{"version":3,"sources":["components/Grid/Col.js","components/Grid/Container.js","components/Grid/Row.js","components/Form/Input.js","components/Form/Button.js","components/Form/TextArea.js","utils/API.js","pages/landing-page/landing-page.js","components/BugCommentContainer/BugCommentContainer.js","components/BugCommentContainer/BugCommentPanel.js","pages/bug-view/bug-view.js","pages/create-bug/create-bug.js","pages/profile/profile.js","App.js","index.js"],"names":["Col","props","className","size","split","map","join","children","Container","id","fluid","Row","Input","formgroupclass","htmlFor","label","isvalid","fielderror","Button","TextArea","rows","console","log","axios","get","userObj","post","userData","bugData","bugCommentData","_id","bugAndCommentData","mongoID","LandingPage","formatInput","event","attribute","target","getAttribute","setState","value","trim","handleFormSubmit","preventDefault","state","emailAddress","loginButtonClicked","_login","password","forgotPasswordButtonClicked","sendForgotPasswordEmail","saveUser","handleLoginButtonClick","loginOrCreateAccountButtonClicked","handleCreateAccountButtonClick","handleForgotPasswordButtonClick","createAccount","firstName","lastName","phoneNumber","guestCount","formErrors","redirectTo","firstNameValid","lastNameValid","passwordValid","emailAddressValid","phoneNumberValid","guestCountValid","e","this","fieldValidationErrors","match","length","setCookieAndChangePage","error","obj","numbers","replace","substring","char","0","3","6","i","email","API","then","response","data","errorResponse","userId","username","user_email","user_address","address","user_city","city","user_state","user_zip","zip","cookies","Cookies","charAt","toUpperCase","slice","set","path","history","push","to","pathname","onBlur","bind","toString","errorClass","onChange","handleChange","name","onClick","Component","withRouter","BugCommentContainer","BugCommentPanel","text","BugViewPage","delta","count","validateFields","saveNewBugInDB","bugObj","currentBugIndex","bugTitle","bugTitleInModal","bugDescription","bugDescriptionInModal","userAssigned","bugUserAssignedInModal","status","bugStatusInModal","doc","showModal","forceUpdate","updateBugInDB","selectedBug","updateOrCreateBug","isNewBug","closeModal","currentIndex","createNewBugButton","currentModalTitle","isLogin","showModal2","sampleBugViewTableData","filteredBugData","bugCommentsInModal","users","currentBugCommentInModal","userFilter","statusFilter","bugs","putAllBugsIntoFilteredArray","catch","err","bugClickedOn","deletedCount","index","indexOf","splice","currentBug","res","renderBugComments","bugComments","bugComment","deleteBugInDB","getBugsFromDB","bug","bugFilter","assigneeFilterIsActive","statusFilterIsActive","href","scope","key","variant","editBugButton","deleteBugButton","type","Modal","show","animation","Header","Title","Body","boundBugCommentClick","deleteBugComment","placeholder","addBugComment","Footer","BugTitle","BugDescription","Profile","handleChangePasswordButtonClick","setPasswordFieldsActiveInModal","handleUpdatePassword","oldPassword","newPassword","newPassword1","handleCreateOrganizationButtonClick","setCreateOrganizationFieldsActiveInModal","setJoinOrganizationFieldsActiveInmodal","handleJoinOrganizationButtonClick","setJoinOrganizationFieldsActiveInModal","saveOrganizationInDB","organizationName","organizationNameInModal","organizationID","organizationIDInModal","loggedIn","newPassword1and2","newPassword2","oldPasswordValid","newPassword1and2Valid","organizationNameValid","organizationIDValid","organizations","getOrganizationsOfUserInDB","newPassword1Valid","organizationClickedOn","organization","handleViewBugsOrganizationButtonClick","handleEditOrganizationButtonClick","handleCreatedOrganizationButtonClick","attachUserToOrganizationInDB","App","user","loggedInSuccess","exact","render","component","BugView","CreateBug","from","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.73aea1d8.chunk.js","sourcesContent":["import React from \"react\";\n\nexport const Col = props =>\n  <div className={props.size.split(\" \").map(size => \"col-\" + size).join(\" \")} {...props}>\n    {props.children}\n  </div>;\n","import React from \"react\";\n\nexport const Container = props =>\n  <div id={props.id} className={`container${props.fluid === \"true\"  ? \"-fluid\" : \"\"}`} {...props}>\n    {props.children}\n  </div>;\n","import React from \"react\";\n//({ fluid, children, props })\nexport const Row = props =>\n  <div className={`row${props.fluid ? \"-fluid\" : \"\"}`} {...props}> \n    {props.children}\n  </div>;\n","import React from \"react\";\n\nexport const Input = props =>\n  <div className={props.formgroupclass}>\n\n    <label htmlFor=\"inputField\">{props.label}</label>\n    <input className=\"form-control\" id=\"inputField\" {...props} />\n    {props.isvalid === \"true\" ? \"\" : <span className=\"help-block\">{props.fielderror}</span>}\n  </div>;\n","import React from \"react\";\n\nexport const Button = props =>\n  <button {...props} className=\"btn btn-pill btn-light btn-lg\">\n    {props.children}\n  </button>;\n","import React from \"react\";\r\n\r\nexport const TextArea = props =>\r\n    <div className={props.formgroupclass}>\r\n        <label htmlFor=\"bugDescriptionField\">{props.label}</label>\r\n        <textarea className=\"form-control\" id=\"bugDescriptionField\" rows=\"5\" {...props}></textarea>\r\n        {props.isvalid === \"true\" ? \"\" : <span className=\"help-block\">{props.fielderror}</span>}\r\n    </div>;\r\n","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n    // USER CALLS  -----\r\n    user: function () {\r\n        console.log(\"i'm in API.js file, calling user\");\r\n        return axios.get(\"/api/user\");\r\n    },\r\n    sendForgotPasswordEmail(userObj) {\r\n        console.log(\"i'm in API.JS on the front end\");\r\n        return axios.post(\"/api/user/sendForgotPasswordEmail\", userObj);\r\n    },\r\n    updateUserInDB(userObj){\r\n        return axios.post(\"/api/user/updateUser\", userObj);\r\n    },\r\n    login: function (userData) {\r\n        console.log(\"LoginAPI\")\r\n        console.log(userData);\r\n        // return axios.get(\"/api/user/login\");\r\n        return axios.post(\"/api/user/login\", userData)\r\n    },\r\n    saveUser: function (userData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/user/saveUser\", userData);\r\n    },\r\n\r\n    //BUG CALL --------\r\n    saveBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/saveBug\", bugData);\r\n    },\r\n    updateBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/updateBug\", bugData);\r\n    },\r\n    deleteBug: function (bugData) {\r\n        console.log(\"I'm in the API file\");\r\n        console.log(bugData);\r\n        return axios.post(\"/api/bug/deleteBug\", bugData);\r\n    },\r\n    getAllBugs: function() {\r\n        //TODO - Set up organization ID query\r\n        //Query db to get all bugs\r\n        return axios.get(\"/api/bug/getAllBugs\")\r\n    },\r\n    \r\n\r\n    // BUG COMMENT CALLS -------\r\n    deleteBugComment: function (bugCommentData) {\r\n        console.log(\"I'm in deleteBugComment Api.js\");\r\n        console.log(bugCommentData)\r\n        return axios.post(\"/api/bug/deleteBugComment/\" + bugCommentData._id);\r\n    },\r\n    saveBugComment: function(bugAndCommentData) {\r\n        return axios.post(\"/api/bug/saveBugComment\", bugAndCommentData);\r\n    },\r\n    getBugComments: function(bugData) {\r\n        console.log(\"I'm in getbugcomments front end API.JS\");\r\n        console.log(bugData.mongoID);\r\n        return axios.get(\"/api/bug/getBugComments/\" + bugData.mongoID);\r\n    },\r\n\r\n    // ORGANiZATION CALLS\r\n    saveOrganizationInDB: function(userData) {\r\n        console.log(\"I'm in the saveOrganizationInDB method in API file\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/organization/saveOrganization\", userData);\r\n    },\r\n    getOrganizationsOfUserInDB: function(userData){\r\n        console.log(\"I'm in the getOrganizationsOfUserInDB method in API file\");\r\n        console.log(userData);\r\n        return axios.get(\"/api/organization/getAllOrganizationsOfUser/\" + userData.mongoID);\r\n    },\r\n    attachUserToOrganizationInDB: function (userData) {\r\n        console.log(\"I'm in the getOrganizationsOfUserInDB method in API file\");\r\n        console.log(userData);\r\n        return axios.post(\"/api/organization/attachUserToOrganization\", userData);\r\n    }\r\n\r\n};","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { Input, Button } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { withRouter } from 'react-router';\r\n\r\nimport \"./landing-page.css\";\r\nclass LandingPage extends Component {\r\n    constructor(props){\r\n    super(props)\r\n    this.state = {\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        emailAddress: \"\",\r\n        password: \"\",\r\n        phoneNumber: \"\",\r\n        guestCount: \"\",\r\n        formErrors: {firstName: \"\", lastName: \"\", emailAddress:\"\", phoneNumber:\"\", guestCount:\"\", password:\"\"},\r\n          redirectTo: null,\r\n        firstNameValid: false,\r\n        lastNameValid: false,\r\n        passwordValid: false,\r\n        emailAddressValid: false,\r\n        phoneNumberValid: false,\r\n        guestCountValid: false,\r\n        loginOrCreateAccountButtonClicked: false,\r\n        loginButtonClicked: true,\r\n        forgotPasswordButtonClicked: false\r\n    };\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    } \r\n\r\n    validateFields() {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let emailAddressValid = this.state.emailAddressValid;\r\n        let firstNameValid = this.state.firstNameValid;\r\n        let lastNameValid = this.state.lastNameValid;\r\n        let phoneNumberValid = this.state.phoneNumberValid;\r\n        let guestCountValid = this.state.guestCountValid;\r\n        let passwordValid = this.state.passwordValid;\r\n\r\n        //Validating email using Regex\r\n        let matchArray = this.state.emailAddress.match(/^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i);\r\n        if(matchArray !== null) {\r\n            emailAddressValid = true;\r\n        }\r\n        fieldValidationErrors.emailAddress = emailAddressValid ? \"\" : \"Please provide a valid email\";\r\n\r\n        //Validating First Name by checking if there is anything there.\r\n        firstNameValid = this.state.firstName.length >0;\r\n        fieldValidationErrors.firstName = firstNameValid ? \"\": \"Please provide your first name\";\r\n\r\n        //Validating Last Name by checking if there is anything there.\r\n        lastNameValid = this.state.lastName.length > 0;\r\n        fieldValidationErrors.lastName = lastNameValid ? \"\":\"Please provide your last name\";\r\n\r\n        //Validating phone number by checking if there are 16 digits. (counting the special characters besides the digits.)\r\n        phoneNumberValid = this.state.phoneNumber.length===16;\r\n        fieldValidationErrors.phoneNumber = phoneNumberValid ? \"\":\"Please provide a phone number\";\r\n\r\n        //validating password\r\n        passwordValid = this.state.password.length === 2;\r\n        fieldValidationErrors.password = passwordValid ? \"\" : \"Please provide a password\";\r\n\r\n        //Validate guest count by checking if user made a selection.\r\n        guestCountValid = true;\r\n        if(this.state.guestCount === \"\" || this.state.guestCount===\"Select\"){\r\n            guestCountValid = false;\r\n        }\r\n        fieldValidationErrors.guestCount = guestCountValid ? \"\": \"Please provide guest count\";\r\n\r\n        this.setState({\r\n            formErrors: fieldValidationErrors,\r\n            emailAddressValid: emailAddressValid,\r\n            firstNameValid: firstNameValid,\r\n            lastNameValid: lastNameValid,\r\n            phoneNumberValid: phoneNumberValid,\r\n            guestCountValid: guestCountValid,\r\n            passwordValid: passwordValid\r\n        }, () => {\r\n            this.setCookieAndChangePage();\r\n        });    \r\n    }\r\n\r\n    //Here we check if the field has an error. If it does, it will add the \"has-error\" class to the field.\r\n    //\"has-error\" is a default bootstrap class that will nicely color the outline of the field red to indicate an error for the user. \r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    formatPhone(obj) {\r\n        if(obj == null){\r\n            return;\r\n        }\r\n        var numbers = obj.state.phoneNumber.replace(/\\D/g, \"\").substring(0,10),\r\n            char = { 0: \"(\", 3: \") \", 6: \" - \" };\r\n        obj.state.phoneNumber = \"\";\r\n        for (var i = 0; i < numbers.length; i++) { \r\n            obj.state.phoneNumber += (char[i] || \"\") + numbers[i];    \r\n        }\r\n    }\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();    \r\n        //this.validateFields();\r\n        console.log(\"I'm in handle form submit\");\r\n        console.log(this.state.emailAddress);\r\n\r\n        if(this.state.loginButtonClicked){\r\n            //If the login button is clicked then we want submit LOGIN request, which is different than Create Account request\r\n            this.props._login(this.state.emailAddress, this.state.password)\r\n        } else if(this.state.forgotPasswordButtonClicked){\r\n            this.sendForgotPasswordEmail();\r\n\r\n        }\r\n        else {\r\n            //If Create Account button was clicked, then we want to post the user to the database.\r\n            this.saveUser();\r\n        }\r\n  \r\n    };\r\n\r\n    //LOGIN / CREATE ACCOUNT BUTTONS - Just to set it up so before I actually submit data to DB\r\n    handleLoginButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: true, loginButtonClicked: true, forgotPasswordButtonClicked: false})\r\n\r\n    }\r\n    handleCreateAccountButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: true, loginButtonClicked: false, forgotPasswordButtonClicked: false })\r\n\r\n    }\r\n\r\n    handleForgotPasswordButtonClick = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginOrCreateAccountButtonClicked: false, loginButtonClicked: false, forgotPasswordButtonClicked: true})\r\n    }\r\n\r\n    createAccount = event => {\r\n        event.preventDefault();\r\n        this.setState({ loginButtonClicked: false});\r\n\r\n    };\r\n\r\n\r\n    sendForgotPasswordEmail() {\r\n        let userObj = {\r\n            email: this.state.emailAddress\r\n        }\r\n\r\n        console.log(\"I'm in SEND FORGOT PASSWROD EMAIL METHOD ON landing-page js\");\r\n\r\n        API.sendForgotPasswordEmail(userObj)\r\n            .then(response => {\r\n\r\n\r\n\r\n                if (!response.data.error) {\r\n                    //userObj.userId = response.data.doc._id;\r\n\r\n                    // this.setState({\r\n                    //     redirectTo: '/profile'\r\n                    // })\r\n                    console.log(\"send forgot password was successful, i'm back at landing-page.js, in API.sendForgotPasswordEmail\");\r\n                    console.log(response);\r\n                } else {\r\n                    console.log(\"error found!!!\");\r\n                    console.log(response);\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n\r\n    saveUser() {\r\n        console.log(\"HELLO?!?!!?!\");\r\n        console.log(this.state.passwordValid + \" passwordvalid?\");\r\n        // if (this.state.passwordValid && this.state.firstNameValid && this.state.lastNameValid) {\r\n\r\n            console.log(\"Called saveUser() from LandingPage  .... BELOW IS THE STATE\");\r\n            console.log(this.state);\r\n            let userObj = {\r\n                userId: null,\r\n                username: this.state.emailAddress,\r\n                password: this.state.password,\r\n                email: this.state.emailAddress,\r\n                user_email: this.state.email,\r\n                firstName: this.state.firstName,\r\n                lastName: this.state.lastName,\r\n                user_address: this.state.address,\r\n                user_city: this.state.city,\r\n                user_state: this.state.state,\r\n                user_zip: this.state.zip\r\n            }\r\n            API.saveUser(userObj)\r\n                .then(response => {\r\n\r\n\r\n\r\n                    if (!response.data.error) {\r\n                        //userObj.userId = response.data.doc._id;\r\n\r\n\r\n                        //Now that the user account is created, let's automatically login the user in\r\n                         this.props._login(this.state.emailAddress, this.state.password, userObj);\r\n                        // this.setState({\r\n                        //     redirectTo: '/profile'\r\n                        // })\r\n                        console.log(\"I WAS SUCCESSFUL FROM LANDING PAGE\");\r\n                    } else {\r\n                        this.setState({ errorResponse: response })\r\n                    }\r\n                })\r\n\r\n        // }\r\n    }\r\n    setCookieAndChangePage() {\r\n\r\n        //This function will be called once all fields are validated. If any are not valid, the binary \"valid\" variable will be false.\r\n        if (this.state.firstNameValid && this.state.lastNameValid && this.state.emailAddressValid && this.state.phoneNumberValid && this.state.guestCountValid) {\r\n\r\n            const cookies = new Cookies();\r\n\r\n            var userObj = {\r\n                \"firstName\": this.state.firstName.charAt(0).toUpperCase() + this.state.firstName.slice(1),\r\n                \"lastName\": this.state.lastName.charAt(0).toUpperCase() + this.state.lastName.slice(1),\r\n                \"emailAddress\": this.state.emailAddress,\r\n                \"phoneNumber\": this.state.phoneNumber,\r\n                \"guestCount\": this.state.guestCount\r\n            }\r\n\r\n            cookies.set(\"demo-requested\", userObj, { path: \"/\" });\r\n            this.props.history.push(\"/thank-you\");\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"component has mounted\");\r\n        console.log(this);\r\n    }\r\n    componentDidUpdate() {\r\n\r\n    }\r\n    render() {\r\n\r\n        if (this.props.redirectTo) {\r\n            console.log(\"THIS . PROPS. REDIRECT EXISTS IN LANDING PAGE!!!\");\r\n            console.log(this.props.redirectTo);\r\n            return <Redirect to={{ pathname: this.props.redirectTo }} />\r\n        } else {\r\n        return (\r\n            <Container id=\"container\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n\r\n                    <hr id=\"hline\"></hr>\r\n                    <Col id=\"formCol\" size=\"sm-6\">\r\n                        <h1>BugSlayer</h1>\r\n                        {this.state.loginOrCreateAccountButtonClicked ?\r\n                            <div>\r\n                                {this.state.loginButtonClicked ?\r\n                                    <h1 id=\"formHeader\">Login</h1>\r\n                                    :\r\n                                    <h1 id=\"formHeader\">Create Account</h1>\r\n\r\n                                }\r\n                                <form>\r\n                                    \r\n\r\n                                    {this.state.loginButtonClicked ?\r\n\r\n                                        \"\"\r\n                                        :\r\n\r\n                                        <div>\r\n                                            <p>First Name</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.firstNameValid.toString()} fielderror={this.state.formErrors.firstName} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.firstName)}`} value={this.state.firstName} id=\"firstName\" onChange={this.handleChange.bind(this)} name=\"firstName\"></Input>\r\n\r\n\r\n                                            <p>Last Name</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.lastNameValid.toString()} fielderror={this.state.formErrors.lastName} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.lastName)}`} value={this.state.lastName} id=\"lastName\" onChange={this.handleChange.bind(this)} name=\"lastName\"></Input>\r\n\r\n                                        </div>\r\n\r\n                                    }\r\n\r\n                                    <p>Email Address</p>\r\n                                    <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.emailAddressValid.toString()} fielderror={this.state.formErrors.emailAddress} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.emailAddress)}`} value={this.state.emailAddress} id=\"emailAddress\" onChange={this.handleChange.bind(this)} name=\"emailAddress\"></Input>\r\n\r\n                                    <p>Password</p>\r\n                                    <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.passwordValid.toString()} fielderror={this.state.formErrors.password} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.password)}`} value={this.state.password} id=\"password\" onChange={this.handleChange.bind(this)} name=\"password\"></Input>\r\n\r\n                                    <Button onClick={this.handleFormSubmit.bind(this)}> Submit </Button>\r\n\r\n                                    {this.state.loginButtonClicked ?\r\n                                        <h3 id=\"formFooterLink\" onClick={this.handleCreateAccountButtonClick.bind(this)}>Create Account instead?</h3>\r\n                                        :\r\n                                        <h3 id=\"formFooterLink\" onClick={this.handleLoginButtonClick.bind(this)}>Login instead?</h3>\r\n\r\n                                    }\r\n                                </form>\r\n                            </div>\r\n                            : \r\n\r\n                            <div>\r\n\r\n                                {\r\n                                    this.state.forgotPasswordButtonClicked ?\r\n                                        <div>\r\n\r\n                                            <p><strong>Please enter your email address. If correct, we will send you an email!</strong></p>\r\n                                            <p>Email Address</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.emailAddressValid.toString()} fielderror={this.state.formErrors.emailAddress} formgroupclass={`form-group ${this.errorClass(this.state.formErrors.emailAddress)}`} value={this.state.emailAddress} id=\"emailAddress\" onChange={this.handleChange.bind(this)} name=\"emailAddress\"></Input>\r\n                                            <Button onClick={this.handleFormSubmit.bind(this)}> Submit </Button>\r\n                                            \r\n                                            <h3 id=\"formFooterLink\" onClick={this.handleLoginButtonClick.bind(this)}>Login instead?</h3>\r\n                                            <h3 id=\"formFooterLink\" onClick={this.handleCreateAccountButtonClick.bind(this)}>Create Account instead?</h3>\r\n                                        </div>\r\n                                            :                                                                                \r\n                                             <div>                                \r\n                                            <Button onClick={this.handleLoginButtonClick.bind(this)}> Login </Button>\r\n                                            <Button onClick={this.handleCreateAccountButtonClick.bind(this)}> Create Account </Button>\r\n                                            <Button onClick={this.handleForgotPasswordButtonClick.bind(this)}>Forgot Password?</Button>      \r\n                                            </div>\r\n\r\n\r\n                                }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            </div>\r\n                              \r\n                        }\r\n                        \r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n\r\n                }\r\n    \r\n            }\r\n}\r\n\r\n// export default LandingPage;\r\nexport default withRouter(LandingPage)\r\n","import React from \"react\";\r\n\r\n\r\nexport const BugCommentContainer = ({ children }) => (\r\n    <div id=\"wrapper\">\r\n        <div id=\"bugs\">\r\n            {children}\r\n        </div>\r\n        <div id=\"bugComments\"></div>\r\n    </div>\r\n);\r\n","import React from \"react\";\r\n\r\nexport const BugCommentPanel = props => (\r\n    <div className='panel panel-default'>\r\n        <div className='panel-body note-panel'>\r\n            <p className=\"comment-text\"> {props.text} </p>\r\n            {props.children}\r\n        </div>\r\n    </div>\r\n);\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport {BugCommentContainer, BugCommentPanel } from \"../../components/BugCommentContainer\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./bug-view.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass BugViewPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstName: \"\",\r\n            lastName: \"\",\r\n            emailAddress: \"\",\r\n            password: \"\",\r\n            phoneNumber: \"\",\r\n            guestCount: \"\",\r\n            formErrors: { firstName: \"\", lastName: \"\", emailAddress: \"\", phoneNumber: \"\", guestCount: \"\", password: \"\" },\r\n            firstNameValid: false,\r\n            lastNameValid: false,\r\n            passwordValid: false,\r\n            emailAddressValid: false,\r\n            phoneNumberValid: false,\r\n            guestCountValid: false,\r\n            isLogin: true,\r\n            isNewBug: false,\r\n            selectedBug: \"\",\r\n            currentModalTitle: \"Edit Bug\",\r\n            currentBugIndex: 0,\r\n            showModal: false,\r\n            showModal2: false,\r\n            sampleBugViewTableData: [{ id: \"1\", bugTitle: \"Title A\", bugDescription: \"Test A\" }, { id: \"2\", bugTitle: \"Title B\", bugDescription: \"Test B\" }, { id: \"3\", bugTitle: \"Title C\", bugDescription: \"Test C\"}],\r\n            bugData: [],\r\n            filteredBugData: [],\r\n            bugTitleInModal: \"\",\r\n            bugCommentsInModal: [],\r\n            users: [{text: 'Tyler', id: '1'}, {text: 'Tawny', id: '2'}, {text: 'Anthony', id: '3'}, {text: 'Arthur', id:'4'}],\r\n            currentBugCommentInModal:\"\",\r\n            bugDescriptionInModal: \"\",\r\n            bugStatusInModal: \"\",\r\n            bugUserAssignedInModal: \"\",\r\n            userFilter: \"\",\r\n            statusFilter: \"\"\r\n        };\r\n\r\n    }\r\n\r\n    delta = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        });\r\n    }\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    validateFields() {\r\n\r\n    }\r\n\r\n    //Here we check if the field has an error. If it does, it will add the \"has-error\" class to the field.\r\n    //\"has-error\" is a default bootstrap class that will nicely color the outline of the field red to indicate an error for the user. \r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.validateFields();\r\n    };\r\n\r\n\r\n    //************************** DB METHODS ************** THESE METHODS SAVE, EDIT, GET BUGS FROM DB *******************************************\r\n    saveNewBugInDB = () => {\r\n\r\n        console.log(\"Im in saveNewBugIn DB\");\r\n    \r\n\r\n        let bugObj = {\r\n            id: this.state.bugData.length,\r\n            mongoID: this.state.bugData.length,\r\n            currentBugIndex: this.state.bugData.length,\r\n            bugTitle: this.state.bugTitleInModal,\r\n            bugDescription: this.state.bugDescriptionInModal,\r\n            userAssigned: this.state.bugUserAssignedInModal,\r\n            status: this.state.bugStatusInModal\r\n        }\r\n        console.log(bugObj);\r\n        API.saveBug(bugObj)\r\n            .then(response => {\r\n\r\n\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"I WAS SUCCESSFUL Saving Bug FROM Bug View PAGE\");\r\n\r\n                    //Grabbing new ID from DB\r\n                    bugObj.mongoID = response.data.doc._id;\r\n\r\n                    console.log(bugObj);\r\n\r\n\r\n                    this.setState({ showModal: false });\r\n                    this.state.bugData.push(bugObj);\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n\r\n    updateBugInDB = () => {\r\n        console.log(\"I'm in the update bug in DB\");\r\n        console.log(this.state.selectedBug);\r\n        API.updateBug(this.state.selectedBug)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"I WAS SUCCESSFUL Saving Bug FROM Bug View PAGE\");\r\n\r\n                    this.setState({ showModal: false });\r\n                    this.state.bugData[this.state.currentBugIndex] = this.state.selectedBug;\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n    getBugsFromDB() {\r\n        API.getAllBugs()\r\n            .then(response => {\r\n                if (!response.data.error) {\r\n                    console.log(\"SUCCESSFULLY GOT BUGS FROM DB\");\r\n                    var bugs = [];\r\n                    //Loop through bug data received from the server.\r\n                    for (var i = 0; i < response.data.length; i++) {\r\n                        console.log(\"bug \" + i);\r\n                        bugs.push({\r\n                            mongoID: response.data[this.state.currentBugIndex]._id,\r\n                            id: this.state.currentBugIndex,\r\n                            bugTitle: response.data[this.state.currentBugIndex].bugTitle,\r\n                            bugDescription: response.data[this.state.currentBugIndex].bugDescription,\r\n                            userAssigned: response.data[this.state.currentBugIndex].userAssigned,\r\n                            status: response.data[this.state.currentBugIndex].status\r\n                        })\r\n                        this.setState({ currentBugIndex: this.state.currentBugIndex + 1 });\r\n                        console.log(bugs);\r\n                    }\r\n                    this.setState({ bugData: bugs });\r\n                    console.log(\"IF IM HEre THEN THE DATA JUST UPDATED!!!!\");\r\n                    this.forceUpdate();\r\n                    console.log(\"Here is bug data from inside callback of API.getAllBugs in bug-view page!\");\r\n                    console.log(bugs);\r\n\r\n                    //At default, we want to show all bugs in the table\r\n                    this.putAllBugsIntoFilteredArray();\r\n                    this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            }).catch(err => console.log(err));\r\n\r\n            console.log(\"I am here\");\r\n    }\r\n\r\n    deleteBugInDB(bugClickedOn) {\r\n        console.log(\"I'm in delete bug in DB method. Here is the bug that was clicked on\");\r\n        console.log(bugClickedOn);\r\n        API.deleteBug(bugClickedOn)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"I WAS SUCCESSFUL DELETING THE Bug FROM Bug View PAGE. Here is the response.\");\r\n                    console.log(response);\r\n\r\n                     if(response.data.deletedCount > 0){\r\n                         //Removing the bug from the UI\r\n                         const index = this.state.bugData.indexOf(bugClickedOn);\r\n                         if (index > -1) {\r\n                             this.state.bugData.splice(index, 1);\r\n                         }\r\n                     } else {\r\n                         console.log(\"Deleting the bug failed for some reason!\");\r\n                     }\r\n\r\n                     this.forceUpdate();\r\n                } else {\r\n                    this.setState({ errorResponse: response })\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n    // Below methods are related to bug comments\r\n    addBugComment() {\r\n        let currentBug = this.state.bugData[this.state.currentBugIndex];\r\n        if(currentBug){\r\n            currentBug.text = this.state.currentBugCommentInModal;\r\n       \r\n\r\n        console.log(\"Im in the addBugComment Method on bugview page. Below is currentBug\");\r\n        console.log(currentBug);\r\n        if (this.state.currentBugCommentInModal) {\r\n            API.saveBugComment(currentBug)\r\n                .then(res => this.renderBugComments(currentBug))\r\n                .catch(err => console.log(err));\r\n        }\r\n\r\n         }\r\n\r\n    };\r\n    renderBugComments(bugData) {\r\n\r\n        console.log(\"im in the render bug data on the front end\");\r\n        console.log(bugData);\r\n        API.getBugComments(bugData)\r\n            .then(res => {\r\n                console.log(\"I got my res from render bug comments\");\r\n                console.log(res);\r\n                //var bugCommentsArr = [];\r\n                // if(res.data.bugComment == null){\r\n                //     bugCommentsArr = [];\r\n                // }\r\n                this.setState({\r\n                    bugCommentsInModal: res.data.bugComments\r\n                })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    deleteBugComment(bugComment) {\r\n        API.deleteBugComment(bugComment)\r\n            .then(res => {\r\n                this.renderBugComments(this.state.bugData[this.state.currentBugIndex]);\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n    // ****************** END OF DB METHODS*******************************************\r\n\r\n\r\n    //************************THESE METHODS ARE CALLED FROM BUTTONS WITHIN THE MODAL*********************\r\n    updateOrCreateBug = () => {\r\n        if (this.state.isNewBug){\r\n            this.saveNewBugInDB();\r\n        } else {\r\n            //UPDATE THE BUG DATA LOCALLY BEFORE PUSHING TO DB\r\n            this.state.bugData[this.state.currentBugIndex].bugTitle = this.state.bugTitleInModal;\r\n            this.state.bugData[this.state.currentBugIndex].bugDescription = this.state.bugDescriptionInModal;\r\n            this.state.bugData[this.state.currentBugIndex].userAssigned = this.state.bugUserAssignedInModal;\r\n            this.state.bugData[this.state.currentBugIndex].status = this.state.bugStatusInModal;\r\n\r\n\r\n            this.setState({selectedBug: this.state.bugData[this.state.currentBugIndex]});\r\n            this.updateBugInDB();\r\n        }\r\n    }\r\n    closeModal = () => {\r\n        this.setState({ showModal: false, bugTitleInModal:\"\", bugDescriptionInModal: \"\" });\r\n        console.log(\"I'm in closemodal!! Below is the bug object\");\r\n        console.log(this.state.bugData[this.state.currentIndex]);\r\n        console.log(this.state.bugUserAssignedInModal);\r\n        console.log(this.state.bugStatusInModal);\r\n    }\r\n    //*********************** END OF MODAL BUTTON CLICK METHODS ****************************\r\n\r\n\r\n    // ******************** THESE METHODS ARE CALLED WHEN CREATE/EDIT BUTTONS ARE FIRST CLICKED ******************\r\n    editBugButton(bugClickedOn) {\r\n        console.log(\"Edit bug clicked on !!!\");\r\n        console.log(bugClickedOn);\r\n        this.setState({ showModal: true, \r\n            currentModalTitle: \"Edit Bug\",\r\n            currentBugIndex: bugClickedOn.id,\r\n            bugTitleInModal: bugClickedOn.bugTitle, \r\n            bugDescriptionInModal: bugClickedOn.bugDescription, \r\n            isNewBug: false, \r\n            selectedBug: bugClickedOn });\r\n        this.renderBugComments(bugClickedOn);\r\n    }\r\n    deleteBugButton(bugClickedOn){ \r\n        console.log(\"Delete Bug Clicked on!!! \");\r\n        this.deleteBugInDB(bugClickedOn);\r\n        this.renderBugComments(bugClickedOn);\r\n    }\r\n\r\n    createNewBugButton = () => {\r\n        this.setState({ showModal: true, currentModalTitle: \"Create Bug\", isNewBug: true, bugTitleInModal: \"\", bugDescriptionInModal: \"\" });\r\n    }\r\n    // ******************** END OF INITIAL BUTTON CLICK METHODS ******************\r\n\r\n\r\n\r\n    //CALLS THIS WHEN THE COMPONENT MOUNTS, basically \"on page load\"\r\n    componentDidMount() {\r\n        console.log(\"Component Did Mount has been called\");\r\n        this.getBugsFromDB();\r\n        \r\n    } \r\n\r\n    putAllBugsIntoFilteredArray() {\r\n        this.setState({filteredBugData: []});\r\n        this.state.bugData.map(bug => {\r\n            return this.state.filteredBugData.push(bug);\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        if (this.state.userFilter !== \"\" && this.state.bugFilter !== \"\"){\r\n            this.state.filteredBugData  = [];\r\n            this.state.bugData.map(bug => {\r\n                console.log(\"status filter is \" + this.state.statusFilter);\r\n                console.log(\"bug.status is \" + bug.status);\r\n                console.log(\"user filter is \" + this.state.userFilter);\r\n                console.log(\"bug.userFilter is \" + bug.userAssigned);\r\n                \r\n               var assigneeFilterIsActive = false;\r\n                var statusFilterIsActive = false;\r\n                //APPLY THE FILTERS\r\n            if (this.state.statusFilter === bug.status && this.state.statusFilter !== \"\")  {\r\n\r\n                statusFilterIsActive = true;\r\n            }\r\n            \r\n            if(this.state.userFilter === bug.userAssigned && this.state.userFilter !== \"\") {\r\n                assigneeFilterIsActive = true;\r\n            }\r\n\r\n            console.log(\"statusFilterIsActive: \" + statusFilterIsActive);\r\n            console.log(\"AssigneeFilterIsActive: \" + assigneeFilterIsActive);\r\n\r\n                if (statusFilterIsActive && assigneeFilterIsActive){\r\n                    console.log(\"StatusFilter and Assigneefilter active\");\r\n                return this.state.filteredBugData.push(bug);\r\n                } else if (statusFilterIsActive && this.state.userFilter === \"\"){\r\n                    \r\n                    console.log(\"Just statusfilter is active\");\r\n                    return this.state.filteredBugData.push(bug);\r\n                }\r\n                else if (assigneeFilterIsActive && this.state.statusFilter === \"\") {\r\n                    console.log(\"Just assignee filter is active\");\r\n                    return this.state.filteredBugData.push(bug);\r\n                }\r\n                console.log(\"_------------------\");\r\n        });\r\n\r\n        console.log(\"Before RENDER() return, here is the filtered data!!!\");\r\n        console.log(this.state.filteredBugData);\r\n          } else {\r\n            this.state.filteredBugData = [];\r\n            this.state.bugData.map(bug => {\r\n                console.log(\"status filter is \" + this.state.statusFilter);\r\n                console.log(\"bug.status is \" + bug.status);\r\n                console.log(\"user filter is \" + this.state.userFilter);\r\n                console.log(\"bug.userFilter is \" + bug.userFilter);\r\n                    return this.state.filteredBugData.push(bug);\r\n\r\n            });\r\n\r\n          }\r\n        return (\r\n             <Container id=\"containerViewBugs\" fluid=\"true\">\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugTrackerTitle\">View Bugs</h1>\r\n                            </Container>\r\n                        </div>\r\n                        <Link to=\"/profile\" className=\"log\" ><Button>View Profile</Button></Link>\r\n                        <br />\r\n                        <br />\r\n                        <Row>\r\n                            <Col size=\"sm-3\">\r\n                                <p><strong>Assignee </strong> </p>\r\n                                <select value={this.state.userFilter} onChange={this.handleChange.bind(this)} id=\"userFilter\" name=\"userFilter\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tyler\">Tyler</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tawny\">Tawny</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Anthony\">Anthony</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Arthur\">Arthur</option>\r\n                                </select>\r\n                            </Col>\r\n                            <Col size=\"sm-3\">\r\n                                <p><strong>Status</strong></p>\r\n                                <select value={this.state.statusFilter} onChange={this.handleChange.bind(this)} id=\"statusFilter\" name=\"statusFilter\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Open\">Open</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"In Development\">In Development</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Needs Testing\">Needs Testing</option>\r\n                                </select>\r\n                            </Col>\r\n                        </Row>\r\n                            <br />\r\n                                <br />\r\n                        {this.state.bugData.length ? (\r\n                        <table id=\"bugViewTable_Table\" className=\"table table-hover bugViewTable_Table\">\r\n                            <thead id=\"bugViewTable_head\" className=\"thead-dark\">\r\n                                            <tr>\r\n                                    <th className=\"bugViewTable_th\" scope=\"col\">Title</th>\r\n                                    <th className=\"bugViewTable_th\" scope=\"col\">User Assigned</th>\r\n                                    <th className=\"bugViewTable_th\" scope=\"col\">Status</th>\r\n                                    <th className=\"bugViewTable_th\" scope=\"col\"></th>\r\n                                    <th className=\"bugViewTable_th\" scope=\"col\"></th>\r\n                                            </tr>\r\n                                </thead>\r\n                                        <tbody>  \r\n                                            {console.log(\"here is the filtered data\")}\r\n                                            {console.log(this.state.filteredBugData)}                                       \r\n                                    {this.state.filteredBugData.map(bug => {\r\n                                            return(\r\n                                                <tr className=\"bugViewTable_tr\" key={bug.id}>\r\n                                                    {console.log(\"I'm in filteredBudata MAP, below is current BUG\")}\r\n                                                    {console.log(bug)}\r\n                                                    <td className=\"bugViewTable_td\">{bug.bugTitle}</td>\r\n                                                    <td className=\"bugViewTable_td\">{bug.userAssigned}</td>\r\n                                                    <td className=\"bugViewTable_td\">{bug.status}</td>\r\n                                                    <td id=\"editColumn\" className=\"bugViewTable_td\">                            \r\n                                                        <Button variant=\"primary\" onClick={() => this.editBugButton(bug)}>\r\n                                                            Edit\r\n                                                    </Button>\r\n                                                    </td>\r\n                                                    <td id=\"deleteColumn\" className=\"bugViewTable_td\"> <Button variant=\"primary\" onClick={() => this.deleteBugButton(bug)}>Delete</Button></td>\r\n                                                    </tr>\r\n                                            )\r\n                                })}\r\n                                    </tbody>\r\n                                    </table>\r\n\r\n\r\n                        ) : ( <h3> No Results to Display </h3>  )} \r\n                                <br />\r\n                                    <br />\r\n                        <Button type=\"button\" className=\"btn btn-primary\" onClick={this.createNewBugButton}>Create New Bug</Button>\r\n\r\n                       \r\n                       \r\n                       \r\n                \r\n                        {/* This modal will pop up for editing bugs! */}\r\n                        <Modal show={this.state.showModal} animation={false}>\r\n                            <Modal.Header>\r\n                                <Modal.Title>{this.state.currentModalTitle}</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n\r\n\r\n                                <Input label=\"Bug Title\" onBlur={this.formatInput.bind(this)} value={this.state.bugTitleInModal} id=\"bugTitleInModal\" onChange={this.handleChange.bind(this)} name=\"bugTitleInModal\" />\r\n\r\n\r\n                                <TextArea label=\"Bug Description\" onBlur={this.formatInput.bind(this)} value={this.state.bugDescriptionInModal} id=\"bugDescriptionInModal\" onChange={this.handleChange.bind(this)} name=\"bugDescriptionInModal\" />\r\n                                <br />\r\n                                <br />\r\n                                <label><strong>Assignee</strong></label>\r\n                                <select value={this.state.bugUserAssignedInModal} onChange={this.handleChange.bind(this)} id=\"bugUserAssignedInModal\" name=\"bugUserAssignedInModal\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tawny\">Tawny</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Anthony\">Anthony</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Tyler\">Tyler</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Arthur\">Arthur</option>\r\n                                </select>\r\n\r\n                                <br />\r\n\r\n                                <br />\r\n                                <label><strong>Status</strong></label>\r\n                                <select value={this.state.bugStatusInModal} onChange={this.handleChange.bind(this)} id=\"bugStatusInModal\" name=\"bugStatusInModal\">\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"\"></option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Open\">Open</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"In Development\">In Development</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Needs Testing\">Needs Testing</option>\r\n                                    <option className=\"dropdown-item\" href=\"#\" value=\"Completed\">Completed</option>\r\n                                </select>\r\n\r\n\r\n                                <br />\r\n                                <br />\r\n                                {/* BUG COMMENT SECTION */}\r\n\r\n                                {this.state.isNewBug ? \r\n\r\n                                    \"\": <div>\r\n\r\n\r\n                                        <hr />\r\n                                        {this.state.bugCommentsInModal.length ? (\r\n                                            <BugCommentContainer>\r\n                                                <div className=\"bugCommentContainer\">\r\n                                                    {this.state.bugCommentsInModal.map(bugComment => {\r\n                                                        let boundBugCommentClick = this.deleteBugComment.bind(this, bugComment);\r\n                                                        return (\r\n                                                            <BugCommentPanel key={bugComment._id} text={bugComment.text}>\r\n                                                                <div>\r\n                                                                    <button className='btn btn-danger bugComment-delete insideNote' onClick={boundBugCommentClick}> X </button>\r\n                                                                </div>\r\n\r\n                                                            </BugCommentPanel>\r\n                                                        );\r\n                                                    })}\r\n                                                </div>\r\n                                            </BugCommentContainer>\r\n                                        ) : (\r\n                                                <h3> There are no comments! </h3>\r\n                                            )}\r\n\r\n\r\n                                        <Input placeholder='Bug Comment'\r\n                                            id=\"currentBugCommentInModal\"\r\n                                            onBlur={this.formatInput.bind(this)}\r\n                                            value={this.state.currentBugCommentInModal}\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"currentBugCommentInModal\"\r\n                                        />\r\n                                        <Button className='btn btn-success save' onClick={() => this.addBugComment()}>Save Comment</Button>\r\n                                        <Button className='btn btn-danger note-delete noteModal' onClick={() => this.closeModal()}>X</Button>\r\n\r\n                                    </div>\r\n                                }\r\n\r\n                                {/* END OF BUG COMMENT SECTION */}\r\n\r\n\r\n\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                                    Close\r\n                                  </Button>\r\n                                <Button variant=\"primary\" onClick={this.updateOrCreateBug}>\r\n                                    Save Changes\r\n                              </Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n\r\n                                \r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BugViewPage;\r\n","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./create-bug.css\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass BugViewPage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            bugTitle: \"\",\r\n            bugDescription: \"\",\r\n            sampleBugViewTableData: [{ id: \"1\", BugTitle: \"Title A\", BugDescription: \"Test A\" }, { id: \"2\", BugTitle: \"Title B\", BugDescription: \"Test B\" }, { id: \"3\", BugTitle: \"Title C\", BugDescription: \"Test C\" }]\r\n        };\r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    //Standard method for constantly updating input, since UI is constantly refreshing\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container id=\"containerViewBugs\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugTrackerTitle\">Create Bug Task</h1>\r\n                            </Container>\r\n                        </div>\r\n                        \r\n                        <p>Bug Title</p>\r\n                        <Input onBlur={this.formatInput.bind(this)} value={this.state.emailAddress} id=\"BugTitle\" onChange={this.handleChange.bind(this)} name=\"BugTitle\" />\r\n\r\n                        \r\n                        <TextArea label=\"Bug Description\" onBlur={this.formatInput.bind(this)} value={this.state.emailAddress} id=\"BugDescription\" onChange={this.handleChange.bind(this)} name=\"BugDescription\"/>\r\n\r\n                        <Button>Save Bug</Button><Button>View Bugs</Button>\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default BugViewPage;","import React, { Component } from \"react\";\r\nimport { Col, Row, Container } from \"../../components/Grid\";\r\nimport { BugListTableRow } from \"../../components/BugListTableRow\";\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Input, Button, TextArea } from \"../../components/Form\";\r\nimport Cookies from 'universal-cookie';\r\nimport API from \"../../utils/API\";\r\nimport \"./profile.css\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { withRouter } from 'react-router';\r\n// import \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            firstName:\"\",\r\n            loggedIn: this.props.loggedIn,\r\n            redirectTo: null,\r\n            setPasswordFieldsActiveInModal: false,\r\n            setCreateOrganizationFieldsActiveInModal: false,\r\n            setJoinOrganizationFieldsActiveInModal: false,\r\n            formErrors: { oldPassword: \"\", newPassword1and2:\"\", organizationName:\"\", organizationID:\"\" },\r\n            oldPassword: \"\",\r\n            newPassword1: \"\",\r\n            newPassword2: \"\",\r\n            organizationNameInModal: \"\",\r\n            organizationIDInModal: \"\",\r\n            oldPasswordValid: false,\r\n            newPassword1and2Valid: false,\r\n            organizationNameValid: false,\r\n            organizationIDValid: false,\r\n            showModal: false,\r\n            currentModalTitle: \"\",\r\n            userData: [],\r\n            organizations: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n      \r\n        console.log(\"Component mounted in Profile, below is MongoID\");\r\n        console.log(this.props.mongoID);\r\n        this.getOrganizationsOfUserInDB();\r\n        \r\n    }\r\n\r\n    //This is used onBlur in order to trim the values. \r\n    formatInput = (event) => {\r\n        const attribute = event.target.getAttribute('name')\r\n        this.setState({ [attribute]: event.target.value.trim() })\r\n    }\r\n\r\n    //Standard method for constantly updating input, since UI is constantly refreshing\r\n    handleChange(e) {\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    }\r\n\r\n    errorClass(error) {\r\n        return (error.length === 0 ? \"\" : \"has-error\");\r\n    }\r\n\r\n    validateFields() {\r\n        let fieldValidationErrors = this.state.formErrors;\r\n        let oldPasswordValid = this.state.oldPassword;\r\n        let newPassword1and2Valid = this.state.newPassword1Valid;\r\n\r\n\r\n        //Validating that old password is greater than 6 characters. We'll check the DB to see if this is accurate. Password is NEVER sent to client. \r\n        oldPasswordValid = this.state.oldPassword >= 6;\r\n        fieldValidationErrors.oldPassword = oldPasswordValid ? \"\" : \"Old password must be atleast 6 characters long.\";\r\n\r\n\r\n        //Validating between the new password field and \"confirm password\" field that they match and are greather than or equal to 6 characters\r\n        newPassword1and2Valid = this.state.newPassword1 === this.state.newPassword2 && this.state.newPassword1.length >= 6;\r\n        fieldValidationErrors.newPassword1and2Valid = \"New password doesn't match or your password is less than 6 characters long.\";\r\n   \r\n\r\n        //TODO --- HANDLE FORM VALIDATION\r\n\r\n        // this.setState({\r\n        //     formErrors: fieldValidationErrors,\r\n        //     oldPasswordValid: oldPasswordValid,\r\n        //     newPassword1and2Valid: newPassword1and2Valid\r\n        // }, () => {\r\n        //     this.attemptToSavePasswordToDB();\r\n        // });\r\n    }\r\n\r\n\r\n    \r\n    handleChangePasswordButtonClick = event => {\r\n        //event.preventDefault();\r\n\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Change Password\",\r\n            setPasswordFieldsActiveInModal: true\r\n        });\r\n\r\n\r\n    }\r\n\r\n\r\n    //************************THESE METHODS ARE CALLED FROM BUTTONS WITHIN THE MODAL*********************\r\n    handleUpdatePassword = () => {\r\n\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID\r\n        }\r\n        API.updateUserInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"UpdatePassword successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n\r\n                } else {\r\n                    console.log(\"Updating USER PASSWORD WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                    this.setState({ showModal: false });\r\n                }\r\n            })\r\n        \r\n    }\r\n    closeModal = () => {\r\n        this.setState({ showModal: false });\r\n    }\r\n    //*********************** END OF MODAL BUTTON CLICK METHODS ****************************\r\n\r\n    //*************************METHODS BELOW RELATED TO ORGANIZATION BUTTON CLICKS ******************/\r\n    handleEditOrganizationButtonClick(organizationClickedOn) {\r\n        //event.preventDefault();\r\n\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Edit Organization\",\r\n            setCreateOrganizationFieldsActiveInModal: true,\r\n            setPasswordFieldsActiveInModal: false\r\n        });\r\n    }\r\n    handleDeleteOrganizationButtonClick(organizationClickedOn) {\r\n        // console.log(\"Delete Bug Clicked on!!! \");\r\n        // this.deleteBugInDB(bugClickedOn);\r\n        // this.renderBugComments(bugClickedOn);\r\n    }\r\n    handleViewBugsOrganizationButtonClick(organizationClickedOn) {\r\n        // console.log(\"Delete Bug Clicked on!!! \");\r\n        // this.deleteBugInDB(bugClickedOn);\r\n        // this.renderBugComments(bugClickedOn);\r\n    }\r\n\r\n    handleCreateOrganizationButtonClick = event => {\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Create Organization\",\r\n            setPasswordFieldsActiveInModal: false,\r\n            setCreateOrganizationFieldsActiveInModal: true,\r\n            setJoinOrganizationFieldsActiveInmodal: false\r\n        });\r\n\r\n    }\r\n\r\n    handleJoinOrganizationButtonClick = event => {\r\n        this.setState({\r\n            showModal: true,\r\n            currentModalTitle: \"Join Organization\",\r\n            setPasswordFieldsActiveInModal: false,\r\n            setCreateOrganizationFieldsActiveInModal: false,\r\n            setJoinOrganizationFieldsActiveInModal: true\r\n        })\r\n\r\n    }\r\n\r\n    //*** METHODS BELOW RELATED TO DB WITH ORGANIZATIONS */ */\r\n    saveOrganizationInDB = () => {\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID,\r\n            organizationName: this.state.organizationNameInModal,\r\n            organizationID: this.state.organizationIDInModal\r\n        }\r\n\r\n        API.saveOrganizationInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    console.log(\"SAVE ORGANIZATION successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n\r\n                } else {\r\n                    console.log(\"SAVE ORGANIZATION WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                    this.setState({ showModal: false });\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n\r\n    getOrganizationsOfUserInDB() {\r\n\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID\r\n        }\r\n\r\n        API.getOrganizationsOfUserInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    //If we find no error, then we successful got the user's list of organizations. Update state with organizations.\r\n                    console.log(\"getOrganizationsOfUserInDB successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n\r\n                    this.setState({\r\n                        organizations: response.data.organizations\r\n                    })\r\n\r\n                } else {\r\n                    console.log(\"getOrganizationsOfUserInDB WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                    this.setState({ showModal: false });\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    attachUserToOrganizationInDB() {\r\n        let userObj = {\r\n            password: this.state.oldPassword,\r\n            newPassword: this.state.newPassword1,\r\n            username: this.props.username,\r\n            mongoID: this.props.mongoID\r\n        }\r\n        API.attachUserToOrganizationInDB(userObj)\r\n            .then(response => {\r\n\r\n                if (!response.data.error) {\r\n                    //If we find no error, then we successful got the user's list of organizations. Update state with organizations.\r\n                    console.log(\"attachUserToOrganizationInDB successful in Profile Page, below is response.data\");\r\n                    console.log(response.data);\r\n\r\n                    this.setState({\r\n                        organizations: response.data.organizations\r\n                    })\r\n\r\n                } else {\r\n                    console.log(\"attachUserToOrganizationInDB WAS A FAIL!!!! Below is the response.data\");\r\n                    console.log(response.data);\r\n                    this.setState({ showModal: false });\r\n                    this.forceUpdate();\r\n                }\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n    \r\n    render() {\r\n        return (\r\n            <Container id=\"containerViewBugs\" fluid=\"true\">\r\n\r\n                <Row id=\"mainRow\">\r\n                    <Col size=\"sm-12\">\r\n                        <div className=\"jumbotron jumbotron-fluid\">\r\n                            <Container id=\"container\" fluid=\"true\">\r\n                                <h1 className=\"display-4 BugTrackerTitle\">Welcome, {this.props.firstName}!</h1>\r\n                            </Container>\r\n                        </div>\r\n\r\n                        <Link to=\"/bug-view\" className=\"log\" ><Button>View Bugs</Button></Link>\r\n                        <Button onClick={this.handleChangePasswordButtonClick.bind(this)}>Change Password</Button>\r\n                        <Button onClick={this.handleCreateOrganizationButtonClick.bind(this)}>Create Organization</Button>\r\n                        <Button onClick={this.handleJoinOrganizationButtonClick.bind(this)}>Join Organization</Button>\r\n                        <br />\r\n                        <br />\r\n                        {this.state.organizations.length > 0 ? (\r\n                            <table id=\"organizationTable_Table\" className=\"table table-hover bugViewTable_Table\">\r\n                                <thead id=\"organizationTable_head\" className=\"thead-dark\">\r\n                                    <tr>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\">Name</th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\">Organization ID</th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\"></th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\"></th>\r\n                                        <th className=\"organizationTable_th\" scope=\"col\"></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {this.state.organizations.map(organization => {\r\n                                        return (\r\n                                            <tr className=\"organizationTable_tr\" key={organization.id}>\r\n                                                <td className=\"organizationTable_td\">{organization.name}</td>\r\n                                                <td className=\"organizationTable_td\">{organization.organizationID}</td>\r\n                                                <td className=\"organizationTable_td\"><Button variant=\"primary\" onClick={() => this.handleViewBugsOrganizationButtonClick(organization)}>\r\n                                                    View Bugs\r\n                                                    </Button></td>\r\n                                                <td id=\"editColumn\" className=\"organizationTable_td\">\r\n                                                    <Button variant=\"primary\" onClick={() => this.handleEditOrganizationButtonClick(organization)}>\r\n                                                        Edit\r\n                                                    </Button>\r\n                                                </td>\r\n                                                <td id=\"deleteColumn\" className=\"organizationTable_td\"> <Button variant=\"primary\" onClick={() => this.handleCreatedOrganizationButtonClick(organization)}>Delete</Button></td>\r\n                                            </tr>\r\n                                        )\r\n                                    })}\r\n                                </tbody>\r\n                            </table>\r\n\r\n\r\n                        ) : (<h3> No Results to Display </h3>)}\r\n                        <br />\r\n                        <br />\r\n\r\n                        {/* This modal will pop up for changing password! */}\r\n                        <Modal show={this.state.showModal} animation={false}>\r\n                            <Modal.Header>\r\n                                <Modal.Title>{this.state.currentModalTitle}</Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n\r\n                                {this.state.setPasswordFieldsActiveInModal ?\r\n                                    <div>\r\n                                        <p>Old Password</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.oldPasswordValid.toString()}\r\n                                            fielderror={this.state.formErrors.oldPassword}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.oldPassword)}`}\r\n                                            value={this.state.oldPassword}\r\n                                            id=\"oldPassword\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"oldPassword\"></Input>\r\n\r\n                                        <p>New Password</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.newPassword1and2Valid.toString()}\r\n                                            fielderror={this.state.formErrors.newPassword1}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.newPassword1and2)}`}\r\n                                            value={this.state.newPassword1}\r\n                                            id=\"newPassword1\" onChange={this.handleChange.bind(this)}\r\n                                            name=\"newPassword1\"></Input>\r\n\r\n                                        <p>Confirm New Password</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)} isvalid={this.state.newPassword1and2Valid.toString()}\r\n                                            fielderror={this.state.formErrors.newPassword2}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.newPassword1and2)}`}\r\n                                            value={this.state.newPassword2}\r\n                                            id=\"newPassword2\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"newPassword2\"></Input>\r\n\r\n                                    </div>\r\n                                    :\r\n                                    <div>\r\n                                        {this.state.setPasswordFieldsActiveInModal ?\r\n                                        <div>\r\n                                            <p>Please enter the Organization ID of the organization you wish to join:</p>\r\n                                            <Input onBlur={this.formatInput.bind(this)}\r\n                                                isvalid={this.state.organizationIDValid.toString()}\r\n                                                fielderror={this.state.formErrors.organizationIDInModal}\r\n                                                formgroupclass={`form-group ${this.errorClass(this.state.formErrors.organizationID)}`}\r\n                                                value={this.state.organizationIDInModal}\r\n                                                id=\"organizationIDInModal\" onChange={this.handleChange.bind(this)}\r\n                                                name=\"organizationIDInModal\"></Input>\r\n                                            \r\n                                        </div>\r\n                                        :\r\n                                        <div>\r\n                                        <p>Organization Name</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.organizationNameValid.toString()}\r\n                                            fielderror={this.state.formErrors.oldPassword}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.organizationName)}`}\r\n                                            value={this.state.organizationNameInModal}\r\n                                            id=\"organizationNameInModal\"\r\n                                            onChange={this.handleChange.bind(this)}\r\n                                            name=\"organizationNameInModal\"></Input>\r\n\r\n                                        <p>Organization ID (Use this number to invite people)</p>\r\n                                        <Input onBlur={this.formatInput.bind(this)}\r\n                                            isvalid={this.state.organizationIDValid.toString()}\r\n                                            fielderror={this.state.formErrors.organizationIDInModal}\r\n                                            formgroupclass={`form-group ${this.errorClass(this.state.formErrors.organizationID)}`}\r\n                                            value={this.state.organizationIDInModal}\r\n                                            id=\"organizationIDInModal\" onChange={this.handleChange.bind(this)}\r\n                                            name=\"organizationIDInModal\"></Input>\r\n                                        </div>\r\n\r\n                                        }\r\n\r\n                                    </div>\r\n                                    \r\n                                    \r\n                                    \r\n                                    \r\n                                    }\r\n\r\n\r\n\r\n\r\n                            </Modal.Body>\r\n                            <Modal.Footer>\r\n                                <Button variant=\"secondary\" onClick={this.closeModal}>\r\n                                    Close\r\n                                  </Button>\r\n                                {this.state.setPasswordFieldsActiveInModal ?\r\n                                        <Button variant=\"primary\" onClick={this.handleUpdatePassword}>\r\n                                        Save Changes\r\n                                        </Button>\r\n                                    :\r\n\r\n\r\n                                    <div>\r\n                                        {this.state.setJoinOrganizationFieldsActiveInModal ?\r\n                                            <Button variant=\"primary\" onClick={this.attachUserToOrganizationInDB}>\r\n                                                Submit</Button> : \r\n                                            <Button variant=\"primary\" onClick={this.saveOrganizationInDB}>\r\n                                                Submit</Button>}\r\n                                    </div>\r\n                                    }\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Container>\r\n        );\r\n\r\n    \r\n}\r\n}\r\n\r\n// export default Profile;\r\nexport default withRouter(Profile);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nimport LandingPage from \"./pages/landing-page\";\nimport BugView from \"./pages/bug-view\";\nimport CreateBug from \"./pages/create-bug\";\nimport Profile from \"./pages/profile\";\nimport API from \"./utils/API\";\nimport { withRouter } from 'react-router';\n\nimport \"./App.css\";\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.state = {\n      loggedIn: false,\n      user: null,\n      firstName: null,\n      lastName: null,\n      mongoID: null,\n      password: null,\n      redirectTo: null\n    }\n    this._login = this._login.bind(this)\n  }\n  componentDidMount() {\n    API.user().then(response => {\n      if (!!response.data.user) {\n        console.log(\"Attempt to login on App.js from componentDidMount\");\n        console.log(response.data);\n        this.setState({\n          loggedIn: true,\n          user: response.data.user,\n          userId: response.data.user._id,\n        });\n        console.log(\"login passed!! User is not authenticated. (App.js - componentDidMount)\");\n      } else {\n        console.log(\"Login failed!!! User is not authenticated. (App.js - componentDidMount)\");\n        this.setState({\n          loggedIn: false,\n          // redirectTo: \"/landing-page\",\n          user: null\n        })\n      }\n    })\n  }\n\n  _login(username, password) {\n    console.log(\"I called _login from App.js\");\n    var userData = {\n      username: username,\n      password: password,\n    }\n    API\n      .login(userData)\n      .then(response => {\n        console.log(\"attempt to login from app.js _login\");\n        console.log(response);\n        if (response.status === 200) {\n          console.log(\"ATTEMPTING TO CONSOLE LOG EMAIL IN _LOGIN IN App.js\");\n          console.log(response.data);\n            if(response.data.loggedInSuccess){\n\n            \n          //var data = JSON.parse(response.data);\n         // console.log(response);\n         console.log(\"_login from App.js is SUCCESSFUL, below is the response data\");\n         console.log(response.data);\n          // update the state\n          this.setState({\n            loggedIn: true,\n            username: response.data.username,\n            mongoID: response.data.mongoID,\n            firstName: response.data.firstName,\n            lastName: response.data.lastName,\n            password: response.data.password,\n            redirectTo: \"/profile\"\n          })\n          //this.props.history.push(\"/profile\");\n\n\n        }else {\n            console.log(\"logged in FAILED!!!\");\n            console.log(response);\n              this.setState({\n                loggedIn: false\n              })\n        }\n        }\n      })\n  }\n\n    render() {\n      //IF USER IS AUTHENTICATED RENDER THIS\n      if (this.state.loggedIn) {\n        console.log(\"redirectTO has been called!!!\");\n        console.log(this.state.redirectTo);\n        return(\n\n            <div className=\"App\">\n              <div>\n\n        <Redirect exact to={{ pathname: this.state.redirectTo }} render={() =>\n          <LandingPage\n            _login={this._login}\n\n          />}/> \n\n          \n          <Route exact path=\"/landing-page\"\n            render={() =>\n              <LandingPage\n                _login={this._login}\n\n              />} />\n          <Route exact path=\"/bug-view\" component={BugView} />\n          <Route exact path=\"/create-bug\" component={CreateBug} />\n              <Route exact path=\"/profile\" render={() => <Profile loggedIn={this.state.loggedIn} username={this.state.username} mongoID={this.state.mongoID} firstName={this.state.firstName}/>} />\n\n          <Route exact path=\"/\" render={() => (\n            <Redirect to=\"/landing-page\" />\n          )} />\n\n          </div>\n          </div>\n\n        )\n      }\n\n\n      //IF USER IS NOT AUTHENTICATED, RENDER JUST THE LANDING PAGE\n      return (\n        <div className=\"App\">\n       <div>\n            <Route exact path=\"/landing-page\" \n                  render={() =>\n                    <LandingPage\n                      _login={this._login}\n\n                    />} />\n\n                <Route exact path=\"/\" render={() => (\n                  <Redirect to=\"/landing-page\" />\n                )} />\n\n            <Redirect from=\"*\" to=\"/landing-page\" />\n  \n             </div>\n       </div>\n      )      \n    }\n\n  }\nexport default App;\n// export default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { BrowserRouter } from 'react-router-dom'\nimport { BrowserRouter as Router, Route, Switch, Redirect } from \"react-router-dom\";\nReactDOM.render(\n    // <App /> \n   \n <BrowserRouter> \n\n\n    \n    <Switch>\n    <Route component={App} />\n\n                </Switch>\n \n </BrowserRouter>\n\n  , document.getElementById(\"root\"));\n\n"],"sourceRoot":""}